var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AdminComponent.html",[0,0.487,1,1.107]],["body/components/AdminComponent.html",[0,0.725,1,1.786,2,1.512,3,0.166,4,0.142,5,1.144,6,1.293,7,1.144,8,1.144,9,0.119,10,2.716,11,1.144,12,2.497,13,2.497,14,2.386,15,1.606,16,1.512,17,1.606,18,2.099,19,1.786,20,1.816,21,5.184,22,1.606,23,4.485,24,0.142,25,1.059,26,4.485,27,0.709,28,1.981,29,2.829,30,0.937,31,3.193,32,1.059,33,0.023,34,1.174,35,0.2,36,0.937,37,4.485,38,0.526,39,3.193,40,2.782,41,0.754,42,1.144,43,0.73,44,0.383,45,1.293,46,1.215,47,1.825,48,2.168,49,0.166,50,0.414,51,0.709,52,2.403,53,2.716,54,3.193,55,3.216,56,0.021,57,5.224,58,5.622,59,0.825,60,4.621,61,3.81,62,4.621,63,3.815,64,2.716,65,3.193,66,3.832,67,1.825,68,2.403,69,3.193,70,2.168,71,2.168,72,2.168,73,3.488,74,3.029,75,2.716,76,2.403,77,2.403,78,1.981,79,3.193,80,3.375,81,3.375,82,2.403,83,2.782,84,2.716,85,2.716,86,2.963,87,3.193,88,2.716,89,2.716,90,3.193,91,3.488,92,3.045,93,3.193,94,3.815,95,3.815,96,1.707,97,3.193,98,2.403,99,2.716,100,3.193,101,3.193,102,4.485,103,2.716,104,4.783,105,3.193,106,5.184,107,2.403,108,3.193,109,3.193,110,3.193,111,2.716,112,3.193,113,1.144,114,1.606,115,1.606,116,1.144,117,2.013,118,1.144,119,1.144,120,1.015,121,1.606,122,1.606,123,1.015,124,1.144,125,1.015,126,1.606,127,1.077,128,1.606,129,1.015,130,1.144,131,1.015,132,1.015,133,1.144,134,1.015,135,1.015,136,1.144,137,1.015,138,1.015,139,1.144,140,1.144,141,1.077,142,1.015,143,0.801,144,1.144,145,1.144,146,0.014]],["title/components/AdminExamComponent.html",[0,0.487,120,1.107]],["body/components/AdminExamComponent.html",[0,0.464,1,0.497,2,0.874,3,0.081,4,0.07,5,0.56,6,1.343,7,0.56,8,0.56,9,0.058,11,0.56,12,2.203,13,2.203,14,1.964,15,0.928,16,1.3,17,0.928,18,1.343,19,1.225,20,1.049,22,0.928,24,0.115,25,0.612,27,0.348,30,1.27,32,0.91,33,0.024,34,0.962,35,0.227,36,0.805,38,0.336,41,1.249,42,2.225,43,0.662,44,0.188,45,0.633,46,0.595,47,0.894,48,1.062,49,0.081,50,0.203,51,0.348,56,0.008,59,1.256,61,2.651,64,1.331,66,1.481,67,1.481,68,1.177,70,1.759,71,1.759,72,2.251,73,3.282,74,2.609,78,0.971,80,1.177,81,3.464,82,1.949,84,2.204,85,2.204,86,3.516,88,3.28,89,1.331,91,0.971,92,1.062,98,1.177,99,1.331,107,1.177,111,1.331,113,0.56,114,0.928,115,0.928,116,0.56,117,1.381,118,0.56,119,0.56,120,1.225,121,0.928,122,0.928,123,0.497,124,0.56,125,0.497,126,0.928,127,0.528,128,0.928,129,0.497,130,0.56,131,0.497,132,0.497,133,0.56,134,0.497,135,0.497,136,0.56,137,0.497,138,0.497,139,0.56,140,0.56,141,0.528,142,0.497,143,0.392,144,0.56,145,0.56,146,0.008,147,3.816,148,5.233,149,1.331,150,1.194,151,1.635,152,2.495,153,2.057,154,2.821,155,2.204,156,0.155,157,2.283,158,4.875,159,3.315,160,2.821,161,3.315,162,3.855,163,3.855,164,3.855,165,1.902,166,2.901,167,2.59,168,3.855,169,2.59,170,2.59,171,1.564,172,2.901,173,2.583,174,2.583,175,2.59,176,2.59,177,1.564,178,1.564,179,1.564,180,1.564,181,1.564,182,2.59,183,1.564,184,3.215,185,1.564,186,2.59,187,1.564,188,2.59,189,1.564,190,0.892,191,0.892,192,2.283,193,1.564,194,2.495,195,1.564,196,1.564,197,1.968,198,1.564,199,1.564,200,1.177,201,0.894,202,1.062,203,1.381,204,1.952,205,1.062,206,1.062,207,0.508,208,1.564,209,4.272,210,2.59,211,1.331,212,1.331,213,1.331,214,1.564,215,1.564,216,1.732,217,3.668,218,2.353,219,1.987,220,1.987,221,1.826,222,1.564,223,1.987,224,1.987,225,2.104,226,1.987,227,1.844,228,0.469,229,1.331,230,1.331,231,3.024,232,1.564,233,5.452,234,1.118,235,1.564,236,2.59,237,3.855,238,2.821,239,1.564,240,3.215,241,3.634,242,3.634,243,3.634,244,3.315,245,4.272,246,3.315,247,4.875,248,3.315,249,4.147,250,3.315,251,2.59,252,3.315,253,1.564,254,1.331,255,1.177,256,1.564,257,1.564,258,0.369,259,1.664,260,2.59,261,2.59,262,2.59,263,2.59,264,1.564,265,2.59,266,2.59,267,2.59,268,2.59,269,1.564,270,1.564,271,3.315,272,3.855,273,1.949,274,2.59,275,1.564,276,3.315,277,2.59,278,1.564,279,1.564,280,1.902,281,2.857,282,2.59,283,3.28,284,1.607,285,2.59,286,4.604,287,2.392,288,0.576,289,0.612,290,3.28,291,2.047,292,2.901,293,1.467,294,1.987,295,3.28,296,2.59,297,2.59,298,2.59,299,2.59,300,1.467,301,1.759,302,2.59,303,1.759,304,1.564,305,2.204,306,1.564,307,3.315,308,2.204,309,1.564,310,3.315,311,1.564,312,2.59,313,3.855,314,3.315,315,2.59,316,1.564,317,2.59,318,3.855,319,2.618,320,1.759,321,2.59,322,1.564,323,3.315,324,2.59,325,1.564,326,1.564,327,1.062,328,1.062,329,0.894,330,1.564,331,1.564,332,1.564,333,1.177,334,1.564,335,1.564,336,2.204,337,2.204,338,1.331,339,1.564,340,1.564,341,1.564,342,2.59,343,1.564,344,1.564,345,1.564,346,1.564,347,1.564,348,1.564,349,1.564,350,2.59,351,3.024,352,2.59,353,1.062,354,1.564,355,1.564,356,1.564,357,1.331,358,1.564,359,1.564,360,1.564,361,1.564]],["title/components/AdminNavbarComponent.html",[0,0.487,19,1.107]],["body/components/AdminNavbarComponent.html",[0,0.722,1,1.006,2,1.503,3,0.165,4,0.141,5,1.134,7,1.134,8,1.134,9,0.118,11,1.134,12,2.495,13,2.495,14,2.296,15,1.597,16,1.503,17,1.597,18,2.09,19,1.78,22,1.597,24,0.141,25,1.053,27,0.99,28,1.964,29,3.009,30,1.342,32,0.747,33,0.024,34,1.078,35,0.23,36,0.661,38,0.452,40,2.766,41,1.322,42,2.006,43,0.766,44,0.38,45,1.282,46,1.205,47,3.733,49,0.165,50,0.411,56,0.014,59,0.82,62,3.355,113,1.134,114,1.597,115,1.597,116,1.134,117,2.006,118,1.134,119,1.134,120,1.006,121,1.597,122,1.597,123,1.006,124,1.134,125,1.006,126,1.597,127,1.068,128,1.597,129,1.006,130,1.134,131,1.006,132,1.006,133,1.134,134,1.006,135,1.006,136,1.134,137,1.006,138,1.006,139,1.848,140,1.134,141,1.068,142,1.006,143,0.794,144,1.134,145,1.134,146,0.014,147,4.052,150,2.054,151,2.545,153,3.201,156,0.266,165,2.763,174,3.334,190,0.931,191,0.931,192,1.924,197,2.581,206,2.15,207,0.621,280,1.562,281,2.766,289,1.053,362,2.694,363,3.504,364,3.793,365,3.793,366,3.793,367,3.883,368,3.883,369,4.39,370,4.608,371,4.765,372,4.765,373,4.458,374,3.166,375,3.166,376,3.166,377,3.166,378,3.166,379,3.166,380,3.793,381,2.382,382,2.694,383,2.694,384,4.39,385,1.459,386,4.39,387,2.694,388,2.694,389,2.199,390,2.694,391,2.694,392,2.694,393,2.694,394,2.694,395,2.694,396,2.694,397,2.694,398,2.694,399,2.694,400,2.382,401,2.382,402,2.694,403,3.355,404,2.694,405,3.355,406,3.793,407,3.027]],["title/components/AdminReportComponent.html",[0,0.487,123,1.107]],["body/components/AdminReportComponent.html",[0,0.5,1,0.555,2,0.956,3,0.091,4,0.078,5,0.625,6,0.707,7,0.625,8,0.625,9,0.105,11,0.625,12,2.257,13,2.257,14,2.024,15,1.015,16,1.207,17,1.015,18,1.449,19,1.309,20,1.148,22,1.015,24,0.078,25,0.669,27,0.388,30,1.15,32,0.412,33,0.024,34,1.15,35,0.216,36,0.365,38,0.363,41,0.845,42,1.737,43,0.63,44,0.209,46,0.664,47,0.998,48,1.185,49,0.091,50,0.226,51,0.388,53,1.485,56,0.009,59,1.086,77,3.099,86,1.62,113,0.625,114,1.015,115,1.015,116,0.625,117,1.475,118,0.625,119,0.625,120,0.555,121,1.015,122,1.015,123,1.309,124,0.625,125,0.555,126,1.015,127,0.589,128,1.015,129,0.555,130,0.625,131,0.555,132,0.555,133,0.625,134,0.555,135,0.555,136,0.625,137,0.555,138,0.555,139,1.83,140,0.625,141,0.589,142,0.555,143,1.504,144,0.625,145,0.625,146,0.009,147,3.509,150,1.306,151,1.765,156,0.169,165,2.031,190,1.013,191,1.254,192,2.497,201,0.998,216,1.541,221,1.475,228,0.523,231,3.778,259,0.753,273,2.132,288,0.63,291,2.234,293,2.027,408,4.812,409,1.485,410,5.787,411,3.044,412,3.578,413,2.834,414,2.81,415,3.408,416,3.578,417,3.578,418,3.578,419,3.503,420,4.118,421,1.745,422,3.294,423,2.834,424,1.745,425,1.745,426,1.745,427,1.745,428,1.745,429,4.118,430,5.325,431,0.86,432,4.007,433,2.411,434,2.411,435,2.411,436,4.118,437,2.411,438,3.044,439,2.132,440,4.118,441,1.501,442,1.924,443,2.411,444,2.834,445,4.118,446,3.503,447,3.503,448,1.745,449,1.745,450,1.745,451,1.485,452,1.313,453,1.745,454,3.099,455,3.503,456,1.313,457,4.256,458,4.528,459,3.01,460,1.745,461,4.851,462,3.853,463,1.745,464,3.304,465,1.475,466,3.853,467,1.745,468,1.745,469,1.745,470,1.745,471,1.745,472,1.313,473,1.083,474,4.851,475,3.853,476,1.745,477,1.745,478,4.118,479,1.745,480,2.834,481,3.578,482,3.578,483,3.578,484,2.834,485,1.745,486,2.834,487,2.229,488,1.745,489,3.578,490,1.745,491,1.745,492,1.745,493,1.745,494,4.348,495,1.745,496,1.745,497,1.745,498,1.745,499,1.485,500,1.745,501,1.745,502,1.485,503,1.745,504,4.118,505,2.834,506,2.132,507,2.834,508,4.118,509,2.834,510,2.031,511,2.57,512,3.294,513,2.796,514,3.294,515,3.503,516,4.118,517,4.851,518,4.851,519,4.851,520,4.851,521,4.118,522,2.411,523,3.099,524,4.851,525,4.851,526,4.118,527,4.118,528,2.834,529,0.972,530,2.132,531,2.834,532,2.834,533,2.411]],["title/components/AdminResultComponent.html",[0,0.487,125,1.107]],["body/components/AdminResultComponent.html",[0,0.567,1,0.67,2,1.112,3,0.11,4,0.094,5,0.756,6,0.854,7,0.756,8,0.756,9,0.151,11,0.756,12,2.343,13,2.343,14,2.121,15,1.181,16,1.778,17,1.181,18,1.643,19,1.457,20,1.335,22,1.181,24,0.147,25,0.778,27,0.732,30,1.377,32,0.778,33,0.024,34,1.102,35,0.272,36,0.689,38,0.535,41,1.245,42,2.146,43,0.778,44,0.253,46,0.803,47,1.206,48,1.433,49,0.11,50,0.274,56,0.019,59,1.014,86,1.884,113,0.756,114,1.181,115,1.181,116,0.756,117,1.642,118,0.756,119,0.756,120,0.67,121,1.181,122,1.181,123,0.67,124,0.756,125,1.457,126,1.181,127,0.712,128,1.181,129,0.67,130,0.756,131,0.67,132,0.67,133,0.756,134,0.67,135,0.67,136,0.756,137,0.67,138,0.67,139,1.453,140,0.756,141,0.712,142,0.67,143,1.017,144,0.756,145,0.756,146,0.011,147,4.116,150,1.519,151,2.001,156,0.197,165,2.262,173,2.919,184,3.053,190,1.252,191,1.252,192,1.751,201,1.206,202,1.433,207,0.796,216,1.047,231,1.309,258,0.958,259,1.979,288,0.469,291,1.181,320,3.114,327,3.114,411,3.451,414,3.087,415,3.053,419,3.451,431,1.039,439,3.451,451,2.804,452,2.48,454,2.48,455,2.804,457,3.053,459,2.045,462,2.804,464,2.845,465,0.756,466,2.804,499,1.795,502,1.795,506,1.588,511,1.747,512,2.238,513,3.114,514,2.238,534,5.644,535,1.795,536,3.451,537,2.804,538,4.057,539,3.451,540,4.057,541,4.057,542,4.057,543,4.057,544,4.057,545,4.057,546,4.057,547,4.586,548,4.586,549,3.296,550,2.804,551,3.296,552,1.795,553,3.272,554,2.717,555,3.296,556,2.11,557,2.11,558,2.11,559,2.11,560,2.11,561,3.296,562,2.11,563,2.238,564,2.11,565,2.11,566,2.11,567,2.11,568,2.11,569,2.804,570,2.11,571,3.296,572,4.057,573,4.057,574,2.11,575,2.11,576,2.11,577,2.11,578,2.11,579,1.795,580,1.795,581,1.588,582,1.795,583,0.561,584,2.11,585,2.11,586,2.11,587,3.296,588,2.11,589,1.795,590,2.11,591,2.11,592,2.11,593,2.11,594,1.433,595,1.795,596,4.057,597,2.11,598,4.057,599,2.11,600,4.057,601,2.11,602,2.804,603,4.586,604,4.057,605,2.11,606,2.11,607,2.11,608,2.11,609,4.057,610,2.11,611,2.11,612,3.296,613,2.11,614,4.232,615,2.11,616,3.451,617,2.11,618,2.11,619,2.11,620,2.11,621,2.11,622,2.11,623,2.11,624,2.11,625,2.11,626,2.11,627,5.273,628,3.296,629,3.296,630,3.296,631,2.804,632,2.804,633,2.804,634,3.296,635,2.804,636,3.296,637,3.296,638,2.48]],["title/components/AppComponent.html",[0,0.487,129,1.107]],["body/components/AppComponent.html",[0,0.834,1,1.337,2,1.82,3,0.219,4,0.187,5,1.506,7,1.506,8,1.506,9,0.156,11,1.506,12,2.577,13,2.577,14,2.193,15,1.933,16,1.82,17,1.933,19,1.337,22,1.933,24,0.187,30,0.879,33,0.023,34,1.128,35,0.187,38,0.427,43,0.774,44,0.505,45,1.703,49,0.219,50,0.546,56,0.017,113,1.506,114,1.933,115,1.933,116,1.506,117,2.252,118,1.506,119,1.506,120,1.337,121,1.933,122,1.933,123,1.337,124,1.506,125,1.337,126,1.933,127,1.418,128,1.933,129,1.998,130,1.506,131,1.337,132,1.337,133,1.506,134,1.998,135,1.337,136,1.506,137,1.337,138,1.337,139,1.506,140,1.506,141,1.418,142,1.337,143,1.054,144,1.506,145,1.506,146,0.017,156,0.322,190,0.879,191,0.879,216,1.894,365,4.592,381,4.485,639,3.578,640,1.524,641,5.397,642,5.397,643,5.397,644,5.397,645,4.206,646,2.404]],["title/injectables/AuthGuardService.html",[647,0.561,648,2.622]],["body/injectables/AuthGuardService.html",[3,0.28,4,0.239,9,0.2,27,1.476,30,1.123,33,0.023,43,0.698,44,0.646,49,0.28,50,0.698,56,0.02,146,0.02,640,1.518,647,1.011,648,4.722,649,2.321,650,5.338,651,4.575,652,5.378,653,1.611]],["title/injectables/AuthService.html",[174,1.846,647,0.561]],["body/injectables/AuthService.html",[3,0.188,4,0.161,9,0.135,24,0.161,25,1.154,27,0.804,30,1.405,32,1.154,33,0.024,34,1.021,35,0.218,36,1.021,38,0.628,41,1.4,42,1.983,43,0.77,44,0.435,49,0.188,50,0.47,51,0.804,56,0.016,143,1.388,146,0.016,156,0.292,174,2.591,190,1.021,191,1.021,197,2.732,207,1.28,258,1.4,259,2.559,281,2.246,288,1.376,367,4.167,368,4.167,370,4.66,385,2.732,389,2.925,400,2.724,456,2.724,473,2.246,510,2.412,550,4.16,583,0.963,640,1.022,647,0.788,649,1.562,653,1.084,654,3.08,655,5.537,656,5.93,657,5.93,658,3.62,659,4.802,660,4.711,661,5.045,662,4.89,663,3.62,664,3.62,665,4.89,666,3.62,667,4.657,668,3.62,669,4.89,670,4.89,671,3.62,672,3.62,673,3.62,674,3.62,675,3.62,676,3.62,677,2.724,678,2.724,679,2.724,680,3.08,681,3.679,682,4.89,683,3.62,684,4.89,685,4.89,686,3.62,687,4.16,688,4.89,689,3.62,690,4.89,691,4.89,692,1.465,693,3.62,694,3.62,695,3.62,696,2.724,697,3.62,698,3.62,699,3.62,700,3.08,701,2.458,702,3.08,703,3.62,704,3.62,705,3.62]],["title/interfaces/CreateExamDto.html",[203,1.248,706,0.235]],["body/interfaces/CreateExamDto.html",[3,0.163,4,0.14,9,0.117,24,0.14,33,0.024,35,0.29,38,0.719,49,0.339,56,0.014,59,0.945,96,2.123,146,0.014,156,0.264,157,2.635,203,1.586,204,1.123,216,2.099,218,2.635,219,2.635,220,2.635,221,2.186,223,2.765,224,2.765,225,2.635,226,1.911,227,2.407,234,2.215,288,1.14,289,1.605,291,2.48,293,1.685,294,2.407,300,1.685,431,1.501,465,1.838,487,1.793,529,1.441,706,0.44,707,0.834,708,1.353,709,1.577,710,1.631,711,2.813,712,1.194,713,2.04,714,2.04,715,1.445,716,1.445,717,1.445,718,2.04,719,2.04,720,1.685,721,2.57,722,1.194,723,0.885,724,2.215,725,1.793,726,2.036,727,1.25,728,1.25,729,2.57,730,2.04,731,2.04,732,1.911,733,2.04,734,1.574,735,1.793,736,1.445,737,0.885,738,1.793,739,2.198,740,1.25,741,1.25,742,1.586,743,0.939]],["title/interfaces/Exam.html",[59,0.641,706,0.235]],["body/interfaces/Exam.html",[3,0.159,4,0.136,9,0.114,24,0.136,33,0.024,35,0.299,38,0.717,49,0.337,56,0.014,59,1.015,96,2.099,146,0.014,156,0.26,157,2.613,203,1.096,204,1.096,216,2.088,218,2.613,219,2.613,220,2.613,221,2.169,223,2.748,224,2.748,225,2.613,226,2.515,227,2.689,234,2.185,288,1.125,289,1.598,291,2.494,293,1.656,294,2.38,300,1.656,431,1.502,465,1.813,487,1.762,529,1.43,706,0.438,707,0.814,708,1.32,709,1.598,710,1.924,711,2.79,712,1.164,713,2.005,714,2.005,715,1.41,716,1.41,717,1.41,718,2.005,719,2.005,720,1.656,721,2.541,722,1.164,723,0.864,724,2.185,725,1.762,726,2.028,727,1.228,728,1.228,729,2.541,730,2.005,731,2.005,732,1.878,733,2.005,734,1.557,735,1.762,736,1.41,737,0.864,738,1.762,739,2.185,740,1.228,741,1.228,742,1.558,743,0.916]],["title/components/ExamComponent.html",[0,0.487,131,1.107]],["body/components/ExamComponent.html",[0,0.785,1,1.012,2,1.51,3,0.166,4,0.142,5,1.141,6,1.29,7,1.141,8,1.141,9,0.118,11,1.141,12,2.497,13,2.497,14,1.995,15,1.603,16,1.51,17,1.603,18,2.396,19,1.012,20,1.813,22,1.603,24,0.142,25,1.057,27,0.708,29,2.904,30,1.236,32,1.057,33,0.024,34,1.173,35,0.25,36,0.935,41,1.057,42,2.011,43,0.818,44,0.382,45,1.29,46,1.212,49,0.166,50,0.413,51,0.708,52,3.369,56,0.014,59,1.288,61,3.992,113,1.141,114,1.603,115,1.603,116,1.141,117,2.011,118,1.141,119,1.141,120,1.012,121,1.603,122,1.603,123,1.012,124,1.141,125,1.012,126,1.603,127,1.074,128,1.603,129,1.012,130,1.141,131,1.784,132,1.012,133,1.141,134,1.784,135,1.012,136,1.141,137,1.012,138,1.012,139,1.141,140,1.141,141,1.51,142,1.012,143,1.122,144,1.141,145,1.141,146,0.014,150,2.063,151,2.554,154,4.404,155,3.809,156,0.267,160,4.404,165,2.77,173,3.251,190,0.935,191,0.935,197,2.588,202,2.163,205,2.163,207,0.625,229,2.71,230,2.71,238,2.71,240,3.369,241,3.809,242,3.809,243,3.809,249,2.71,283,2.71,287,1.976,289,1.057,290,5.034,291,2.011,292,3.369,529,0.752,646,1.821,726,0.954,744,2.71,745,4.477,746,3.185,747,4.477,748,3.185,749,4.477,750,3.185,751,3.185,752,3.185,753,3.185,754,3.185,755,3.185,756,3.185,757,1.821,758,3.185,759,3.185,760,2.71,761,3.185,762,5.616,763,4.477,764,3.809,765,3.809]],["title/injectables/ExamResultService.html",[553,2.162,647,0.561]],["body/injectables/ExamResultService.html",[3,0.214,4,0.183,9,0.153,24,0.183,25,1.255,27,0.913,30,1.381,32,1.391,33,0.024,34,1.231,35,0.277,36,1.231,38,0.632,41,1.391,43,0.809,44,0.493,49,0.214,50,0.533,51,0.913,56,0.021,59,0.978,143,1.03,146,0.017,156,0.317,190,1.11,191,1.11,207,1.297,228,1.23,254,3.494,258,1.391,465,1.471,510,2.026,553,3.298,583,1.093,594,3.61,640,1.16,647,0.856,649,1.772,653,1.23,692,2.016,702,4.522,766,5.725,767,3.494,768,2.387,769,5.893,770,6.232,771,5.315,772,5.315,773,2.176,774,2.102,775,5.315,776,1.793,777,4.107,778,5.315,779,4.107,780,3.091,781,5.315,782,4.107,783,5.315,784,4.107,785,5.315,786,1.23,787,1.592,788,1.385,789,2.548,790,3.091,791,2.387,792,4.107,793,3.091,794,3.091,795,4.107,796,4.107,797,4.107]],["title/injectables/ExamService.html",[173,1.846,647,0.561]],["body/injectables/ExamService.html",[3,0.2,4,0.171,9,0.143,24,0.171,25,1.203,27,0.855,30,1.384,32,1.492,33,0.024,34,1.321,35,0.281,36,1.321,41,1.492,43,0.843,44,0.462,49,0.2,50,0.499,51,0.855,56,0.016,59,1.163,61,2.388,146,0.016,156,0.304,173,2.699,190,0.804,191,0.804,203,2.176,204,2.176,205,3.459,207,1.12,228,1.526,258,1.492,280,1.898,288,0.855,303,2.613,431,1.422,510,1.898,583,1.024,594,4.411,640,1.086,647,0.821,649,1.661,653,1.153,692,2.075,696,2.896,707,1.024,710,1.814,768,2.312,773,2.039,774,2.05,776,1.718,786,1.153,787,1.153,788,1.298,789,2.388,791,1.558,794,2.896,798,3.274,799,5.094,800,5.094,801,5.094,802,6.077,803,5.094,804,5.094,805,5.094,806,3.848,807,5.094,808,3.848,809,5.094,810,3.848,811,3.848,812,5.094,813,3.848,814,5.094,815,3.848,816,1.773,817,1.661,818,3.848,819,2.613,820,3.848,821,3.848,822,3.848,823,3.848,824,3.848]],["title/components/LoginComponent.html",[0,0.487,132,1.107]],["body/components/LoginComponent.html",[0,0.679,1,0.902,2,1.39,3,0.148,4,0.126,5,1.016,6,1.149,7,1.016,8,1.016,9,0.106,11,1.016,12,2.458,13,2.458,14,1.909,15,1.476,16,1.797,17,1.476,18,1.966,19,0.902,20,1.669,22,1.476,24,0.126,25,0.973,27,0.916,29,2.807,30,1.182,32,0.67,33,0.024,34,1.014,35,0.216,36,0.593,38,0.418,41,0.67,42,1.016,43,0.81,44,0.341,45,1.149,46,1.08,49,0.148,50,0.368,55,2.557,56,0.013,59,0.759,66,2.356,67,2.356,74,1.4,76,2.135,78,1.761,83,1.761,113,1.016,114,1.476,115,1.476,116,1.016,117,1.908,118,1.016,119,1.016,120,0.902,121,1.476,122,1.476,123,0.902,124,1.016,125,0.902,126,1.476,127,0.957,128,1.476,129,0.902,130,1.016,131,0.902,132,1.693,133,1.016,134,1.693,135,0.902,136,1.016,137,0.902,138,0.902,139,1.016,140,1.016,141,0.957,142,0.902,143,0.711,144,1.016,145,1.016,146,0.013,152,3.653,153,3.012,156,0.246,166,4.009,172,4.442,190,0.861,191,0.861,192,1.779,194,3.653,197,2.455,200,2.135,201,1.622,207,1.045,212,2.414,213,2.414,217,3.102,255,2.135,258,0.67,259,1.225,288,0.63,300,2.028,319,2.799,327,2.799,328,1.927,329,2.356,333,2.135,351,1.761,353,1.927,363,1.927,385,2.807,389,1.4,407,2.799,414,3.012,441,2.184,442,3.296,456,2.135,459,1.761,464,2.557,472,2.135,511,3.228,554,3.005,569,2.414,581,2.135,638,2.135,646,1.622,659,4.926,667,1.927,677,2.135,678,2.135,679,2.135,700,2.414,786,0.85,825,2.414,826,3.507,827,4.13,828,4.854,829,4.122,830,4.854,831,2.414,832,4.122,833,2.837,834,2.837,835,2.837,836,2.414,837,2.414,838,2.837,839,2.414,840,2.414,841,3.779,842,2.414,843,2.414,844,2.837,845,2.837,846,2.837,847,2.837,848,2.135,849,2.837,850,2.837,851,2.837,852,2.837,853,2.837,854,2.837,855,2.837,856,2.837,857,2.837,858,2.837,859,2.837,860,2.837,861,2.837,862,1.927,863,2.837,864,2.837,865,2.837,866,2.414,867,2.414,868,1.927,869,2.414,870,2.414,871,3.507,872,3.507,873,3.507,874,3.507,875,4.533,876,3.507,877,3.507,878,2.414,879,4.122,880,2.414,881,2.135,882,2.414,883,2.414,884,2.414,885,2.414,886,2.414,887,2.414,888,3.012,889,2.135,890,2.837]],["title/interfaces/LoginModel.html",[706,0.235,891,2.162]],["body/interfaces/LoginModel.html",[3,0.221,4,0.189,9,0.158,24,0.189,33,0.024,35,0.242,36,0.887,38,0.718,43,0.819,44,0.51,49,0.311,50,0.551,51,0.944,56,0.017,143,1.753,146,0.017,156,0.324,190,1.135,191,0.887,207,1.066,228,1.272,258,1.414,288,0.944,385,2.502,389,2.953,510,2.095,511,3.456,554,2.095,563,2.884,583,1.13,640,1.199,647,0.875,653,1.272,692,1.89,706,0.426,707,1.13,774,1.832,776,1.432,786,1.272,787,1.272,788,1.432,791,2.199,841,4.047,891,3.715,892,2.884,893,2.884,894,3.105,895,2.884,896,2.884,897,3.196,898,3.196,899,3.196,900,4.087,901,3.688,902,3.196,903,3.196,904,2.635,905,3.196,906,4.087,907,2.884,908,3.196,909,3.196,910,3.196,911,2.635,912,3.196,913,3.196]],["title/components/NavbarComponent.html",[0,0.487,134,1.107]],["body/components/NavbarComponent.html",[0,0.69,1,0.929,2,1.42,3,0.152,4,0.13,5,1.047,6,1.184,7,1.047,8,1.047,9,0.109,11,1.047,12,2.468,13,2.468,14,1.931,15,1.508,16,1.42,17,1.508,18,1.999,19,0.929,20,1.705,22,1.508,24,0.13,25,0.994,27,0.936,28,1.813,29,2.953,30,1.314,32,0.69,33,0.024,34,1.031,35,0.22,36,0.611,38,0.427,40,2.613,41,1.275,42,1.935,43,0.743,44,0.351,45,1.184,46,1.112,49,0.152,50,0.379,56,0.013,59,0.775,73,2.613,74,2.942,78,1.813,83,1.813,91,1.813,94,2.487,95,2.487,103,4.2,104,2.487,113,1.047,114,1.508,115,1.508,116,1.047,117,1.935,118,1.047,119,1.047,120,0.929,121,1.508,122,1.508,123,0.929,124,1.047,125,0.929,126,1.508,127,0.986,128,1.508,129,0.929,130,1.047,131,0.929,132,0.929,133,1.047,134,1.717,135,0.929,136,1.047,137,0.929,138,0.929,139,1.768,140,1.047,141,0.986,142,0.929,143,1.238,144,1.047,145,1.047,146,0.013,150,1.94,151,2.435,153,3.063,156,0.251,165,2.665,174,3.257,190,0.88,191,0.88,192,1.817,197,2.489,206,1.985,207,0.573,280,1.442,281,2.613,305,2.487,328,3.352,363,4.52,364,3.583,366,4.2,367,3.715,368,3.715,369,4.2,370,4.488,371,4.596,372,4.596,380,3.583,381,2.199,382,2.487,383,2.487,384,4.2,385,2.275,386,4.2,387,2.487,388,2.487,389,2.077,390,2.487,391,2.487,392,2.487,393,2.487,394,2.487,395,2.487,396,2.487,397,2.487,398,2.487,399,2.487,400,2.199,401,2.199,402,2.487,403,3.169,404,2.487,405,3.169,406,3.583,407,2.86,441,2.862,888,2.613,889,2.199,904,2.613,914,2.487,915,4.211,916,2.923,917,2.923,918,2.923,919,2.923,920,2.923,921,2.923,922,2.923,923,2.199,924,2.199,925,6.505,926,2.923,927,4.211,928,2.923,929,2.923,930,5.964,931,5.402,932,2.923,933,2.923,934,2.923,935,2.923,936,2.923,937,2.923,938,2.923]],["title/interfaces/Option.html",[706,0.235,739,1.175]],["body/interfaces/Option.html",[3,0.236,4,0.202,9,0.169,24,0.202,33,0.023,35,0.275,38,0.657,43,0.84,44,0.546,49,0.321,50,0.59,51,1.011,56,0.018,146,0.018,156,0.338,207,0.892,228,1.362,258,1.074,280,2.244,431,1.391,529,1.074,583,1.21,640,1.284,647,0.914,653,1.362,692,1.699,701,3.089,706,0.383,707,1.21,709,1.528,723,1.284,726,1.362,727,1.284,728,1.284,734,1.284,737,1.284,739,2.084,740,1.827,741,1.827,742,1.629,743,1.938,768,1.842,774,1.913,776,1.534,786,1.362,787,1.362,788,1.534,816,2.096,817,2.448,819,3.089,939,3.089,940,3.423,941,2.822,942,3.423,943,3.423,944,3.423,945,2.244,946,3.423,947,3.089,948,3.089,949,3.423]],["title/interfaces/OptionDto.html",[706,0.235,950,1.992]],["body/interfaces/OptionDto.html",[3,0.231,4,0.198,9,0.165,24,0.198,33,0.024,35,0.272,38,0.671,43,0.833,44,0.533,49,0.334,50,0.576,51,0.987,56,0.018,146,0.018,156,0.333,207,0.871,228,1.673,258,1.319,284,2.755,289,1.048,431,1.431,529,1.048,583,1.182,640,1.254,647,0.9,653,1.33,692,1.831,706,0.413,707,1.182,709,1.515,710,1.411,723,1.577,727,1.254,728,1.254,734,1.254,737,1.254,740,1.811,741,1.811,743,1.921,757,2.538,768,1.798,774,1.884,776,1.498,786,1.33,787,1.33,788,1.498,791,1.798,816,2.046,817,2.411,945,2.756,950,3.494,951,2.755,952,3.016,953,2.353,954,2.538,955,3.016,956,3.016,957,3.016,958,2.755,959,2.755,960,3.016,961,3.016]],["title/interfaces/OptionGetDTO.html",[706,0.235,738,1.411]],["body/interfaces/OptionGetDTO.html",[3,0.172,4,0.147,9,0.123,24,0.147,33,0.024,35,0.235,38,0.713,49,0.343,56,0.015,59,0.971,96,2.171,146,0.015,156,0.274,157,2.277,203,1.182,204,1.182,216,2.023,218,2.277,219,2.277,220,2.277,221,1.89,223,2.587,224,2.587,225,2.277,226,1.981,227,2.462,234,2.277,288,1.173,289,1.619,291,2.437,293,1.747,294,2.462,300,1.747,431,1.497,465,1.89,487,1.859,529,1.465,706,0.446,707,0.878,708,1.425,709,1.593,710,1.677,711,2.86,712,1.257,713,2.115,714,2.115,715,1.521,716,1.521,717,1.521,718,2.115,719,2.115,720,1.747,721,2.628,722,1.257,723,0.932,724,2.277,725,1.859,726,2.053,727,1.296,728,1.296,729,2.628,730,2.115,731,2.115,732,1.981,733,2.115,734,1.61,735,1.859,736,1.521,737,0.932,738,2.137,739,2.223,740,1.692,741,1.692,742,1.644,743,1.708]],["title/interfaces/OptionPostDTO.html",[706,0.235,735,1.411]],["body/interfaces/OptionPostDTO.html",[3,0.173,4,0.148,9,0.124,24,0.148,33,0.024,35,0.206,38,0.714,49,0.343,56,0.015,59,0.976,96,2.179,146,0.015,156,0.276,157,2.288,203,1.193,204,1.193,216,2.028,218,2.288,219,2.288,220,2.288,221,1.899,223,2.595,224,2.595,225,2.288,226,1.993,227,2.471,234,2.288,288,1.178,289,1.621,291,2.441,293,1.758,294,2.471,300,1.758,431,1.491,465,1.899,487,1.87,529,1.469,706,0.446,707,0.886,708,1.437,709,1.595,710,1.685,711,2.867,712,1.268,713,2.128,714,2.128,715,1.535,716,1.535,717,1.535,718,2.128,719,2.128,720,1.758,721,2.638,722,1.268,723,0.94,724,2.288,725,1.87,726,2.056,727,1.304,728,1.304,729,2.638,730,2.128,731,2.128,732,1.993,733,2.128,734,1.617,735,2.147,736,1.535,737,0.94,738,1.87,739,2.228,740,1.698,741,1.698,742,1.654,743,0.998]],["title/interfaces/Question.html",[706,0.235,726,1.043]],["body/interfaces/Question.html",[3,0.231,4,0.198,9,0.165,24,0.198,33,0.023,35,0.294,38,0.651,43,0.833,44,0.533,49,0.318,50,0.576,51,0.987,56,0.018,146,0.018,156,0.333,207,0.871,228,1.33,258,1.048,280,2.19,431,1.431,529,1.048,583,1.182,640,1.254,647,0.9,653,1.33,692,1.673,701,3.016,706,0.378,707,1.182,709,1.515,723,1.811,726,1.673,727,1.811,728,1.811,734,1.811,737,1.811,739,2.163,740,1.254,741,1.254,742,1.59,743,1.33,768,1.798,774,1.884,776,1.498,786,1.33,787,1.33,788,1.498,816,2.046,817,2.411,819,3.016,939,3.016,940,3.342,941,2.755,942,3.342,943,3.342,944,3.342,945,2.19,946,3.342,947,3.016,948,3.016,949,3.342]],["title/interfaces/QuestionDto.html",[706,0.235,953,1.846]],["body/interfaces/QuestionDto.html",[3,0.228,4,0.195,9,0.163,24,0.195,33,0.024,35,0.284,38,0.669,43,0.829,44,0.527,49,0.332,50,0.57,51,0.975,56,0.018,146,0.018,156,0.331,207,0.861,228,1.661,258,1.309,284,2.723,289,1.036,431,1.427,529,1.036,583,1.168,640,1.239,647,0.893,653,1.314,692,1.821,706,0.411,707,1.168,709,1.508,710,1.395,723,1.566,727,1.803,728,1.803,734,1.803,737,1.803,740,1.239,741,1.239,743,1.314,757,2.509,768,1.777,774,1.87,776,1.48,786,1.314,787,1.314,788,1.48,791,1.777,816,2.022,817,2.393,945,2.736,950,3.651,951,2.723,952,2.98,953,2.938,954,2.509,955,2.98,956,2.98,957,2.98,958,2.723,959,2.723,960,2.98,961,2.98]],["title/interfaces/QuestionGetDTO.html",[706,0.235,725,1.411]],["body/interfaces/QuestionGetDTO.html",[3,0.169,4,0.144,9,0.121,24,0.144,33,0.024,35,0.265,38,0.712,49,0.341,56,0.014,59,0.962,96,2.155,146,0.014,156,0.271,157,2.256,203,1.162,204,1.162,216,2.013,218,2.256,219,2.256,220,2.256,221,1.872,223,2.571,224,2.571,225,2.256,226,1.957,227,2.734,234,2.256,288,1.162,289,1.614,291,2.464,293,1.726,294,2.443,300,1.726,431,1.494,465,1.872,487,1.837,529,1.457,706,0.444,707,0.863,708,1.4,709,1.587,710,1.661,711,2.844,712,1.235,713,2.09,714,2.09,715,1.495,716,1.495,717,1.495,718,2.09,719,2.09,720,1.726,721,2.609,722,1.235,723,0.916,724,2.256,725,2.117,726,2.048,727,1.682,728,1.682,729,2.609,730,2.09,731,2.09,732,1.957,733,2.09,734,1.789,735,1.837,736,1.495,737,1.598,738,2.293,739,2.215,740,1.28,741,1.28,742,1.624,743,0.972]],["title/interfaces/QuestionPostDTO.html",[706,0.235,720,1.326]],["body/interfaces/QuestionPostDTO.html",[3,0.169,4,0.144,9,0.121,24,0.144,33,0.024,35,0.265,38,0.717,49,0.341,56,0.014,59,0.962,96,2.155,146,0.014,156,0.271,157,2.256,203,1.162,204,1.162,216,2.013,218,2.256,219,2.256,220,2.256,221,1.872,223,2.571,224,2.571,225,2.256,226,1.957,227,2.734,234,2.256,288,1.162,289,1.614,291,2.464,293,1.726,294,2.443,300,1.726,431,1.488,465,1.872,487,1.837,529,1.457,706,0.444,707,0.863,708,1.4,709,1.587,710,1.661,711,2.844,712,1.235,713,2.09,714,2.09,715,1.495,716,1.495,717,1.495,718,2.09,719,2.09,720,1.99,721,2.609,722,1.235,723,0.916,724,2.256,725,1.837,726,2.048,727,1.682,728,1.682,729,2.609,730,2.09,731,2.09,732,1.957,733,2.09,734,1.789,735,2.293,736,2.609,737,0.916,738,1.837,739,2.215,740,1.28,741,1.28,742,1.624,743,0.972]],["title/injectables/QuestionService.html",[647,0.561,941,2.162]],["body/injectables/QuestionService.html",[3,0.232,4,0.199,9,0.166,24,0.199,25,1.323,27,0.992,30,1.28,32,1.054,33,0.023,34,0.932,35,0.199,36,0.932,38,0.569,41,1.054,43,0.834,44,0.536,49,0.319,50,0.579,51,0.992,56,0.018,146,0.018,156,0.335,190,0.932,191,0.932,207,1.202,228,1.337,258,1.054,280,2.202,431,1.28,529,1.054,583,1.188,640,1.26,647,0.903,649,1.926,653,1.337,692,1.835,701,3.031,706,0.379,709,1.323,723,1.26,726,1.337,727,1.26,728,1.26,734,1.26,737,1.26,739,1.89,740,1.26,741,1.26,742,1.598,743,1.337,768,2.481,773,2.365,774,2.167,776,1.89,786,1.337,787,1.337,788,1.505,816,2.057,817,2.419,819,3.031,939,3.031,940,3.359,941,3.478,942,4.218,943,3.359,944,3.359,945,2.202,946,4.836,947,3.031,948,3.031,949,3.359,962,5.605,963,4.463]],["title/components/RegisterComponent.html",[0,0.487,135,1.107]],["body/components/RegisterComponent.html",[0,0.657,1,0.851,2,1.333,3,0.139,4,0.119,5,0.959,6,1.085,7,0.959,8,0.959,9,0.1,11,0.959,12,2.437,13,2.437,14,1.864,15,1.415,16,1.748,17,1.415,18,1.901,19,0.851,20,1.6,22,1.415,24,0.119,25,0.933,27,0.878,29,2.889,30,1.25,32,0.933,33,0.024,34,1.283,35,0.246,36,0.825,38,0.526,41,0.933,42,0.959,43,0.797,44,0.321,45,1.085,46,1.019,49,0.139,50,0.348,56,0.013,66,2.259,67,1.531,74,1.321,76,2.015,77,2.015,78,1.662,113,0.959,114,1.415,115,1.415,116,0.959,117,1.856,118,0.959,119,0.959,120,0.851,121,1.415,122,1.415,123,0.851,124,0.959,125,0.851,126,1.415,127,0.903,128,1.415,129,0.851,130,0.959,131,0.851,132,0.851,133,0.959,134,1.647,135,1.647,136,0.959,137,0.851,138,0.851,139,0.959,140,0.959,141,0.903,142,0.851,143,0.671,144,0.959,145,0.959,146,0.013,152,3.533,153,2.913,156,0.236,166,3.9,172,4.353,190,0.981,191,0.981,192,2.026,194,4.353,197,2.979,200,2.015,201,1.531,207,0.921,217,3.9,255,2.973,258,0.933,259,1.156,300,2.337,319,2.683,327,2.683,328,1.819,329,2.259,333,2.015,351,1.662,363,1.819,385,2.163,403,2.015,405,2.973,407,2.683,414,2.913,441,2.094,442,3.188,459,2.452,464,2.452,472,2.015,511,3.17,554,2.951,581,2.015,638,2.015,646,1.531,709,0.632,786,0.802,827,3.995,831,2.279,837,2.279,839,2.279,840,2.279,841,4.012,842,2.279,843,3.362,848,2.015,862,1.819,867,2.279,868,1.819,869,2.279,870,2.279,871,3.362,872,3.362,873,3.362,874,3.362,875,4.41,876,3.362,877,3.362,880,2.279,881,2.015,882,2.279,883,2.279,884,2.279,885,2.279,886,2.279,887,2.279,888,2.913,889,2.015,893,3.188,894,2.259,895,1.819,896,1.819,904,3.589,964,2.279,965,4.695,966,3.951,967,4.695,968,4.695,969,3.951,970,3.951,971,2.678,972,3.951,973,2.678,974,3.951,975,2.678,976,2.678,977,2.678,978,2.678,979,2.678,980,2.678,981,2.678,982,2.678,983,2.678,984,2.678,985,2.678,986,2.678,987,2.678,988,3.951,989,3.951,990,2.678,991,3.951,992,3.951,993,3.951,994,3.951,995,3.362,996,3.951,997,2.279,998,2.279,999,2.279]],["title/interfaces/RegisterModel.html",[706,0.235,894,1.992]],["body/interfaces/RegisterModel.html",[3,0.213,4,0.182,9,0.152,24,0.182,33,0.024,35,0.287,36,1.229,38,0.73,43,0.808,44,0.491,49,0.306,50,0.531,51,0.91,56,0.017,143,1.742,146,0.017,156,0.317,190,1.108,191,0.855,207,1.041,228,1.226,258,1.389,288,0.91,385,2.444,389,3.259,510,2.02,511,3.417,554,2.02,563,2.78,583,1.089,640,1.156,647,0.855,653,1.226,692,1.864,706,0.421,707,1.089,774,1.789,776,1.381,786,1.226,787,1.226,788,1.381,791,2.148,841,4.001,891,3.291,892,2.78,893,2.78,894,3.364,895,4.227,896,4.227,897,3.081,898,3.081,899,3.081,900,3.992,901,3.602,902,3.081,903,3.081,904,2.54,905,3.081,906,3.992,907,2.78,908,3.081,909,3.081,910,3.081,911,2.54,912,3.081,913,3.081]],["title/injectables/ReportService.html",[422,2.366,647,0.561]],["body/injectables/ReportService.html",[3,0.217,4,0.186,9,0.155,24,0.186,25,1.269,27,0.929,30,1.388,32,0.987,33,0.024,34,0.873,35,0.186,36,0.873,41,1.481,43,0.814,44,0.502,49,0.217,50,0.542,51,0.929,56,0.017,62,3.145,146,0.017,156,0.321,190,0.873,191,0.873,207,1.166,258,1.481,273,3.145,301,2.838,320,2.838,422,3.65,431,0.873,432,4.72,433,3.555,434,3.555,435,3.555,437,3.555,438,3.555,439,3.145,441,2.214,442,2.838,443,3.555,446,3.555,447,3.555,523,3.145,529,1.269,530,3.145,583,1.112,616,4.573,640,1.18,647,0.866,649,1.803,653,1.252,692,2.071,773,2.214,774,2.116,776,1.813,786,1.252,787,1.61,788,1.409,791,1.692,793,3.145,816,1.926,817,1.803,999,3.555,1000,3.555,1001,5.942,1002,6.273,1003,6.273,1004,6.273,1005,6.273,1006,5.375,1007,4.179,1008,4.179,1009,4.179,1010,4.179,1011,5.375,1012,4.179,1013,4.179,1014,4.179,1015,4.179,1016,4.179,1017,4.179,1018,4.179,1019,3.555,1020,4.179]],["title/components/ResultComponent.html",[0,0.487,137,1.107]],["body/components/ResultComponent.html",[0,0.655,1,0.847,2,1.328,3,0.139,4,0.119,5,0.954,6,1.079,7,0.954,8,0.954,9,0.099,11,0.954,12,2.435,13,2.435,14,1.86,15,1.41,16,1.328,17,1.41,18,1.896,19,0.847,20,1.594,22,1.41,24,0.119,25,0.929,27,0.592,28,1.653,29,2.66,30,1.152,32,0.629,33,0.024,34,0.978,35,0.208,36,0.557,41,0.929,42,1.852,43,0.608,44,0.32,45,1.079,46,1.014,49,0.139,50,0.346,51,0.592,55,2.442,56,0.017,59,0.952,67,2.25,70,1.809,71,1.809,72,1.809,73,3.208,74,3.186,83,3.208,91,2.904,92,3.179,96,2.198,107,2.005,113,0.954,114,1.41,115,1.41,116,0.954,117,1.852,118,0.954,119,0.954,120,0.847,121,1.41,122,1.41,123,0.847,124,0.954,125,0.847,126,1.41,127,0.899,128,1.41,129,0.847,130,0.954,131,0.847,132,0.847,133,0.954,134,0.847,135,0.847,136,0.954,137,1.643,138,0.847,139,2.196,140,0.954,141,0.899,142,0.847,143,0.987,144,0.954,145,0.954,146,0.013,150,1.814,151,2.309,156,0.235,165,2.55,190,0.822,191,0.822,192,1.699,197,1.814,221,1.41,228,0.798,231,1.653,259,1.15,281,2.904,289,1.221,293,1.498,301,2.673,319,1.809,320,2.673,329,1.523,337,3.349,338,3.349,351,2.904,353,1.809,357,2.267,431,0.822,441,1.412,487,1.594,494,3.349,510,1.942,512,3.511,513,2.673,514,3.921,522,2.267,523,2.962,529,0.929,530,2.962,533,2.267,536,3.983,537,3.349,631,3.349,709,0.929,732,1.699,742,1.41,789,1.653,848,2.005,862,1.809,866,2.267,868,2.673,888,1.653,923,3.891,924,3.523,945,1.314,1021,2.267,1022,4.681,1023,5.973,1024,3.936,1025,2.665,1026,2.665,1027,2.665,1028,3.936,1029,2.665,1030,2.665,1031,4.681,1032,3.936,1033,2.665,1034,2.665,1035,2.665,1036,2.665,1037,2.665,1038,2.665,1039,3.936,1040,2.665,1041,3.936,1042,3.936,1043,3.936,1044,3.936,1045,3.936,1046,3.936,1047,3.936,1048,3.936,1049,3.936,1050,3.936,1051,3.936,1052,3.936,1053,3.936,1054,3.936,1055,3.936,1056,3.936,1057,2.665,1058,4.693,1059,5.516,1060,2.665,1061,2.665,1062,2.665,1063,3.936,1064,3.936,1065,3.936,1066,4.681,1067,3.936,1068,3.936]],["title/components/ResultHistoryComponent.html",[0,0.487,138,1.107]],["body/components/ResultHistoryComponent.html",[0,0.639,1,0.814,2,1.289,3,0.133,4,0.114,5,0.917,6,1.037,7,0.917,8,0.917,9,0.095,11,0.917,12,2.421,13,2.421,14,1.83,15,1.369,16,1.71,17,1.369,18,1.852,19,0.814,20,1.548,22,1.369,24,0.17,25,0.902,27,0.849,30,1.266,32,0.902,33,0.024,34,1.133,35,0.253,36,0.798,38,0.515,41,1.08,42,2.038,43,0.765,44,0.307,46,0.975,49,0.133,50,0.332,56,0.021,59,1.236,66,1.464,73,1.589,74,1.263,75,2.179,86,2.614,113,0.917,114,1.369,115,1.369,116,0.917,117,1.816,118,0.917,119,0.917,120,0.814,121,1.369,122,1.369,123,0.814,124,0.917,125,0.814,126,1.369,127,0.864,128,1.369,129,0.814,130,0.917,131,0.814,132,0.814,133,0.917,134,1.611,135,0.814,136,0.917,137,0.814,138,1.611,139,2.259,140,0.917,141,0.864,142,0.814,143,0.958,144,0.917,145,0.917,146,0.012,150,1.761,151,2.256,156,0.228,165,2.501,173,3.124,174,3.124,184,2.876,190,1.059,191,1.059,192,2.188,197,2.793,202,1.739,206,1.739,207,0.897,211,2.179,216,0.814,221,1.369,228,1.37,240,1.927,259,1.105,287,1.589,301,2.595,303,1.739,329,1.464,414,3.366,415,3.441,457,3.815,459,1.589,464,3.146,465,1.369,506,3.441,512,2.595,513,2.595,514,2.595,515,3.252,539,3.89,552,2.179,553,3.53,579,2.179,580,2.179,582,2.179,583,0.681,589,2.179,594,1.739,595,2.179,602,3.252,614,3.252,632,3.252,633,3.252,635,3.252,646,1.464,667,1.739,681,1.927,692,1.145,709,0.902,764,2.179,765,2.179,780,3.815,789,1.589,868,1.739,901,1.739,911,1.589,997,2.179,1069,5.271,1070,5.271,1071,2.179,1072,3.822,1073,4.573,1074,3.822,1075,3.822,1076,5.071,1077,3.822,1078,3.822,1079,2.561,1080,2.561,1081,2.561,1082,2.561,1083,2.561,1084,2.561,1085,3.822,1086,2.561,1087,3.822,1088,4.573,1089,2.561,1090,2.561,1091,2.561,1092,3.822,1093,3.822,1094,2.561,1095,3.822,1096,2.561,1097,2.561,1098,2.561,1099,2.561,1100,2.561,1101,2.561,1102,2.561,1103,2.179,1104,3.822,1105,3.822,1106,3.252]],["title/interfaces/Section.html",[289,0.823,706,0.235]],["body/interfaces/Section.html",[3,0.234,4,0.2,9,0.167,24,0.2,33,0.024,35,0.251,38,0.673,43,0.836,44,0.539,49,0.335,50,0.583,51,0.998,56,0.018,146,0.018,156,0.336,207,0.882,228,1.686,258,1.329,284,2.788,289,1.329,431,1.435,529,1.061,583,1.196,640,1.269,647,0.907,653,1.346,692,1.841,706,0.415,707,1.196,709,1.329,710,1.428,723,1.873,727,1.269,728,1.269,734,1.269,737,1.269,740,1.269,741,1.269,743,1.346,757,2.569,768,1.82,774,1.898,776,1.516,786,1.346,787,1.346,788,1.516,791,1.82,816,2.071,817,2.429,945,2.777,950,3.218,951,2.788,952,4.375,953,2.381,954,2.569,955,3.052,956,3.052,957,3.052,958,2.788,959,2.788,960,3.052,961,3.052]],["title/injectables/SectionActionService.html",[647,0.561,1107,2.622]],["body/injectables/SectionActionService.html",[3,0.161,4,0.138,9,0.115,24,0.138,25,1.036,27,0.688,30,1.376,32,1.534,33,0.024,34,1.357,35,0.299,36,1.357,38,0.445,41,1.508,43,0.76,44,0.372,49,0.161,50,0.402,51,0.688,56,0.014,146,0.014,156,0.262,190,0.647,191,0.647,205,2.102,207,1,258,1.555,259,1.336,280,1.527,287,1.92,288,0.975,289,1.435,303,2.102,336,2.633,431,1.473,475,3.732,583,0.824,640,0.874,647,0.707,649,1.336,653,0.927,692,2.097,696,3.301,709,1.036,710,1.394,712,2.379,720,2.314,722,1.178,723,1.803,726,1.314,727,0.874,728,0.874,734,0.874,737,1.239,740,0.874,741,0.874,757,1.769,768,2.064,773,1.64,774,1.87,776,1.48,786,0.927,787,1.314,788,1.044,791,1.777,793,2.329,794,2.329,817,1.336,947,2.102,948,2.102,953,1.64,958,2.722,959,1.92,1107,4.172,1108,5.669,1109,2.633,1110,4.387,1111,4.387,1112,4.387,1113,4.387,1114,4.387,1115,4.387,1116,3.732,1117,4.387,1118,4.387,1119,5.544,1120,6.587,1121,3.095,1122,4.387,1123,4.387,1124,3.095,1125,4.387,1126,3.095,1127,6.079,1128,4.387,1129,3.095,1130,4.387,1131,3.095,1132,4.387,1133,3.095,1134,3.095,1135,4.387,1136,3.095,1137,4.387,1138,3.095,1139,3.095,1140,3.095,1141,3.095,1142,3.095,1143,5.096,1144,4.387,1145,3.095,1146,3.095,1147,3.095]],["title/interfaces/SectionGetDTO.html",[706,0.235,722,1.326]],["body/interfaces/SectionGetDTO.html",[3,0.166,4,0.142,9,0.119,24,0.142,33,0.024,35,0.281,38,0.711,49,0.34,56,0.014,59,0.953,96,2.139,146,0.014,156,0.267,157,2.235,203,1.142,204,1.142,216,2.106,218,2.235,219,2.235,220,2.235,221,1.855,223,2.777,224,2.777,225,2.235,226,1.934,227,2.425,234,2.235,288,1.151,289,1.61,291,2.422,293,1.705,294,2.425,300,1.705,431,1.511,465,1.855,487,1.815,529,1.544,706,0.442,707,0.849,708,1.376,709,1.544,710,1.951,711,2.828,712,1.214,713,2.065,714,2.065,715,1.469,716,1.469,717,1.469,718,2.727,719,2.065,720,1.705,721,2.589,722,1.705,723,1.586,724,2.235,725,2.275,726,2.042,727,1.265,728,1.265,729,2.589,730,2.065,731,2.065,732,1.934,733,2.065,734,1.586,735,1.815,736,1.469,737,0.9,738,1.815,739,2.206,740,1.265,741,1.265,742,1.605,743,0.955]],["title/interfaces/SectionPostDTO.html",[706,0.235,712,1.326]],["body/interfaces/SectionPostDTO.html",[3,0.167,4,0.143,9,0.12,24,0.143,33,0.024,35,0.274,38,0.711,49,0.341,56,0.014,59,0.958,96,2.147,146,0.014,156,0.269,157,2.246,203,1.152,204,1.152,216,2.11,218,2.246,219,2.246,220,2.246,221,1.864,223,2.783,224,2.783,225,2.246,226,1.945,227,2.434,234,2.246,288,1.156,289,1.612,291,2.426,293,1.716,294,2.434,300,1.716,431,1.508,465,1.864,487,1.825,529,1.547,706,0.443,707,0.856,708,1.388,709,1.547,710,1.956,711,2.836,712,1.716,713,2.077,714,2.077,715,1.482,716,1.482,717,1.482,718,2.736,719,2.077,720,2.147,721,2.599,722,1.224,723,0.908,724,2.246,725,1.825,726,2.045,727,1.273,728,1.273,729,2.599,730,2.077,731,2.077,732,1.945,733,2.077,734,1.592,735,1.825,736,1.482,737,0.908,738,1.825,739,2.21,740,1.273,741,1.273,742,1.614,743,0.963]],["title/injectables/SectionService.html",[647,0.561,954,1.992]],["body/injectables/SectionService.html",[3,0.218,4,0.187,9,0.156,24,0.187,25,1.272,27,0.932,30,1.312,32,1.405,33,0.023,34,1.243,35,0.265,36,1.243,38,0.604,41,1.272,43,0.815,44,0.503,49,0.327,50,0.544,51,0.932,56,0.017,146,0.017,156,0.321,190,0.876,191,0.876,207,1.168,228,1.613,258,1.272,284,2.601,289,0.99,431,1.445,529,0.99,583,1.116,640,1.184,647,0.868,649,1.809,653,1.256,692,1.946,706,0.402,709,1.272,710,1.712,723,1.68,727,1.184,728,1.184,734,1.184,737,1.184,740,1.184,741,1.184,743,1.256,757,2.397,768,2.41,773,2.221,774,2.118,776,1.817,786,1.256,787,1.256,788,1.414,791,1.698,816,1.932,817,2.324,945,2.657,950,3.079,951,2.601,952,2.847,953,2.221,954,3.079,955,3.658,956,2.847,957,2.847,958,3.342,959,2.601,960,3.658,961,2.847,1116,4.583,1148,5.386,1149,5.386,1150,4.192,1151,4.192]],["title/interfaces/UpdateExamDto.html",[204,1.248,706,0.235]],["body/interfaces/UpdateExamDto.html",[3,0.16,4,0.137,9,0.115,24,0.137,33,0.024,35,0.296,38,0.717,49,0.337,56,0.014,59,0.936,96,2.107,146,0.014,156,0.261,157,2.62,203,1.105,204,1.567,216,2.092,218,2.62,219,2.62,220,2.62,221,2.175,223,2.754,224,2.754,225,2.62,226,2.523,227,2.695,234,2.195,288,1.13,289,1.601,291,2.497,293,1.666,294,2.389,300,1.666,431,1.499,465,1.822,487,1.772,529,1.434,706,0.439,707,0.821,708,1.331,709,1.601,710,1.616,711,2.798,712,1.174,713,2.016,714,2.016,715,1.421,716,1.421,717,1.421,718,2.016,719,2.016,720,1.666,721,2.551,722,1.174,723,0.871,724,2.195,725,1.772,726,2.03,727,1.235,728,1.235,729,2.551,730,2.016,731,2.016,732,1.889,733,2.016,734,1.563,735,1.772,736,1.421,737,0.871,738,1.772,739,2.189,740,1.235,741,1.235,742,1.567,743,0.924]],["title/components/UserComponent.html",[0,0.487,142,1.107]],["body/components/UserComponent.html",[0,0.748,1,1.075,2,1.574,3,0.176,4,0.151,5,1.211,6,1.37,7,1.211,8,1.211,9,0.126,11,1.211,12,2.516,13,2.516,14,2.04,15,1.672,16,1.574,17,1.672,19,1.075,20,1.89,22,1.672,24,0.151,25,1.102,27,0.751,28,2.098,29,2.881,30,1.204,32,0.799,33,0.023,34,1.117,35,0.151,36,0.707,40,3.317,41,1.262,42,1.914,43,0.694,44,0.406,45,1.37,49,0.176,50,0.439,51,0.751,55,2.896,56,0.021,57,5.32,59,0.984,60,4.337,61,3.879,66,3.056,67,2.668,68,3.513,70,2.297,71,2.297,72,2.297,74,1.668,80,2.545,81,3.513,82,2.545,83,3.317,91,3.317,92,3.63,96,1.287,98,2.545,113,1.211,114,1.672,115,1.672,116,1.211,117,2.064,118,1.211,119,1.211,120,1.075,121,1.672,122,1.672,123,1.075,124,1.211,125,1.075,126,1.672,127,1.141,128,1.672,129,1.075,130,1.211,131,1.075,132,1.075,133,1.211,134,1.832,135,1.075,136,1.211,137,1.075,138,1.075,139,1.672,140,1.211,141,1.141,142,1.832,143,1.516,144,1.211,145,1.211,146,0.015,216,1.075,295,3.971,329,1.933,351,2.098,353,2.297,441,1.792,473,2.896,646,1.933,789,3.317,888,2.098,907,3.63,911,2.896,923,2.545,924,2.545,998,3.971,1152,2.877,1153,5.345,1154,4.668,1155,5.764,1156,5.764,1157,5.764,1158,3.382,1159,3.382,1160,3.382,1161,3.382,1162,4.668,1163,3.382,1164,6.408,1165,4.668,1166,4.668,1167,4.668,1168,3.382,1169,3.382,1170,3.382,1171,3.382]],["title/injectables/UserService.html",[554,1.718,647,0.561]],["body/injectables/UserService.html",[3,0.199,4,0.17,9,0.142,24,0.17,25,1.198,27,0.85,30,1.355,32,1.431,33,0.024,34,1.267,35,0.27,36,1.318,38,0.697,41,1.344,43,0.787,44,0.459,49,0.296,50,0.497,51,0.85,56,0.016,143,1.747,146,0.016,156,0.303,190,1.267,191,1.189,207,1.272,228,1.146,258,1.344,288,0.85,385,2.794,389,2.808,510,1.887,511,2.688,554,2.503,563,2.598,583,1.018,640,1.08,647,0.817,649,1.651,653,1.146,692,1.981,706,0.41,773,2.027,774,2.045,776,1.711,780,2.879,786,1.146,787,1.146,788,1.29,791,2.055,841,3.148,891,3.762,892,2.598,893,2.598,894,3.466,895,2.598,896,2.598,897,4.284,898,3.818,899,2.879,900,3.818,901,3.446,902,4.284,903,3.818,904,3.532,905,3.818,906,3.818,907,2.598,908,2.879,909,3.818,910,2.879,911,2.374,912,3.818,913,2.879,1172,5.074,1173,5.074,1174,3.826,1175,3.826,1176,3.826,1177,3.826]],["title/coverage.html",[1178,4.053]],["body/coverage.html",[0,0.977,1,1.099,9,0.129,10,2.942,19,1.099,33,0.023,35,0.154,47,1.977,56,0.015,59,0.636,86,4.198,120,1.099,123,1.099,125,1.099,127,1.166,129,1.099,131,1.099,132,1.099,134,1.099,135,1.099,137,1.099,138,1.099,141,1.166,142,1.099,146,0.015,147,3.782,148,2.942,149,2.942,173,1.832,174,1.832,203,1.238,204,1.238,288,0.768,289,0.816,362,2.942,408,2.942,409,2.942,422,2.348,534,2.942,535,2.942,553,2.145,554,1.706,639,2.942,647,1.073,648,2.602,650,2.942,651,2.942,654,2.942,706,0.474,708,2.874,712,1.316,720,1.316,722,1.316,724,1.492,725,1.4,726,1.036,735,1.4,738,1.4,739,1.166,744,2.942,766,2.942,767,2.942,787,1.036,790,2.602,798,2.942,825,2.942,891,2.145,892,3.672,894,1.977,914,2.942,939,3.672,941,2.145,950,1.977,951,3.61,953,1.832,954,1.977,964,2.942,1000,2.942,1021,2.942,1058,2.942,1069,2.942,1070,2.942,1071,2.942,1107,2.602,1108,2.942,1109,2.942,1152,2.942,1178,2.942,1179,3.458,1180,3.458,1181,4.74,1182,3.458,1183,5.818,1184,5.818,1185,6.446,1186,5.818,1187,5.818,1188,3.458,1189,5.408,1190,3.458,1191,3.458,1192,5.408,1193,3.458,1194,3.458,1195,3.458,1196,3.458,1197,3.458,1198,4.74,1199,4.032,1200,6.295,1201,6.295,1202,2.942,1203,2.942,1204,2.942,1205,2.942,1206,2.942,1207,3.458,1208,2.942,1209,2.942,1210,2.602,1211,3.458]],["title/dependencies.html",[1212,2.186,1213,3.567]],["body/dependencies.html",[9,0.183,33,0.024,44,0.591,45,1.994,46,1.874,56,0.019,146,0.019,201,2.815,452,3.705,454,3.705,583,1.31,677,4.481,678,3.705,679,3.705,680,4.189,681,3.705,1210,3.705,1213,4.189,1214,4.924,1215,7.152,1216,4.924,1217,6.401,1218,5.955,1219,4.924,1220,4.189,1221,4.924,1222,4.189,1223,4.924,1224,4.924,1225,4.924,1226,4.924,1227,4.924,1228,4.924,1229,4.924,1230,4.924,1231,4.924,1232,4.924,1233,4.924,1234,4.924,1235,4.924,1236,4.924,1237,4.924,1238,4.924]],["title/index.html",[24,0.129,1239,2.905,1240,2.905]],["body/index.html",[0,0.872,4,0.206,33,0.018,34,0.969,52,3.489,56,0.018,60,3.489,63,5.304,146,0.018,150,2.137,287,2.877,288,1.03,292,5.133,308,3.945,401,3.489,432,4.902,473,2.877,760,3.945,1019,3.945,1103,3.945,1212,3.489,1220,4.883,1222,3.945,1241,4.637,1242,5.74,1243,4.637,1244,6.234,1245,6.234,1246,3.945,1247,4.637,1248,6.695,1249,6.914,1250,4.637,1251,4.637,1252,4.637,1253,4.637,1254,4.637,1255,4.637,1256,4.637,1257,4.637,1258,4.637,1259,6.234,1260,4.637,1261,6.514,1262,4.637,1263,4.637,1264,4.637,1265,5.74,1266,5.74,1267,4.637,1268,5.74,1269,5.74,1270,4.637,1271,4.637,1272,4.637,1273,4.637,1274,5.74,1275,4.637,1276,4.637,1277,4.637,1278,4.637,1279,4.637,1280,6.234,1281,3.489,1282,4.637,1283,4.637,1284,4.637,1285,4.637,1286,4.637,1287,4.637]],["title/modules.html",[1288,4.053]],["body/modules.html",[33,0.021,56,0.021,146,0.021,1288,4.854]],["title/overview.html",[1281,3.585]],["body/overview.html",[2,1.899,33,0.021,56,0.021,146,0.021,649,2.43,707,1.498,1281,4.238,1289,5.632,1290,5.632,1291,5.632]],["title/properties.html",[156,0.25,1212,2.186]],["body/properties.html",[33,0.022,56,0.021,146,0.021,156,0.338,1246,4.822,1292,5.668]],["title/miscellaneous/variables.html",[1293,2.471,1294,3.567]],["body/miscellaneous/variables.html",[14,1.372,16,1.782,24,0.181,29,1.875,33,0.024,35,0.276,40,3.278,55,3.64,56,0.017,143,1.02,146,0.017,190,1.378,191,1.378,192,2.532,231,2.525,258,1.385,259,2.846,385,1.875,389,3.394,473,3.278,659,3.062,660,3.462,661,3.462,667,4.217,687,3.462,768,1.648,787,1.582,790,4.415,826,4.495,836,3.462,862,3.588,878,3.462,881,3.062,995,3.462,1106,3.462,1199,3.462,1202,4.992,1203,3.462,1204,4.495,1205,3.462,1206,4.495,1208,3.462,1209,3.462,1210,3.976,1293,3.462,1294,3.462,1295,4.069,1296,4.069,1297,4.069,1298,5.283,1299,4.069,1300,5.283,1301,4.069,1302,4.069,1303,4.069,1304,4.069,1305,4.069,1306,5.283,1307,4.069,1308,4.069,1309,4.069,1310,4.069,1311,4.069,1312,4.069,1313,4.069,1314,4.069,1315,4.069,1316,4.069,1317,4.069,1318,4.069,1319,5.283,1320,4.069,1321,4.069,1322,4.069,1323,4.069,1324,4.069,1325,4.069,1326,4.069,1327,4.069,1328,4.069,1329,4.069,1330,4.069,1331,4.069,1332,4.069,1333,4.069]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":86,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1292,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":89,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{}}}],["0.14.3",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":349,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["0.3.2",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":71,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{}}}],["0.5",{"_index":332,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["0.5s",{"_index":315,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["0.8",{"_index":347,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["0/1",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1181,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1207,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["0/36",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["0/37",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":356,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["0056b3",{"_index":357,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ResultComponent.html":{}}}],["0062cc",{"_index":108,"title":{},"body":{"components/AdminComponent.html":{}}}],["007bff",{"_index":1066,"title":{},"body":{"components/ResultComponent.html":{}}}],["0px",{"_index":305,"title":{},"body":{"components/AdminExamComponent.html":{},"components/NavbarComponent.html":{}}}],["1",{"_index":320,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminResultComponent.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{}}}],["1.2rem",{"_index":1068,"title":{},"body":{"components/ResultComponent.html":{}}}],["1.5rem",{"_index":353,"title":{},"body":{"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{}}}],["100",{"_index":319,"title":{},"body":{"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{}}}],["100vh",{"_index":331,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["100vw",{"_index":330,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["1050",{"_index":341,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["10px",{"_index":83,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{}}}],["1200px",{"_index":1170,"title":{},"body":{"components/UserComponent.html":{}}}],["138496",{"_index":361,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["14px",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{}}}],["15",{"_index":1289,"title":{},"body":{"overview.html":{}}}],["150px",{"_index":79,"title":{},"body":{"components/AdminComponent.html":{}}}],["15px",{"_index":69,"title":{},"body":{"components/AdminComponent.html":{}}}],["16",{"_index":1291,"title":{},"body":{"overview.html":{}}}],["16px",{"_index":348,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["17a2b8",{"_index":112,"title":{},"body":{"components/AdminComponent.html":{}}}],["18.0.0",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["18.0.7",{"_index":1222,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["18px",{"_index":93,"title":{},"body":{"components/AdminComponent.html":{}}}],["1px",{"_index":1060,"title":{},"body":{"components/ResultComponent.html":{}}}],["1rem",{"_index":998,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["2",{"_index":523,"title":{},"body":{"components/AdminReportComponent.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{}}}],["2.0.5",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":439,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"injectables/ReportService.html":{}}}],["20px",{"_index":924,"title":{},"body":{"components/NavbarComponent.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{}}}],["25px",{"_index":1171,"title":{},"body":{"components/UserComponent.html":{}}}],["28a745",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{}}}],["3",{"_index":999,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/ReportService.html":{}}}],["30",{"_index":443,"title":{},"body":{"components/AdminReportComponent.html":{},"injectables/ReportService.html":{}}}],["30px",{"_index":87,"title":{},"body":{"components/AdminComponent.html":{}}}],["333",{"_index":354,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["343a40",{"_index":932,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4",{"_index":1018,"title":{},"body":{"injectables/ReportService.html":{}}}],["4.18.2",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":997,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["495057",{"_index":935,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4px",{"_index":306,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["5",{"_index":569,"title":{},"body":{"components/AdminResultComponent.html":{},"components/LoginComponent.html":{}}}],["5.2.0",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["5.3.3",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["5.4.1",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":616,"title":{},"body":{"components/AdminResultComponent.html":{},"injectables/ReportService.html":{}}}],["6",{"_index":876,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["6.0.0",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["6c757d",{"_index":98,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/UserComponent.html":{}}}],["7.8.0",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["70px",{"_index":922,"title":{},"body":{"components/NavbarComponent.html":{}}}],["8",{"_index":624,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["80",{"_index":615,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["8px",{"_index":307,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["9",{"_index":1290,"title":{},"body":{"overview.html":{}}}],["a[field",{"_index":612,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["accessors",{"_index":550,"title":{},"body":{"components/AdminResultComponent.html":{},"injectables/AuthService.html":{}}}],["according",{"_index":1012,"title":{},"body":{"injectables/ReportService.html":{}}}],["accordingly",{"_index":392,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["account",{"_index":407,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["action.service.ts",{"_index":1109,"title":{},"body":{"injectables/SectionActionService.html":{},"coverage.html":{}}}],["action.service.ts:11",{"_index":1118,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["action.service.ts:16",{"_index":1134,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["action.service.ts:21",{"_index":1133,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["action.service.ts:26",{"_index":1126,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["action.service.ts:31",{"_index":1136,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["action.service.ts:36",{"_index":1131,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["action.service.ts:41",{"_index":1121,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["action.service.ts:59",{"_index":1129,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["action.service.ts:63",{"_index":1124,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["actions",{"_index":1139,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["active",{"_index":346,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["actual",{"_index":943,"title":{},"body":{"interfaces/Option.html":{},"interfaces/Question.html":{},"injectables/QuestionService.html":{}}}],["actual_component",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["add",{"_index":287,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ExamComponent.html":{},"components/ResultHistoryComponent.html":{},"injectables/SectionActionService.html":{},"index.html":{}}}],["added",{"_index":467,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["addquestion",{"_index":1110,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["addquestion(sectionid",{"_index":1119,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["addquestiontosection",{"_index":1111,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["addquestiontosection(questiondata",{"_index":1122,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["adjust",{"_index":816,"title":{},"body":{"injectables/ExamService.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"injectables/ReportService.html":{},"interfaces/Section.html":{},"injectables/SectionService.html":{}}}],["admin",{"_index":14,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["admin'},{'name",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["admin.component.css",{"_index":21,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":23,"title":{},"body":{"components/AdminComponent.html":{}}}],["admincomponent",{"_index":1,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["adminexamcomponent",{"_index":120,"title":{"components/AdminExamComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["adminnavbarcomponent",{"_index":19,"title":{"components/AdminNavbarComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["adminreportcomponent",{"_index":123,"title":{"components/AdminReportComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["adminresultcomponent",{"_index":125,"title":{"components/AdminResultComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["adminsectioncomponent",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["again",{"_index":870,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["align",{"_index":338,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ResultComponent.html":{}}}],["allow",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allows",{"_index":730,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["alpha.2",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["already",{"_index":996,"title":{},"body":{"components/RegisterComponent.html":{}}}],["angular",{"_index":1244,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":46,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":786,"title":{},"body":{"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":201,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":45,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":312,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["animations",{"_index":311,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["answers",{"_index":732,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"components/ResultComponent.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["api",{"_index":817,"title":{},"body":{"injectables/ExamService.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"injectables/ReportService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{}}}],["apiurl",{"_index":768,"title":{},"body":{"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["app.component.css",{"_index":642,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":641,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":129,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1204,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1253,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":1145,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["applicationconfig",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applypercentagefilter",{"_index":546,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["appropriate",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":1095,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["artifacts",{"_index":1262,"title":{},"body":{"index.html":{}}}],["assuming",{"_index":789,"title":{},"body":{"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["attempt",{"_index":631,"title":{},"body":{"components/AdminResultComponent.html":{},"components/ResultComponent.html":{}}}],["attempted",{"_index":530,"title":{},"body":{"components/AdminReportComponent.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{}}}],["auth",{"_index":899,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["auth0/angular",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["authenticated",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":400,"title":{},"body":{"components/AdminNavbarComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["authguard",{"_index":1206,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authguardservice",{"_index":648,"title":{"injectables/AuthGuardService.html":{}},"body":{"injectables/AuthGuardService.html":{},"coverage.html":{}}}],["authservice",{"_index":174,"title":{"injectables/AuthService.html":{}},"body":{"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/ResultHistoryComponent.html":{},"coverage.html":{}}}],["authurl",{"_index":897,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["auto",{"_index":441,"title":{},"body":{"components/AdminReportComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{}}}],["automatically",{"_index":1254,"title":{},"body":{"index.html":{}}}],["autosubmitted",{"_index":440,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["available",{"_index":762,"title":{},"body":{"components/ExamComponent.html":{}}}],["b",{"_index":611,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["b[field",{"_index":613,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["backdrop",{"_index":323,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["background",{"_index":73,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/NavbarComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["base",{"_index":793,"title":{},"body":{"injectables/ExamResultService.html":{},"injectables/ReportService.html":{},"injectables/SectionActionService.html":{}}}],["based",{"_index":456,"title":{},"body":{"components/AdminReportComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["baseurl",{"_index":1001,"title":{},"body":{"injectables/ReportService.html":{}}}],["before",{"_index":273,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminReportComponent.html":{},"injectables/ReportService.html":{}}}],["behaviorsubject",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(false",{"_index":670,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(null",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{}}}],["bg",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{}}}],["bill",{"_index":644,"title":{},"body":{"components/AppComponent.html":{}}}],["blob",{"_index":499,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{}}}],["blob([csvcontent",{"_index":622,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["blob([headers",{"_index":500,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["block",{"_index":886,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["body",{"_index":76,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["bold",{"_index":95,"title":{},"body":{"components/AdminComponent.html":{},"components/NavbarComponent.html":{}}}],["boolean",{"_index":709,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{}}}],["bootstrap",{"_index":1210,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":67,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{}}}],["bottom",{"_index":628,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["bottom20",{"_index":573,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["box",{"_index":84,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{}}}],["break",{"_index":466,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{}}}],["browser",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["btn",{"_index":351,"title":{},"body":{"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{}}}],["build",{"_index":1261,"title":{},"body":{"index.html":{}}}],["button",{"_index":350,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["canactivatefn",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":1278,"title":{},"body":{"index.html":{}}}],["card",{"_index":66,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["card:hover",{"_index":80,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/UserComponent.html":{}}}],["cards",{"_index":65,"title":{},"body":{"components/AdminComponent.html":{}}}],["case",{"_index":462,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{}}}],["center",{"_index":337,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ResultComponent.html":{}}}],["change",{"_index":401,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["changes",{"_index":386,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["characters",{"_index":877,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["check",{"_index":473,"title":{},"body":{"components/AdminReportComponent.html":{},"injectables/AuthService.html":{},"components/UserComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["checkauthentication",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{}}}],["checking",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["choice",{"_index":1273,"title":{},"body":{"index.html":{}}}],["class",{"_index":50,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["class=\"table",{"_index":629,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["clear",{"_index":1039,"title":{},"body":{"components/ResultComponent.html":{}}}],["cli",{"_index":1245,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":754,"title":{},"body":{"components/ExamComponent.html":{}}}],["close",{"_index":252,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["close:hover",{"_index":355,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["closemodal",{"_index":162,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["code",{"_index":1257,"title":{},"body":{"index.html":{}}}],["collapse",{"_index":937,"title":{},"body":{"components/NavbarComponent.html":{}}}],["color",{"_index":74,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["command",{"_index":1274,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":18,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["complete",{"_index":1099,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["completed",{"_index":515,"title":{},"body":{"components/AdminReportComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["component",{"_index":0,"title":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"overview.html":{}}}],["config",{"_index":790,"title":{},"body":{"injectables/ExamResultService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":1013,"title":{},"body":{"injectables/ReportService.html":{}}}],["confirm",{"_index":992,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmation",{"_index":993,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":896,"title":{},"body":{"interfaces/LoginModel.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["congratulations",{"_index":1041,"title":{},"body":{"components/ResultComponent.html":{}}}],["console.error('error",{"_index":1092,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["console.log('create",{"_index":278,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["console.log('update",{"_index":271,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["console.log(registerdata",{"_index":986,"title":{},"body":{"components/RegisterComponent.html":{}}}],["const",{"_index":259,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"injectables/SectionActionService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["constructor(cookieservice",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(examresultservice",{"_index":552,"title":{},"body":{"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["constructor(examservice",{"_index":746,"title":{},"body":{"components/ExamComponent.html":{}}}],["constructor(fb",{"_index":171,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["constructor(formbuilder",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":773,"title":{},"body":{"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"injectables/QuestionService.html":{},"injectables/ReportService.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":51,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminReportComponent.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"interfaces/LoginModel.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["constructor(reportservice",{"_index":421,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["constructor(router",{"_index":28,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{}}}],["container",{"_index":1168,"title":{},"body":{"components/UserComponent.html":{}}}],["contains",{"_index":1138,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["content",{"_index":336,"title":{},"body":{"components/AdminExamComponent.html":{},"injectables/SectionActionService.html":{}}}],["convenient",{"_index":871,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["cookie",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["cookies",{"_index":850,"title":{},"body":{"components/LoginComponent.html":{}}}],["cookieservice",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["cookieservice.get('token",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correct",{"_index":742,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/Option.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"components/ResultComponent.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["corrected",{"_index":797,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["cover",{"_index":883,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["coverage",{"_index":1178,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":303,"title":{},"body":{"components/AdminExamComponent.html":{},"injectables/ExamService.html":{},"components/ResultHistoryComponent.html":{},"injectables/SectionActionService.html":{}}}],["created",{"_index":733,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["createdbyuserid",{"_index":157,"title":{},"body":{"components/AdminExamComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["createddate",{"_index":227,"title":{},"body":{"components/AdminExamComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["createexam",{"_index":799,"title":{},"body":{"injectables/ExamService.html":{}}}],["createexam(examdata",{"_index":805,"title":{},"body":{"injectables/ExamService.html":{}}}],["createexamdto",{"_index":203,"title":{"interfaces/CreateExamDto.html":{}},"body":{"components/AdminExamComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"injectables/ExamService.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"coverage.html":{}}}],["createsection",{"_index":1112,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["createsection(sectiondata",{"_index":1125,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["creating",{"_index":234,"title":{},"body":{"components/AdminExamComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["csrf",{"_index":861,"title":{},"body":{"components/LoginComponent.html":{}}}],["csv",{"_index":454,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"dependencies.html":{}}}],["csvcontent",{"_index":619,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["csvdata",{"_index":474,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["csvheaders",{"_index":620,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["csvrows.join('\\n",{"_index":621,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["current",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentpage",{"_index":538,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["currentrole",{"_index":367,"title":{},"body":{"components/AdminNavbarComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["d39e00",{"_index":360,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["danger",{"_index":1055,"title":{},"body":{"components/ResultComponent.html":{}}}],["dashboard",{"_index":55,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":231,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/ResultComponent.html":{},"miscellaneous/variables.html":{}}}],["data.filter(exam",{"_index":755,"title":{},"body":{"components/ExamComponent.html":{}}}],["date",{"_index":291,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"components/ExamComponent.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["date(response.expireson",{"_index":853,"title":{},"body":{"components/LoginComponent.html":{}}}],["date,duration,total",{"_index":495,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["date,duration\\n",{"_index":485,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["date,marked",{"_index":490,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["date,number",{"_index":476,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["date:'short",{"_index":764,"title":{},"body":{"components/ExamComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["date:\\'short",{"_index":765,"title":{},"body":{"components/ExamComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["day",{"_index":435,"title":{},"body":{"components/AdminReportComponent.html":{},"injectables/ReportService.html":{}}}],["dc3545",{"_index":884,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ddd",{"_index":1062,"title":{},"body":{"components/ResultComponent.html":{}}}],["decode",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoded",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodedtoken",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["decodedtoken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decodedtoken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["default",{"_index":190,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExamService.html":{},"injectables/SectionActionService.html":{}}}],["deleteexam",{"_index":800,"title":{},"body":{"injectables/ExamService.html":{}}}],["deleteexam(examid",{"_index":807,"title":{},"body":{"injectables/ExamService.html":{}}}],["deletequestion",{"_index":1113,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["deletequestion(questionid",{"_index":1128,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["deletesection",{"_index":1114,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["deletesection(sectionid",{"_index":1130,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["dependencies",{"_index":1213,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":218,"title":{},"body":{"components/AdminExamComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["details",{"_index":911,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["dev",{"_index":1251,"title":{},"body":{"index.html":{}}}],["development",{"_index":1247,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":342,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["directive",{"_index":116,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["directives",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1260,"title":{},"body":{"index.html":{}}}],["directly",{"_index":759,"title":{},"body":{"components/ExamComponent.html":{}}}],["directory",{"_index":1264,"title":{},"body":{"index.html":{}}}],["display",{"_index":333,"title":{},"body":{"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["displayed",{"_index":758,"title":{},"body":{"components/ExamComponent.html":{}}}],["dist",{"_index":1263,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["don't",{"_index":878,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["don\\'t",{"_index":890,"title":{},"body":{"components/LoginComponent.html":{}}}],["down",{"_index":314,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["download",{"_index":455,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{}}}],["downloadcsv",{"_index":419,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{}}}],["dropdown",{"_index":930,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dull",{"_index":344,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["duration",{"_index":221,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminReportComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["dynamic",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":643,"title":{},"body":{"components/AppComponent.html":{}}}],["e.g",{"_index":715,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["e2e",{"_index":1271,"title":{},"body":{"index.html":{}}}],["each",{"_index":1094,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["ease",{"_index":72,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{}}}],["ebill",{"_index":1241,"title":{},"body":{"index.html":{}}}],["edit",{"_index":295,"title":{},"body":{"components/AdminExamComponent.html":{},"components/UserComponent.html":{}}}],["editing",{"_index":235,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["editmode",{"_index":158,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["effect",{"_index":324,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["effects",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{}}}],["element",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["email",{"_index":511,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["email,exam",{"_index":482,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["end",{"_index":292,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ExamComponent.html":{},"index.html":{}}}],["enddate",{"_index":220,"title":{},"body":{"components/AdminExamComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["endpoint",{"_index":944,"title":{},"body":{"interfaces/Option.html":{},"interfaces/Question.html":{},"injectables/QuestionService.html":{}}}],["ensure",{"_index":212,"title":{},"body":{"components/AdminExamComponent.html":{},"components/LoginComponent.html":{}}}],["environment",{"_index":787,"title":{},"body":{"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"interfaces/LoginModel.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl}/auth",{"_index":898,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["environment.apiurl}/exam",{"_index":814,"title":{},"body":{"injectables/ExamService.html":{}}}],["environment.apiurl}/examresult",{"_index":785,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["environment.apiurl}/question",{"_index":942,"title":{},"body":{"interfaces/Option.html":{},"interfaces/Question.html":{},"injectables/QuestionService.html":{}}}],["environment.apiurl}/reports",{"_index":1011,"title":{},"body":{"injectables/ReportService.html":{}}}],["environment.apiurl}/section",{"_index":955,"title":{},"body":{"interfaces/OptionDto.html":{},"interfaces/QuestionDto.html":{},"interfaces/Section.html":{},"injectables/SectionService.html":{}}}],["environment.apiurl}/sectionaction",{"_index":1137,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["environment.apiurl}/user",{"_index":903,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["environments/environment",{"_index":788,"title":{},"body":{"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"interfaces/LoginModel.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{}}}],["error",{"_index":464,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["error.error",{"_index":1093,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["error.error.message",{"_index":867,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["errormessage",{"_index":414,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["event",{"_index":395,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["eventcoalescing",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exam",{"_index":59,"title":{"interfaces/Exam.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["exam'},{'name",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["exam.component.css",{"_index":154,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ExamComponent.html":{}}}],["exam.component.html",{"_index":155,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ExamComponent.html":{}}}],["exam.component.ts",{"_index":149,"title":{},"body":{"components/AdminExamComponent.html":{},"coverage.html":{}}}],["exam.component.ts:133",{"_index":187,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.component.ts:154",{"_index":189,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.component.ts:174",{"_index":185,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.component.ts:18",{"_index":195,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.component.ts:19",{"_index":193,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.component.ts:20",{"_index":198,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.component.ts:21",{"_index":196,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.component.ts:22",{"_index":199,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.component.ts:23",{"_index":175,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.component.ts:27",{"_index":180,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.component.ts:33",{"_index":179,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.component.ts:50",{"_index":178,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.component.ts:57",{"_index":183,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.component.ts:82",{"_index":177,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.component.ts:88",{"_index":181,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.createdbyuserid",{"_index":248,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.createddate",{"_index":250,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.description",{"_index":241,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ExamComponent.html":{}}}],["exam.duration",{"_index":244,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.enddate",{"_index":243,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ExamComponent.html":{}}}],["exam.ispublished",{"_index":249,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ExamComponent.html":{}}}],["exam.israndmized",{"_index":247,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.passingmarks",{"_index":246,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam.startdate",{"_index":242,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ExamComponent.html":{}}}],["exam.title",{"_index":240,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ExamComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["exam.totalmarks",{"_index":245,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["exam/admin",{"_index":148,"title":{},"body":{"components/AdminExamComponent.html":{},"coverage.html":{}}}],["examcomponent",{"_index":131,"title":{"components/ExamComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["examdata",{"_index":594,"title":{},"body":{"components/AdminResultComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/ResultHistoryComponent.html":{}}}],["examdata.foreach((exam",{"_index":1101,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["examdata[index]?.title",{"_index":601,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["examform",{"_index":159,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["examid",{"_index":710,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"injectables/ExamService.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{}}}],["examm",{"_index":405,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["example",{"_index":1283,"title":{},"body":{"index.html":{}}}],["examrequests",{"_index":589,"title":{},"body":{"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["examrequests.push(this.examservice.getexambyid(result.examid",{"_index":1097,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["examresult",{"_index":1022,"title":{},"body":{"components/ResultComponent.html":{}}}],["examresult.attemptnumber",{"_index":1043,"title":{},"body":{"components/ResultComponent.html":{}}}],["examresult.duration",{"_index":1046,"title":{},"body":{"components/ResultComponent.html":{}}}],["examresult.percentage",{"_index":1045,"title":{},"body":{"components/ResultComponent.html":{}}}],["examresult.totalscore",{"_index":1044,"title":{},"body":{"components/ResultComponent.html":{}}}],["examresults",{"_index":539,"title":{},"body":{"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["examresultservice",{"_index":553,"title":{"injectables/ExamResultService.html":{}},"body":{"components/AdminResultComponent.html":{},"injectables/ExamResultService.html":{},"components/ResultHistoryComponent.html":{},"coverage.html":{}}}],["exams",{"_index":61,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/ExamComponent.html":{},"injectables/ExamService.html":{},"components/UserComponent.html":{}}}],["examservice",{"_index":173,"title":{"injectables/ExamService.html":{}},"body":{"components/AdminExamComponent.html":{},"components/AdminResultComponent.html":{},"components/ExamComponent.html":{},"injectables/ExamService.html":{},"components/ResultHistoryComponent.html":{},"coverage.html":{}}}],["execute",{"_index":1268,"title":{},"body":{"index.html":{}}}],["exist",{"_index":815,"title":{},"body":{"injectables/ExamService.html":{}}}],["existing",{"_index":822,"title":{},"body":{"injectables/ExamService.html":{}}}],["exit",{"_index":1023,"title":{},"body":{"components/ResultComponent.html":{}}}],["expires",{"_index":852,"title":{},"body":{"components/LoginComponent.html":{}}}],["export",{"_index":49,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["express",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["extract",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["f8f9fa",{"_index":75,"title":{},"body":{"components/AdminComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["fade",{"_index":310,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["fail",{"_index":494,"title":{},"body":{"components/AdminReportComponent.html":{},"components/ResultComponent.html":{}}}],["fail'},${row.completeddate},${row.duration",{"_index":488,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["fail'},${row.completeddate},${row.duration},${row.totalquestions},${row.attemptedquestions",{"_index":498,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["failed",{"_index":868,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["false",{"_index":192,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":176,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["feedback",{"_index":885,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fetch",{"_index":228,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminReportComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"interfaces/LoginModel.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"interfaces/RegisterModel.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{}}}],["fetchexamnames",{"_index":1075,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["fetchexamnames(results",{"_index":1078,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["fetching",{"_index":465,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"injectables/ExamResultService.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"components/ResultHistoryComponent.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["fetchreportdata",{"_index":420,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["ffffff",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{},"components/NavbarComponent.html":{}}}],["field",{"_index":563,"title":{},"body":{"components/AdminResultComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":1256,"title":{},"body":{"index.html":{}}}],["filter",{"_index":382,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["filter(event",{"_index":394,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["filtered",{"_index":625,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["filteredresults",{"_index":540,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["filteredresults.length",{"_index":637,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["finished",{"_index":437,"title":{},"body":{"components/AdminReportComponent.html":{},"injectables/ReportService.html":{}}}],["finishedbeforetime",{"_index":436,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["first",{"_index":1276,"title":{},"body":{"index.html":{}}}],["fit",{"_index":882,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fixed",{"_index":326,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["flex",{"_index":334,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["font",{"_index":91,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/NavbarComponent.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{}}}],["footer",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{}}}],["foreign",{"_index":713,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["forkjoin",{"_index":582,"title":{},"body":{"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["forkjoin([forkjoin(userrequests",{"_index":591,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["forkjoin(examrequests).subscribe",{"_index":1100,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["forkjoin(examrequests)]).subscribe",{"_index":592,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["form",{"_index":255,"title":{},"body":{"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["form.get('confirmpassword')!.value",{"_index":982,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.get('password')!.value",{"_index":981,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":172,"title":{},"body":{"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":194,"title":{},"body":{"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":411,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{}}}],["forwards",{"_index":316,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["found",{"_index":1106,"title":{},"body":{"components/ResultHistoryComponent.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExamResultService.html":{}}}],["further",{"_index":1279,"title":{},"body":{"index.html":{}}}],["generate",{"_index":63,"title":{},"body":{"components/AdminComponent.html":{},"index.html":{}}}],["generated",{"_index":1243,"title":{},"body":{"index.html":{}}}],["getallexams",{"_index":163,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["getallquestions",{"_index":946,"title":{},"body":{"interfaces/Option.html":{},"interfaces/Question.html":{},"injectables/QuestionService.html":{}}}],["getallresults",{"_index":770,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["getautosubmittedafter30mins",{"_index":1002,"title":{},"body":{"injectables/ReportService.html":{}}}],["getexambyid",{"_index":801,"title":{},"body":{"injectables/ExamService.html":{}}}],["getexambyid(examid",{"_index":809,"title":{},"body":{"injectables/ExamService.html":{}}}],["getexams",{"_index":802,"title":{},"body":{"injectables/ExamService.html":{}}}],["getisloggedin",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{}}}],["getpaginatedresults",{"_index":577,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["getquestionsbysectionid",{"_index":1148,"title":{},"body":{"injectables/SectionService.html":{}}}],["getquestionsbysectionid(sectionid",{"_index":960,"title":{},"body":{"interfaces/OptionDto.html":{},"interfaces/QuestionDto.html":{},"interfaces/Section.html":{},"injectables/SectionService.html":{}}}],["getresultsbyuser",{"_index":771,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["getresultsbyuser(userid",{"_index":778,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["getrole",{"_index":674,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsectionbyid",{"_index":1115,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["getsectionbyid(sectionid",{"_index":1132,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["getsectionsbyexamid",{"_index":1116,"title":{},"body":{"injectables/SectionActionService.html":{},"injectables/SectionService.html":{}}}],["getsectionsbyexamid(examid",{"_index":958,"title":{},"body":{"interfaces/OptionDto.html":{},"interfaces/QuestionDto.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{}}}],["gettestsfinishedbeforetime",{"_index":1003,"title":{},"body":{"injectables/ReportService.html":{}}}],["gettestsmarkedforreview",{"_index":1004,"title":{},"body":{"injectables/ReportService.html":{}}}],["gettestsperday",{"_index":1005,"title":{},"body":{"injectables/ReportService.html":{}}}],["getting",{"_index":1239,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":1172,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid(userid",{"_index":912,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["getuserid",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{}}}],["go",{"_index":60,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["gotoexam",{"_index":1155,"title":{},"body":{"components/UserComponent.html":{}}}],["gotoprofile",{"_index":1156,"title":{},"body":{"components/UserComponent.html":{}}}],["gotoresults",{"_index":1157,"title":{},"body":{"components/UserComponent.html":{}}}],["green",{"_index":1054,"title":{},"body":{"components/ResultComponent.html":{}}}],["group",{"_index":887,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["guard.service.ts",{"_index":651,"title":{},"body":{"injectables/AuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:6",{"_index":652,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["h3",{"_index":1057,"title":{},"body":{"components/ResultComponent.html":{}}}],["h5",{"_index":90,"title":{},"body":{"components/AdminComponent.html":{}}}],["handle",{"_index":453,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["headers",{"_index":475,"title":{},"body":{"components/AdminReportComponent.html":{},"injectables/SectionActionService.html":{}}}],["height",{"_index":78,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["help",{"_index":1280,"title":{},"body":{"index.html":{}}}],["here",{"_index":752,"title":{},"body":{"components/ExamComponent.html":{}}}],["history",{"_index":1072,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["history'},{'name",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["history.component.css",{"_index":1073,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["history.component.html",{"_index":1074,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["history.component.ts",{"_index":1071,"title":{},"body":{"components/ResultHistoryComponent.html":{},"coverage.html":{}}}],["history.component.ts:17",{"_index":1084,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["history.component.ts:18",{"_index":1082,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["history.component.ts:19",{"_index":1083,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["history.component.ts:20",{"_index":1077,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["history.component.ts:28",{"_index":1081,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["history.component.ts:38",{"_index":1080,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["history.component.ts:57",{"_index":1079,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["history/result",{"_index":1070,"title":{},"body":{"components/ResultHistoryComponent.html":{},"coverage.html":{}}}],["holds",{"_index":1028,"title":{},"body":{"components/ResultComponent.html":{}}}],["home",{"_index":406,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["hover",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{}}}],["html",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["http",{"_index":776,"title":{},"body":{"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"interfaces/LoginModel.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":1252,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":774,"title":{},"body":{"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"interfaces/LoginModel.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":827,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["https",{"_index":857,"title":{},"body":{"components/LoginComponent.html":{}}}],["https://localhost:7205/api",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://localhost:7205/api/examresult/submit",{"_index":783,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["icons",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{}}}],["id",{"_index":510,"title":{},"body":{"components/AdminReportComponent.html":{},"injectables/AuthService.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"components/ResultComponent.html":{},"injectables/UserService.html":{}}}],["id,user",{"_index":480,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["identifier",{"_index":724,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"coverage.html":{}}}],["img",{"_index":880,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["implements",{"_index":150,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/ExamComponent.html":{},"components/NavbarComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"index.html":{}}}],["import",{"_index":43,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["important",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"components/NavbarComponent.html":{}}}],["imports",{"_index":17,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":729,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["info:hover",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{}}}],["initializeform",{"_index":164,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["inject",{"_index":837,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["inject(cookieservice",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(jwthelperservice",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":647,"title":{"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"injectables/QuestionService.html":{},"injectables/ReportService.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"interfaces/LoginModel.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":649,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"injectables/QuestionService.html":{},"injectables/ReportService.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inside",{"_index":1144,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["instanceof",{"_index":396,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["interface",{"_index":706,"title":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/LoginModel.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/RegisterModel.html":{},"interfaces/Section.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/LoginModel.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"interfaces/RegisterModel.html":{},"interfaces/Section.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["interface/exam.model",{"_index":205,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ExamComponent.html":{},"injectables/ExamService.html":{},"injectables/SectionActionService.html":{}}}],["interfaces",{"_index":707,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"injectables/ExamService.html":{},"interfaces/LoginModel.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/RegisterModel.html":{},"interfaces/Section.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"overview.html":{}}}],["invalid",{"_index":875,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["iscorrect",{"_index":741,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{}}}],["isloading",{"_index":415,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["isloggedin",{"_index":368,"title":{},"body":{"components/AdminNavbarComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["ismultiplechoice",{"_index":728,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{}}}],["ispublished",{"_index":226,"title":{},"body":{"components/AdminExamComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["israndmized",{"_index":225,"title":{},"body":{"components/AdminExamComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["it's",{"_index":213,"title":{},"body":{"components/AdminExamComponent.html":{},"components/LoginComponent.html":{}}}],["item",{"_index":933,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item.active",{"_index":926,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item:hover",{"_index":934,"title":{},"body":{"components/NavbarComponent.html":{}}}],["items",{"_index":339,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["join('\\n",{"_index":489,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["json.parse(resultdata",{"_index":1035,"title":{},"body":{"components/ResultComponent.html":{}}}],["json2csv",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":335,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["jwt",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{},"components/ResultHistoryComponent.html":{},"dependencies.html":{}}}],["jwt_options",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwthelper",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["jwthelper.decodetoken(token",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwthelperservice",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["karma",{"_index":1270,"title":{},"body":{"index.html":{}}}],["key",{"_index":714,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["keyframes",{"_index":317,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["label",{"_index":430,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["learning",{"_index":873,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["left",{"_index":328,"title":{},"body":{"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["legend",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["less",{"_index":1016,"title":{},"body":{"injectables/ReportService.html":{}}}],["link",{"_index":927,"title":{},"body":{"components/NavbarComponent.html":{}}}],["link:hover",{"_index":929,"title":{},"body":{"components/NavbarComponent.html":{}}}],["list",{"_index":721,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["listen",{"_index":384,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["literal",{"_index":1123,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["load",{"_index":1087,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["loadexamresults",{"_index":1076,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["loading",{"_index":506,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["loadresults",{"_index":547,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["localstorage",{"_index":1031,"title":{},"body":{"components/ResultComponent.html":{}}}],["localstorage.clear",{"_index":1040,"title":{},"body":{"components/ResultComponent.html":{}}}],["localstorage.getitem('examresult",{"_index":1033,"title":{},"body":{"components/ResultComponent.html":{}}}],["log",{"_index":272,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["loggedin",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":385,"title":{},"body":{"components/AdminNavbarComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["login(token",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(user",{"_index":909,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["login.component.css",{"_index":828,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":132,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["logindata",{"_index":845,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmodel",{"_index":891,"title":{"interfaces/LoginModel.html":{}},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["logout",{"_index":370,"title":{},"body":{"components/AdminNavbarComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["long",{"_index":991,"title":{},"body":{"components/RegisterComponent.html":{}}}],["main",{"_index":304,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["make",{"_index":947,"title":{},"body":{"interfaces/Option.html":{},"interfaces/Question.html":{},"injectables/QuestionService.html":{},"injectables/SectionActionService.html":{}}}],["manage",{"_index":58,"title":{},"body":{"components/AdminComponent.html":{}}}],["margin",{"_index":888,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{}}}],["marked",{"_index":446,"title":{},"body":{"components/AdminReportComponent.html":{},"injectables/ReportService.html":{}}}],["markedforreview",{"_index":445,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["marks",{"_index":294,"title":{},"body":{"components/AdminExamComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["match",{"_index":995,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["matches",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math",{"_index":716,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["max",{"_index":1169,"title":{},"body":{"components/UserComponent.html":{}}}],["mediaurl",{"_index":736,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["menu",{"_index":931,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["method",{"_index":945,"title":{},"body":{"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"components/ResultComponent.html":{},"interfaces/Section.html":{},"injectables/SectionService.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["min",{"_index":77,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminReportComponent.html":{},"components/RegisterComponent.html":{}}}],["minimum",{"_index":719,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["mins",{"_index":444,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["minutes",{"_index":301,"title":{},"body":{"components/AdminExamComponent.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["miscellaneous",{"_index":1293,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mismatch",{"_index":974,"title":{},"body":{"components/RegisterComponent.html":{}}}],["modal",{"_index":233,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["model",{"_index":711,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["modules",{"_index":1288,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moment",{"_index":763,"title":{},"body":{"components/ExamComponent.html":{}}}],["more",{"_index":1019,"title":{},"body":{"injectables/ReportService.html":{},"index.html":{}}}],["multiple",{"_index":731,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["name",{"_index":34,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["name,user",{"_index":481,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["names",{"_index":1088,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["nav",{"_index":925,"title":{},"body":{"components/NavbarComponent.html":{}}}],["nav.ml",{"_index":889,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["nav.navbar",{"_index":936,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":363,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["navbar'},{'name",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["navbar.component",{"_index":48,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{}}}],["navbar.component.css",{"_index":366,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":364,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar.component.ts",{"_index":362,"title":{},"body":{"components/AdminNavbarComponent.html":{},"coverage.html":{}}}],["navbar.component.ts:16",{"_index":378,"title":{},"body":{"components/AdminNavbarComponent.html":{}}}],["navbar.component.ts:17",{"_index":373,"title":{},"body":{"components/AdminNavbarComponent.html":{}}}],["navbar.component.ts:20",{"_index":379,"title":{},"body":{"components/AdminNavbarComponent.html":{}}}],["navbar.component.ts:24",{"_index":377,"title":{},"body":{"components/AdminNavbarComponent.html":{}}}],["navbar.component.ts:43",{"_index":374,"title":{},"body":{"components/AdminNavbarComponent.html":{}}}],["navbar.component.ts:48",{"_index":375,"title":{},"body":{"components/AdminNavbarComponent.html":{}}}],["navbar.component.ts:52",{"_index":376,"title":{},"body":{"components/AdminNavbarComponent.html":{}}}],["navbar/admin",{"_index":47,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"coverage.html":{}}}],["navbarcomponent",{"_index":134,"title":{"components/NavbarComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":52,"title":{},"body":{"components/AdminComponent.html":{},"components/ExamComponent.html":{},"index.html":{}}}],["navigateto",{"_index":26,"title":{},"body":{"components/AdminComponent.html":{}}}],["navigateto(route",{"_index":37,"title":{},"body":{"components/AdminComponent.html":{}}}],["navigatetologin",{"_index":371,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["navigatetoregister",{"_index":372,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["navigationend",{"_index":380,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["necessary",{"_index":940,"title":{},"body":{"interfaces/Option.html":{},"interfaces/Question.html":{},"injectables/QuestionService.html":{}}}],["need",{"_index":1275,"title":{},"body":{"index.html":{}}}],["needed",{"_index":818,"title":{},"body":{"injectables/ExamService.html":{}}}],["new",{"_index":288,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"injectables/AuthService.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/RegisterModel.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":638,"title":{},"body":{"components/AdminResultComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ng",{"_index":1249,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":165,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/ExamComponent.html":{},"components/NavbarComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["ngx",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["no'},${result.attemptnumber",{"_index":618,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["none",{"_index":352,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["null",{"_index":197,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["number",{"_index":431,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"injectables/ExamService.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{}}}],["number:'1.2",{"_index":522,"title":{},"body":{"components/AdminReportComponent.html":{},"components/ResultComponent.html":{}}}],["number:\\'1.2",{"_index":533,"title":{},"body":{"components/AdminReportComponent.html":{},"components/ResultComponent.html":{}}}],["numberofquestions",{"_index":718,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["object",{"_index":881,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"interfaces/LoginModel.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{}}}],["observables",{"_index":1096,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["oninit",{"_index":151,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/ExamComponent.html":{},"components/NavbarComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["online_examcontextconnection",{"_index":1284,"title":{},"body":{"index.html":{}}}],["onsubmit",{"_index":166,"title":{},"body":{"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["opacity",{"_index":318,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["open",{"_index":232,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["openmodal",{"_index":167,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["openmodal(exam",{"_index":182,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["option",{"_index":739,"title":{"interfaces/Option.html":{}},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/Option.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"coverage.html":{}}}],["optional",{"_index":36,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["optiondto",{"_index":950,"title":{"interfaces/OptionDto.html":{}},"body":{"interfaces/OptionDto.html":{},"interfaces/QuestionDto.html":{},"interfaces/Section.html":{},"injectables/SectionService.html":{},"coverage.html":{}}}],["optiongetdto",{"_index":738,"title":{"interfaces/OptionGetDTO.html":{}},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"coverage.html":{}}}],["optionid",{"_index":743,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"interfaces/Section.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{}}}],["optionpostdto",{"_index":735,"title":{"interfaces/OptionPostDTO.html":{}},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"coverage.html":{}}}],["options",{"_index":734,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{}}}],["optiontext",{"_index":740,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{}}}],["out",{"_index":308,"title":{},"body":{"components/AdminExamComponent.html":{},"index.html":{}}}],["over",{"_index":856,"title":{},"body":{"components/LoginComponent.html":{}}}],["overall",{"_index":1029,"title":{},"body":{"components/ResultComponent.html":{}}}],["overview",{"_index":1281,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1212,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":923,"title":{},"body":{"components/NavbarComponent.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{}}}],["page",{"_index":760,"title":{},"body":{"components/ExamComponent.html":{},"index.html":{}}}],["pagesize",{"_index":541,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["paginatedresults",{"_index":551,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["papaparse",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["part",{"_index":1038,"title":{},"body":{"components/ResultComponent.html":{}}}],["pass",{"_index":487,"title":{},"body":{"components/AdminReportComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"components/ResultComponent.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["pass/fail",{"_index":1030,"title":{},"body":{"components/ResultComponent.html":{}}}],["passed",{"_index":514,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["passing",{"_index":302,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["passingmarks",{"_index":224,"title":{},"body":{"components/AdminExamComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["password",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["passwordmatchvalidator",{"_index":969,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordmatchvalidator(form",{"_index":972,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwords",{"_index":994,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Option.html":{},"interfaces/Question.html":{},"injectables/QuestionService.html":{}}}],["per",{"_index":434,"title":{},"body":{"components/AdminReportComponent.html":{},"injectables/ReportService.html":{}}}],["percentage",{"_index":513,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["percentagefilter",{"_index":542,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["performance",{"_index":1167,"title":{},"body":{"components/UserComponent.html":{}}}],["platform",{"_index":1272,"title":{},"body":{"index.html":{}}}],["please",{"_index":472,"title":{},"body":{"components/AdminReportComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["points",{"_index":949,"title":{},"body":{"interfaces/Option.html":{},"interfaces/Question.html":{},"injectables/QuestionService.html":{}}}],["popup",{"_index":345,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["position",{"_index":325,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["posting",{"_index":274,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["prevent",{"_index":860,"title":{},"body":{"components/LoginComponent.html":{}}}],["previous",{"_index":636,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["primary",{"_index":1065,"title":{},"body":{"components/ResultComponent.html":{}}}],["primary:hover",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/ResultComponent.html":{}}}],["private",{"_index":207,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminResultComponent.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{}}}],["production",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1164,"title":{},"body":{"components/UserComponent.html":{}}}],["project",{"_index":1242,"title":{},"body":{"index.html":{}}}],["properties",{"_index":156,"title":{"properties.html":{}},"body":{"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provide",{"_index":836,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":957,"title":{},"body":{"interfaces/OptionDto.html":{},"interfaces/QuestionDto.html":{},"interfaces/Section.html":{},"injectables/SectionService.html":{}}}],["providedin",{"_index":653,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"interfaces/LoginModel.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{}}}],["providehttpclient(withfetch",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":826,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":369,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["publish",{"_index":297,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["published",{"_index":283,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ExamComponent.html":{}}}],["question",{"_index":726,"title":{"interfaces/Question.html":{}},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"components/ExamComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"coverage.html":{}}}],["questiondata",{"_index":1120,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["questiondto",{"_index":953,"title":{"interfaces/QuestionDto.html":{}},"body":{"interfaces/OptionDto.html":{},"interfaces/QuestionDto.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"coverage.html":{}}}],["questiongetdto",{"_index":725,"title":{"interfaces/QuestionGetDTO.html":{}},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"coverage.html":{}}}],["questionid",{"_index":737,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{}}}],["questionpostdto",{"_index":720,"title":{"interfaces/QuestionPostDTO.html":{}},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"coverage.html":{}}}],["questions",{"_index":529,"title":{},"body":{"components/AdminReportComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"components/ExamComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"interfaces/Section.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{}}}],["questions,attempted",{"_index":496,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["questions\\n",{"_index":497,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["questionservice",{"_index":941,"title":{"injectables/QuestionService.html":{}},"body":{"interfaces/Option.html":{},"interfaces/Question.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["questiontext",{"_index":727,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{}}}],["radius",{"_index":68,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/UserComponent.html":{}}}],["randomize",{"_index":299,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["randomized",{"_index":286,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["rbdopgi\\\\sqlexpress;database=reeval_monday;integrated",{"_index":1286,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":152,"title":{},"body":{"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["recheck",{"_index":399,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["red",{"_index":1056,"title":{},"body":{"components/ResultComponent.html":{}}}],["redirect",{"_index":862,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"miscellaneous/variables.html":{}}}],["reference",{"_index":1282,"title":{},"body":{"index.html":{}}}],["register",{"_index":904,"title":{},"body":{"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["register'},{'name",{"_index":136,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["register(user",{"_index":905,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["register.component.css",{"_index":965,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":966,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":135,"title":{"components/RegisterComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["registerdata",{"_index":984,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform",{"_index":967,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registermodel",{"_index":894,"title":{"interfaces/RegisterModel.html":{}},"body":{"interfaces/LoginModel.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["registration",{"_index":893,"title":{},"body":{"interfaces/LoginModel.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["related",{"_index":900,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["reload",{"_index":1255,"title":{},"body":{"index.html":{}}}],["report",{"_index":410,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["report'},{'name",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["report.component.css",{"_index":412,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["report.component.html",{"_index":413,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["report.component.ts",{"_index":409,"title":{},"body":{"components/AdminReportComponent.html":{},"coverage.html":{}}}],["report.component.ts:16",{"_index":448,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["report.component.ts:23",{"_index":449,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["report.component.ts:24",{"_index":428,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["report.component.ts:25",{"_index":427,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["report.component.ts:26",{"_index":423,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["report.component.ts:30",{"_index":426,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["report.component.ts:33",{"_index":425,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["report.component.ts:95",{"_index":424,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["report.csv",{"_index":503,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["report.label",{"_index":505,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["report/admin",{"_index":408,"title":{},"body":{"components/AdminReportComponent.html":{},"coverage.html":{}}}],["reportdata",{"_index":416,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["reportoptions",{"_index":417,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["reports",{"_index":62,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminNavbarComponent.html":{},"injectables/ReportService.html":{}}}],["reportservice",{"_index":422,"title":{"injectables/ReportService.html":{}},"body":{"components/AdminReportComponent.html":{},"injectables/ReportService.html":{},"coverage.html":{}}}],["requests",{"_index":901,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"components/ResultHistoryComponent.html":{},"injectables/UserService.html":{}}}],["required",{"_index":300,"title":{},"body":{"components/AdminExamComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"components/LoginComponent.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"components/RegisterComponent.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["resetform",{"_index":168,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["response",{"_index":848,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{}}}],["response.roles.includes('admin",{"_index":863,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.roles.includes('user",{"_index":865,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.token",{"_index":851,"title":{},"body":{"components/LoginComponent.html":{}}}],["responsive",{"_index":630,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result",{"_index":139,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["result'},{'name",{"_index":126,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["result.attemptnumber",{"_index":634,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.completeddate",{"_index":635,"title":{},"body":{"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["result.component.css",{"_index":536,"title":{},"body":{"components/AdminResultComponent.html":{},"components/ResultComponent.html":{}}}],["result.component.html",{"_index":537,"title":{},"body":{"components/AdminResultComponent.html":{},"components/ResultComponent.html":{}}}],["result.component.ts",{"_index":535,"title":{},"body":{"components/AdminResultComponent.html":{},"coverage.html":{}}}],["result.component.ts:112",{"_index":578,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.component.ts:119",{"_index":557,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.component.ts:19",{"_index":566,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.component.ts:20",{"_index":567,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.component.ts:21",{"_index":568,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.component.ts:22",{"_index":565,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.component.ts:23",{"_index":574,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.component.ts:24",{"_index":564,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.component.ts:25",{"_index":570,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.component.ts:26",{"_index":576,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.component.ts:27",{"_index":575,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.component.ts:28",{"_index":555,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.component.ts:36",{"_index":559,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.component.ts:40",{"_index":558,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.component.ts:76",{"_index":560,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.component.ts:84",{"_index":562,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.component.ts:96",{"_index":556,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.duration",{"_index":1105,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["result.email",{"_index":598,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.email.tolowercase().includes(this.searchterm.tolowercase",{"_index":606,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.examname",{"_index":1104,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["result.examtitle",{"_index":600,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.examtitle.tolowercase().includes(this.searchterm.tolowercase",{"_index":607,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.passed",{"_index":633,"title":{},"body":{"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["result.percentage",{"_index":614,"title":{},"body":{"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["result.service",{"_index":580,"title":{},"body":{"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["result.service.ts",{"_index":767,"title":{},"body":{"injectables/ExamResultService.html":{},"coverage.html":{}}}],["result.service.ts:10",{"_index":784,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["result.service.ts:11",{"_index":775,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["result.service.ts:16",{"_index":782,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["result.service.ts:21",{"_index":779,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["result.service.ts:26",{"_index":777,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["result.totalscore",{"_index":632,"title":{},"body":{"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["result.username",{"_index":596,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.username.tolowercase().includes(this.searchterm.tolowercase",{"_index":605,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result.username},${result.email},${result.examtitle},${result.totalscore},${result.percentage}%,${result.passed",{"_index":617,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["result/admin",{"_index":534,"title":{},"body":{"components/AdminResultComponent.html":{},"coverage.html":{}}}],["resultcomponent",{"_index":137,"title":{"components/ResultComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["resultdata",{"_index":1032,"title":{},"body":{"components/ResultComponent.html":{}}}],["resulthistorycomponent",{"_index":138,"title":{"components/ResultHistoryComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["results",{"_index":56,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["results.csv",{"_index":626,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["results.foreach((result",{"_index":595,"title":{},"body":{"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["results.length",{"_index":1090,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["results.map((result",{"_index":587,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["results[index].examname",{"_index":1102,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["resulturl",{"_index":769,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["return",{"_index":258,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminResultComponent.html":{},"injectables/AuthService.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":41,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["review",{"_index":447,"title":{},"body":{"components/AdminReportComponent.html":{},"injectables/ReportService.html":{}}}],["review,user",{"_index":491,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["rgba(0",{"_index":88,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{}}}],["rgba(255,255,255,0.7",{"_index":928,"title":{},"body":{"components/NavbarComponent.html":{}}}],["right",{"_index":938,"title":{},"body":{"components/NavbarComponent.html":{}}}],["role",{"_index":389,"title":{},"body":{"components/AdminNavbarComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":640,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"interfaces/LoginModel.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":130,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["route",{"_index":40,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["route's",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route.data['role",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route.data['role'].includes(role",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":29,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminNavbarComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/admin",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigate(['/user",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":153,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["routeroutlet",{"_index":381,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["row.attemptedquestions",{"_index":532,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["row.completeddate",{"_index":525,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["row.completeddate},${row.markforreview},${row.username},${row.useremail},${row.examtitle},${row.totalscore},${row.passed",{"_index":493,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["row.date",{"_index":507,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["row.date},${row.numberoftests}`).join('\\n",{"_index":479,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["row.duration",{"_index":527,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["row.examresultid",{"_index":516,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["row.examresultid},${row.username},${row.useremail},${row.examtitle},${row.totalscore},${row.percentage},${row.passed",{"_index":486,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["row.examtitle",{"_index":519,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["row.markforreview",{"_index":528,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["row.numberoftests",{"_index":509,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["row.passed",{"_index":524,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["row.percentage",{"_index":521,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["row.totalquestions",{"_index":531,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["row.totalscore",{"_index":520,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["row.useremail",{"_index":518,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["row.username",{"_index":517,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["run",{"_index":1248,"title":{},"body":{"index.html":{}}}],["running",{"_index":1265,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":583,"title":{},"body":{"components/AdminResultComponent.html":{},"injectables/AuthService.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"interfaces/LoginModel.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"injectables/QuestionService.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":383,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["samesite",{"_index":858,"title":{},"body":{"components/LoginComponent.html":{}}}],["saveas",{"_index":451,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{}}}],["saveas(blob",{"_index":502,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{}}}],["saver",{"_index":452,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":1258,"title":{},"body":{"index.html":{}}}],["scale(1.05",{"_index":309,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["science",{"_index":717,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["score",{"_index":512,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["score,passed\\n",{"_index":492,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["score,percentage,passed,completed",{"_index":484,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["scores",{"_index":627,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["search",{"_index":548,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["searchterm",{"_index":543,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["secondary:hover",{"_index":358,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["section",{"_index":289,"title":{"interfaces/Section.html":{}},"body":{"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"components/ExamComponent.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"components/ResultComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{},"coverage.html":{}}}],["section'},{'name",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["section.attemptedquestions",{"_index":1049,"title":{},"body":{"components/ResultComponent.html":{}}}],["section.component.ts",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["section.correctanswers",{"_index":1050,"title":{},"body":{"components/ResultComponent.html":{}}}],["section.ispassed",{"_index":1052,"title":{},"body":{"components/ResultComponent.html":{}}}],["section.sectionid",{"_index":1048,"title":{},"body":{"components/ResultComponent.html":{}}}],["section.sectionscore",{"_index":1051,"title":{},"body":{"components/ResultComponent.html":{}}}],["section/admin",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["sectionactionservice",{"_index":1107,"title":{"injectables/SectionActionService.html":{}},"body":{"injectables/SectionActionService.html":{},"coverage.html":{}}}],["sectioncomponent",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["sectiondata",{"_index":1127,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["sectiongetdto",{"_index":722,"title":{"interfaces/SectionGetDTO.html":{}},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"coverage.html":{}}}],["sectionid",{"_index":723,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{}}}],["sectionname",{"_index":952,"title":{},"body":{"interfaces/OptionDto.html":{},"interfaces/QuestionDto.html":{},"interfaces/Section.html":{},"injectables/SectionService.html":{}}}],["sectionpostdto",{"_index":712,"title":{"interfaces/SectionPostDTO.html":{}},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"coverage.html":{}}}],["sections",{"_index":757,"title":{},"body":{"components/ExamComponent.html":{},"interfaces/OptionDto.html":{},"interfaces/QuestionDto.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{}}}],["sectionservice",{"_index":954,"title":{"injectables/SectionService.html":{}},"body":{"interfaces/OptionDto.html":{},"interfaces/QuestionDto.html":{},"interfaces/Section.html":{},"injectables/SectionService.html":{},"coverage.html":{}}}],["secure",{"_index":854,"title":{},"body":{"components/LoginComponent.html":{}}}],["security=true;trustservercertificate=true",{"_index":1287,"title":{},"body":{"index.html":{}}}],["select",{"_index":504,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["selected",{"_index":53,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminReportComponent.html":{}}}],["selectedexam",{"_index":160,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ExamComponent.html":{}}}],["selectedreport",{"_index":418,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["sent",{"_index":855,"title":{},"body":{"components/LoginComponent.html":{}}}],["serve",{"_index":1250,"title":{},"body":{"index.html":{}}}],["server",{"_index":1220,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["server=desktop",{"_index":1285,"title":{},"body":{"index.html":{}}}],["serverconfig",{"_index":1202,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["services/auth.service",{"_index":206,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["services/exam",{"_index":579,"title":{},"body":{"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["services/exam.service",{"_index":202,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminResultComponent.html":{},"components/ExamComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["services/report.service",{"_index":450,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["services/user.service",{"_index":581,"title":{},"body":{"components/AdminResultComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["set",{"_index":907,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["setting",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{}}}],["shadow",{"_index":85,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{}}}],["shared/navbar/navbar.component",{"_index":646,"title":{},"body":{"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["short",{"_index":526,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["shortdate",{"_index":508,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["show",{"_index":756,"title":{},"body":{"components/ExamComponent.html":{}}}],["showmodal",{"_index":161,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["signup",{"_index":879,"title":{},"body":{"components/LoginComponent.html":{}}}],["size",{"_index":92,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{}}}],["slide",{"_index":313,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["solid",{"_index":1061,"title":{},"body":{"components/ResultComponent.html":{}}}],["solution",{"_index":872,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["sortascending",{"_index":544,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["sortfield",{"_index":545,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["sortresults",{"_index":549,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["sortresults(field",{"_index":561,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["specific",{"_index":820,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/.../app.config.server.ts",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/admin/admin",{"_index":147,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"coverage.html":{}}}],["src/app/admin/admin/admin.component.ts",{"_index":10,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/admin/admin/admin.component.ts:13",{"_index":31,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin/admin.component.ts:18",{"_index":39,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/app.component.ts",{"_index":639,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":645,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1199,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1203,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":1205,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interface/exam.model.ts",{"_index":708,"title":{},"body":{"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"coverage.html":{}}}],["src/app/services/auth",{"_index":650,"title":{},"body":{"injectables/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:102",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:58",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:59",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:66",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:79",{"_index":673,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:84",{"_index":675,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:89",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:96",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/exam",{"_index":766,"title":{},"body":{"injectables/ExamResultService.html":{},"coverage.html":{}}}],["src/app/services/exam.service.ts",{"_index":798,"title":{},"body":{"injectables/ExamService.html":{},"coverage.html":{}}}],["src/app/services/exam.service.ts:12",{"_index":804,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/app/services/exam.service.ts:17",{"_index":811,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/app/services/exam.service.ts:22",{"_index":810,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/app/services/exam.service.ts:27",{"_index":806,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/app/services/exam.service.ts:32",{"_index":813,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/app/services/exam.service.ts:37",{"_index":808,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/app/services/question.service.ts",{"_index":939,"title":{},"body":{"interfaces/Option.html":{},"interfaces/Question.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["src/app/services/question.service.ts:24",{"_index":962,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:29",{"_index":963,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/report.service.ts",{"_index":1000,"title":{},"body":{"injectables/ReportService.html":{},"coverage.html":{}}}],["src/app/services/report.service.ts:10",{"_index":1006,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/services/report.service.ts:15",{"_index":1010,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/services/report.service.ts:20",{"_index":1008,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/services/report.service.ts:25",{"_index":1007,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/services/report.service.ts:30",{"_index":1009,"title":{},"body":{"injectables/ReportService.html":{}}}],["src/app/services/section",{"_index":1108,"title":{},"body":{"injectables/SectionActionService.html":{},"coverage.html":{}}}],["src/app/services/section.service.ts",{"_index":951,"title":{},"body":{"interfaces/OptionDto.html":{},"interfaces/QuestionDto.html":{},"interfaces/Section.html":{},"injectables/SectionService.html":{},"coverage.html":{}}}],["src/app/services/section.service.ts:28",{"_index":1149,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/services/section.service.ts:33",{"_index":1151,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/services/section.service.ts:38",{"_index":1150,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/services/user.service.ts",{"_index":892,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:26",{"_index":1177,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:27",{"_index":1173,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:32",{"_index":1176,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:40",{"_index":1175,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:45",{"_index":1174,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/navbar/navbar.component.ts",{"_index":914,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts:15",{"_index":920,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:16",{"_index":915,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:19",{"_index":921,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:23",{"_index":919,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:42",{"_index":916,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:47",{"_index":917,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:51",{"_index":918,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/user/exam/exam.component.ts",{"_index":744,"title":{},"body":{"components/ExamComponent.html":{},"coverage.html":{}}}],["src/app/user/exam/exam.component.ts:16",{"_index":751,"title":{},"body":{"components/ExamComponent.html":{}}}],["src/app/user/exam/exam.component.ts:17",{"_index":747,"title":{},"body":{"components/ExamComponent.html":{}}}],["src/app/user/exam/exam.component.ts:21",{"_index":748,"title":{},"body":{"components/ExamComponent.html":{}}}],["src/app/user/exam/exam.component.ts:28",{"_index":750,"title":{},"body":{"components/ExamComponent.html":{}}}],["src/app/user/login/login.component.ts",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/user/login/login.component.ts:26",{"_index":834,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/login/login.component.ts:27",{"_index":835,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/login/login.component.ts:28",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/login/login.component.ts:42",{"_index":833,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/register/register.component.ts",{"_index":964,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/user/register/register.component.ts:24",{"_index":975,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/user/register/register.component.ts:25",{"_index":976,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/user/register/register.component.ts:26",{"_index":977,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/user/register/register.component.ts:27",{"_index":970,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/user/register/register.component.ts:42",{"_index":973,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/user/register/register.component.ts:47",{"_index":971,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/user/result",{"_index":1069,"title":{},"body":{"components/ResultHistoryComponent.html":{},"coverage.html":{}}}],["src/app/user/result/result.component.ts",{"_index":1021,"title":{},"body":{"components/ResultComponent.html":{},"coverage.html":{}}}],["src/app/user/result/result.component.ts:13",{"_index":1027,"title":{},"body":{"components/ResultComponent.html":{}}}],["src/app/user/result/result.component.ts:14",{"_index":1024,"title":{},"body":{"components/ResultComponent.html":{}}}],["src/app/user/result/result.component.ts:18",{"_index":1026,"title":{},"body":{"components/ResultComponent.html":{}}}],["src/app/user/result/result.component.ts:28",{"_index":1025,"title":{},"body":{"components/ResultComponent.html":{}}}],["src/app/user/section/section.component.ts",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["src/app/user/user/user.component.ts",{"_index":1152,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["src/app/user/user/user.component.ts:12",{"_index":1158,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user/user.component.ts:16",{"_index":1159,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user/user.component.ts:20",{"_index":1161,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user/user.component.ts:24",{"_index":1160,"title":{},"body":{"components/UserComponent.html":{}}}],["src/environments/environment.ts",{"_index":1208,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":1209,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":15,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["start",{"_index":290,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ExamComponent.html":{}}}],["startdate",{"_index":219,"title":{},"body":{"components/AdminExamComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["started",{"_index":1240,"title":{"index.html":{}},"body":{}}],["startexam",{"_index":745,"title":{},"body":{"components/ExamComponent.html":{}}}],["startexam(exam",{"_index":749,"title":{},"body":{"components/ExamComponent.html":{}}}],["state",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":281,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/ResultComponent.html":{}}}],["store",{"_index":849,"title":{},"body":{"components/LoginComponent.html":{}}}],["stored",{"_index":1103,"title":{},"body":{"components/ResultHistoryComponent.html":{},"index.html":{}}}],["strict",{"_index":859,"title":{},"body":{"components/LoginComponent.html":{}}}],["string",{"_index":38,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"injectables/ExamResultService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{},"injectables/UserService.html":{}}}],["striped",{"_index":1059,"title":{},"body":{"components/ResultComponent.html":{}}}],["style",{"_index":343,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["styleurl",{"_index":365,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/AppComponent.html":{}}}],["styleurls",{"_index":20,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["styling",{"_index":64,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{}}}],["submit",{"_index":254,"title":{},"body":{"components/AdminExamComponent.html":{},"injectables/ExamResultService.html":{}}}],["submitexam",{"_index":772,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["submitexam(examdata",{"_index":781,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["submitted",{"_index":442,"title":{},"body":{"components/AdminReportComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/ReportService.html":{}}}],["submitting",{"_index":792,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["subscribe",{"_index":397,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["success",{"_index":1053,"title":{},"body":{"components/ResultComponent.html":{}}}],["success:hover",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{}}}],["successful",{"_index":989,"title":{},"body":{"components/RegisterComponent.html":{}}}],["successmessage",{"_index":968,"title":{},"body":{"components/RegisterComponent.html":{}}}],["sure",{"_index":948,"title":{},"body":{"interfaces/Option.html":{},"interfaces/Question.html":{},"injectables/QuestionService.html":{},"injectables/SectionActionService.html":{}}}],["switch",{"_index":460,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["table",{"_index":1058,"title":{},"body":{"components/ResultComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1211,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1165,"title":{},"body":{"components/UserComponent.html":{}}}],["taken",{"_index":433,"title":{},"body":{"components/AdminReportComponent.html":{},"injectables/ReportService.html":{}}}],["td",{"_index":1064,"title":{},"body":{"components/ResultComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["test",{"_index":1267,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1277,"title":{},"body":{"index.html":{}}}],["tests",{"_index":432,"title":{},"body":{"components/AdminReportComponent.html":{},"injectables/ReportService.html":{},"index.html":{}}}],["tests\\n",{"_index":477,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["testsperday",{"_index":429,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["text",{"_index":96,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"components/ResultComponent.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"components/UserComponent.html":{}}}],["text/csv",{"_index":501,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["text/csv;charset=utf",{"_index":623,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["th",{"_index":1063,"title":{},"body":{"components/ResultComponent.html":{}}}],["this.authservice.checkauthentication",{"_index":398,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["this.authservice.getuserid",{"_index":211,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["this.authservice.isloggedin.subscribe(status",{"_index":387,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["this.authservice.logout",{"_index":402,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["this.authservice.role.subscribe(role",{"_index":390,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["this.checkauthentication",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.closemodal",{"_index":277,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.cookieservice.delete('token",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cookieservice.get('token",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cookieservice.set('token",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["this.createdbyuserid",{"_index":210,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.currentrole",{"_index":391,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["this.currentrole.asobservable",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentrole.next(decodedtoken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentrole.next(null",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.editmode",{"_index":237,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.errormessage",{"_index":459,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["this.examform",{"_index":214,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examform.invalid",{"_index":257,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examform.patchvalue",{"_index":239,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examform.reset",{"_index":251,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examform.value.createdbyuserid",{"_index":269,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examform.value.createddate",{"_index":270,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examform.value.description",{"_index":261,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examform.value.duration",{"_index":265,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examform.value.enddate",{"_index":263,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examform.value.ispublished",{"_index":264,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examform.value.israndmized",{"_index":268,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examform.value.passingmarks",{"_index":267,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examform.value.startdate",{"_index":262,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examform.value.title",{"_index":260,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examform.value.totalmarks",{"_index":266,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examresult",{"_index":1034,"title":{},"body":{"components/ResultComponent.html":{}}}],["this.examresult.passed",{"_index":1037,"title":{},"body":{"components/ResultComponent.html":{}}}],["this.examresults",{"_index":602,"title":{},"body":{"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["this.examresults.filter(result",{"_index":604,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["this.examresultservice.getallresults().subscribe",{"_index":585,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["this.examresultservice.getresultsbyuser(this.userid!).subscribe",{"_index":1089,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["this.exams",{"_index":230,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ExamComponent.html":{}}}],["this.examservice.createexam(createexamdto).subscribe",{"_index":279,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examservice.getexambyid(result.examid",{"_index":590,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["this.examservice.getexams().subscribe((data",{"_index":229,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ExamComponent.html":{}}}],["this.examservice.updateexam(exam.examid",{"_index":285,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.examservice.updateexam(this.selectedexam.examid",{"_index":275,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.fb.group",{"_index":215,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.fetchexamnames(results",{"_index":1091,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["this.filteredresults",{"_index":603,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["this.filteredresults.sort((a",{"_index":610,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["this.formbuilder.group",{"_index":839,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getallexams",{"_index":209,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.http.delete(`${this.apiurl}/${examid",{"_index":824,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.http.delete(`${this.apiurl}/${sectionid",{"_index":1142,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["this.http.delete(`${this.apiurl}/questions/${questionid",{"_index":1146,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["this.http.get(`${environment.apiurl}/question?sectionid=${sectionid",{"_index":961,"title":{},"body":{"interfaces/OptionDto.html":{},"interfaces/QuestionDto.html":{},"interfaces/Section.html":{},"injectables/SectionService.html":{}}}],["this.http.get(`${this.apiurl}/${examid",{"_index":821,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.http.get(`${this.apiurl}/${sectionid",{"_index":1140,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["this.http.get(`${this.apiurl}/exam/${examid",{"_index":959,"title":{},"body":{"interfaces/OptionDto.html":{},"interfaces/QuestionDto.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{}}}],["this.http.get(`${this.baseurl}/autosubmittedafter30mins",{"_index":1017,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.http.get(`${this.baseurl}/finishedbeforetime",{"_index":1015,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.http.get(`${this.baseurl}/markedforreview",{"_index":1020,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.http.get(`${this.baseurl}/testsperday",{"_index":1014,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.http.get(`${this.resulturl}/getallresults",{"_index":796,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["this.http.get(`${this.resulturl}/getresultsbyuser/${userid",{"_index":795,"title":{},"body":{"injectables/ExamResultService.html":{}}}],["this.http.get(`${this.userurl}/getuserbyid/${userid",{"_index":913,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["this.http.get(this.apiurl",{"_index":819,"title":{},"body":{"injectables/ExamService.html":{},"interfaces/Option.html":{},"interfaces/Question.html":{},"injectables/QuestionService.html":{}}}],["this.http.post('https://localhost:7205/api/question",{"_index":1147,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["this.http.post(`${this.apiurl}/${sectionid}/questions",{"_index":1143,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["this.http.post(`${this.authurl}/login",{"_index":910,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["this.http.post(`${this.authurl}/register",{"_index":908,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["this.http.post(this.apiurl",{"_index":794,"title":{},"body":{"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"injectables/SectionActionService.html":{}}}],["this.http.put(`${this.apiurl}/${examid",{"_index":823,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.http.put(`${this.apiurl}/${sectionid",{"_index":1141,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["this.initializeform",{"_index":208,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.isloading",{"_index":457,"title":{},"body":{"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["this.isloggedin",{"_index":388,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["this.jwthelper.decodetoken(token",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(token",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loadexamresults",{"_index":1086,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["this.loadresults",{"_index":584,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["this.loggedin.asobservable",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(false",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(true",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":838,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":844,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":846,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.passed",{"_index":1036,"title":{},"body":{"components/ResultComponent.html":{}}}],["this.passwordmatchvalidator",{"_index":980,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform",{"_index":978,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":983,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.reset",{"_index":990,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value",{"_index":985,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.reportdata",{"_index":458,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["this.reportdata.map(row",{"_index":478,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["this.reportservice.getautosubmittedafter30mins().subscribe",{"_index":470,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["this.reportservice.gettestsfinishedbeforetime().subscribe",{"_index":468,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["this.reportservice.gettestsmarkedforreview().subscribe",{"_index":469,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["this.reportservice.gettestsperday().subscribe",{"_index":463,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["this.resetform",{"_index":253,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.router.events.pipe",{"_index":393,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["this.router.navigate(['/admin",{"_index":864,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/exam",{"_index":1162,"title":{},"body":{"components/UserComponent.html":{}}}],["this.router.navigate(['/login",{"_index":403,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/profile",{"_index":1163,"title":{},"body":{"components/UserComponent.html":{}}}],["this.router.navigate(['/register",{"_index":404,"title":{},"body":{"components/AdminNavbarComponent.html":{},"components/NavbarComponent.html":{}}}],["this.router.navigate(['/user",{"_index":866,"title":{},"body":{"components/LoginComponent.html":{},"components/ResultComponent.html":{}}}],["this.router.navigate([`/exam/${this.selectedexam.examid",{"_index":761,"title":{},"body":{"components/ExamComponent.html":{}}}],["this.router.navigate([route",{"_index":54,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.selectedexam",{"_index":238,"title":{},"body":{"components/AdminExamComponent.html":{},"components/ExamComponent.html":{}}}],["this.selectedreport",{"_index":461,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["this.showmodal",{"_index":236,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["this.sortascending",{"_index":609,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["this.sortfield",{"_index":608,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["this.submitted",{"_index":843,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.successmessage",{"_index":988,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userid",{"_index":1085,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["this.userservice.getuserbyid(result.userid",{"_index":588,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["this.userservice.login(logindata).subscribe",{"_index":847,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.register(registerdata).subscribe",{"_index":987,"title":{},"body":{"components/RegisterComponent.html":{}}}],["time",{"_index":438,"title":{},"body":{"components/AdminReportComponent.html":{},"injectables/ReportService.html":{}}}],["title",{"_index":216,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"components/ResultHistoryComponent.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"components/UserComponent.html":{}}}],["title,total",{"_index":483,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["toggle",{"_index":282,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["togglepublishedstatus",{"_index":169,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["togglepublishedstatus(exam",{"_index":186,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["togglerandomizedstatus",{"_index":170,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["togglerandomizedstatus(exam",{"_index":188,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["token",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ResultHistoryComponent.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":327,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminResultComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["top20",{"_index":571,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["top50",{"_index":572,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["total",{"_index":293,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminReportComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"components/ResultComponent.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["totalmarks",{"_index":223,"title":{},"body":{"components/AdminExamComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{}}}],["track",{"_index":753,"title":{},"body":{"components/ExamComponent.html":{}}}],["transform",{"_index":81,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/UserComponent.html":{}}}],["transition",{"_index":70,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/ResultComponent.html":{},"components/UserComponent.html":{}}}],["translatey",{"_index":82,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/UserComponent.html":{}}}],["translatey(0",{"_index":321,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["true",{"_index":16,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":869,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["tslib",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":35,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"interfaces/Option.html":{},"interfaces/OptionDto.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/Question.html":{},"interfaces/QuestionDto.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"injectables/SectionService.html":{},"interfaces/UpdateExamDto.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unfortunately",{"_index":1042,"title":{},"body":{"components/ResultComponent.html":{}}}],["unit",{"_index":1266,"title":{},"body":{"index.html":{}}}],["unpublish",{"_index":296,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["unrandomize",{"_index":298,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["up",{"_index":322,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["upcoming",{"_index":1166,"title":{},"body":{"components/UserComponent.html":{}}}],["update",{"_index":280,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"injectables/ExamService.html":{},"components/NavbarComponent.html":{},"interfaces/Option.html":{},"interfaces/Question.html":{},"injectables/QuestionService.html":{},"injectables/SectionActionService.html":{}}}],["updated",{"_index":284,"title":{},"body":{"components/AdminExamComponent.html":{},"interfaces/OptionDto.html":{},"interfaces/QuestionDto.html":{},"interfaces/Section.html":{},"injectables/SectionService.html":{}}}],["updateexam",{"_index":803,"title":{},"body":{"injectables/ExamService.html":{}}}],["updateexam(examid",{"_index":812,"title":{},"body":{"injectables/ExamService.html":{}}}],["updateexamdto",{"_index":204,"title":{"interfaces/UpdateExamDto.html":{}},"body":{"components/AdminExamComponent.html":{},"interfaces/CreateExamDto.html":{},"interfaces/Exam.html":{},"injectables/ExamService.html":{},"interfaces/OptionGetDTO.html":{},"interfaces/OptionPostDTO.html":{},"interfaces/QuestionGetDTO.html":{},"interfaces/QuestionPostDTO.html":{},"interfaces/SectionGetDTO.html":{},"interfaces/SectionPostDTO.html":{},"interfaces/UpdateExamDto.html":{},"coverage.html":{}}}],["updateexamdto).subscribe",{"_index":276,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["updatesection",{"_index":1117,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["updatesection(sectionid",{"_index":1135,"title":{},"body":{"injectables/SectionActionService.html":{}}}],["updating",{"_index":256,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["uppercase",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{}}}],["url",{"_index":791,"title":{},"body":{"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"interfaces/LoginModel.html":{},"interfaces/OptionDto.html":{},"interfaces/QuestionDto.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"interfaces/Section.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{}}}],["use",{"_index":1259,"title":{},"body":{"index.html":{}}}],["user",{"_index":143,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.component.css",{"_index":1153,"title":{},"body":{"components/UserComponent.html":{}}}],["user.component.html",{"_index":1154,"title":{},"body":{"components/UserComponent.html":{}}}],["user.role",{"_index":906,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["usercomponent",{"_index":142,"title":{"components/UserComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["userdata",{"_index":593,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["userdata[index]?.email",{"_index":599,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["userdata[index]?.username",{"_index":597,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["userid",{"_index":780,"title":{},"body":{"injectables/ExamResultService.html":{},"components/ResultHistoryComponent.html":{},"injectables/UserService.html":{}}}],["username",{"_index":895,"title":{},"body":{"interfaces/LoginModel.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["userrequests",{"_index":586,"title":{},"body":{"components/AdminResultComponent.html":{}}}],["userservice",{"_index":554,"title":{"injectables/UserService.html":{}},"body":{"components/AdminResultComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userurl",{"_index":902,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/RegisterModel.html":{},"injectables/UserService.html":{}}}],["usevalue",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":956,"title":{},"body":{"interfaces/OptionDto.html":{},"interfaces/QuestionDto.html":{},"interfaces/Section.html":{},"injectables/SectionService.html":{}}}],["valid",{"_index":874,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validator",{"_index":979,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators",{"_index":200,"title":{},"body":{"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.min(1",{"_index":222,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["validators.minlength(6",{"_index":842,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":217,"title":{},"body":{"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validity",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":191,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"injectables/ExamResultService.html":{},"injectables/ExamService.html":{},"components/LoginComponent.html":{},"interfaces/LoginModel.html":{},"components/NavbarComponent.html":{},"injectables/QuestionService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterModel.html":{},"injectables/ReportService.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"injectables/SectionActionService.html":{},"injectables/SectionService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"components/AppComponent.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["variable",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1294,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1246,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1269,"title":{},"body":{"index.html":{}}}],["view",{"_index":57,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["void",{"_index":42,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminExamComponent.html":{},"components/AdminNavbarComponent.html":{},"components/AdminReportComponent.html":{},"components/AdminResultComponent.html":{},"injectables/AuthService.html":{},"components/ExamComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["wait",{"_index":1098,"title":{},"body":{"components/ResultHistoryComponent.html":{}}}],["warning:hover",{"_index":359,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["weight",{"_index":94,"title":{},"body":{"components/AdminComponent.html":{},"components/NavbarComponent.html":{}}}],["white",{"_index":1067,"title":{},"body":{"components/ResultComponent.html":{}}}],["width",{"_index":329,"title":{},"body":{"components/AdminExamComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResultComponent.html":{},"components/ResultHistoryComponent.html":{},"components/UserComponent.html":{}}}],["wise",{"_index":1047,"title":{},"body":{"components/ResultComponent.html":{}}}],["working",{"_index":471,"title":{},"body":{"components/AdminReportComponent.html":{}}}],["yes",{"_index":184,"title":{},"body":{"components/AdminExamComponent.html":{},"components/AdminResultComponent.html":{},"components/ResultHistoryComponent.html":{}}}],["z",{"_index":340,"title":{},"body":{"components/AdminExamComponent.html":{}}}],["zone.js",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/admin/admin.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                AdminNavbarComponent\n                \n            \n\n            \n                styleUrls\n                ./admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/admin/admin.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin/admin.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AdminNavbarComponent } from '../admin-navbar/admin-navbar.component';\n\n@Component({\n  selector: 'app-admin',\n  standalone: true,\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css'],\n  imports: [CommonModule, AdminNavbarComponent]\n})\nexport class AdminComponent {\n\n  constructor(private router: Router) {}\n\n  // Navigate to the selected route\n  navigateTo(route: string) {\n    this.router.navigate([route]);\n  }\n}\n\n    \n\n    \n        \n\n    Admin Dashboard\n    \n    \n      \n      \n        \n          \n            \n            All Results\n            View and manage all exam results.\n            Go to Results\n          \n        \n      \n  \n      \n      \n        \n          \n            \n            Exams\n            View and manage all exams.\n            Go to Exams\n          \n        \n      \n  \n      \n      \n        \n          \n            \n            Reports\n            Generate and view reports.\n            Go to Reports\n          \n        \n      \n    \n  \n  \n    \n\n    \n                \n                    ./admin.component.css\n                \n                /* Styling for the admin dashboard cards */\n.admin-card {\n    border-radius: 15px;\n    transition: all 0.3s ease;\n    background-color: #f8f9fa;\n  }\n  \n  .admin-card .card-body {\n    min-height: 150px;\n  }\n  \n  .admin-card:hover {\n    transform: translateY(-10px);\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  }\n  \n  .admin-card h5 {\n    font-size: 18px;\n    font-weight: bold;\n  }\n  \n  .admin-card .card-text {\n    font-size: 14px;\n    color: #6c757d;\n  }\n  \n  /* Hover effects for the icons and footer */\n  .admin-card:hover i {\n    color: #ffffff !important;\n  }\n  \n  .admin-card .card-footer {\n    font-weight: bold;\n    text-transform: uppercase;\n  }\n  \n  .admin-card .bg-primary:hover {\n    background-color: #0062cc !important;\n  }\n  \n  .admin-card .bg-success:hover {\n    background-color: #28a745 !important;\n  }\n  \n  .admin-card .bg-info:hover {\n    background-color: #17a2b8 !important;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Admin Dashboard                                                              All Results            View and manage all exam results.            Go to Results                                                                                Exams            View and manage all exams.            Go to Exams                                                                                Reports            Generate and view reports.            Go to Reports                                '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminExamComponent', 'selector': 'app-admin-exam'},{'name': 'AdminNavbarComponent', 'selector': 'app-admin-navbar'},{'name': 'AdminReportComponent', 'selector': 'app-admin-report'},{'name': 'AdminResultComponent', 'selector': 'app-admin-result'},{'name': 'AdminSectionComponent', 'selector': 'app-admin-section'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExamComponent', 'selector': 'app-exam'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResultComponent', 'selector': 'app-result'},{'name': 'ResultHistoryComponent', 'selector': 'app-result-history'},{'name': 'SectionComponent', 'selector': 'app-section'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminExamComponent.html":{"url":"components/AdminExamComponent.html","title":"component - AdminExamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminExamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/admin-exam/admin-exam.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-exam\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                                AdminNavbarComponent\n                            RouterLink\n                \n            \n\n            \n                styleUrls\n                ./admin-exam.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin-exam.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdByUserId\n                            \n                            \n                                editMode\n                            \n                            \n                                examForm\n                            \n                            \n                                exams\n                            \n                            \n                                selectedExam\n                            \n                            \n                                showModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                getAllExams\n                            \n                            \n                                initializeForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openModal\n                            \n                            \n                                resetForm\n                            \n                            \n                                togglePublishedStatus\n                            \n                            \n                                toggleRandomizedStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, examService: ExamService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/admin-exam/admin-exam.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        examService\n                                                  \n                                                        \n                                                                        ExamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-exam/admin-exam.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllExams\n                        \n                    \n                \n            \n            \n                \ngetAllExams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-exam/admin-exam.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeForm\n                        \n                    \n                \n            \n            \n                \ninitializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-exam/admin-exam.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-exam/admin-exam.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-exam/admin-exam.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal(exam?: Exam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-exam/admin-exam.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exam\n                                            \n                                                            Exam\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-exam/admin-exam.component.ts:174\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePublishedStatus\n                        \n                    \n                \n            \n            \n                \ntogglePublishedStatus(exam: Exam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-exam/admin-exam.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exam\n                                            \n                                                            Exam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRandomizedStatus\n                        \n                    \n                \n            \n            \n                \ntoggleRandomizedStatus(exam: Exam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-exam/admin-exam.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exam\n                                            \n                                                            Exam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdByUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-exam/admin-exam.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-exam/admin-exam.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        examForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-exam/admin-exam.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Exam[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-exam/admin-exam.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedExam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Exam | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-exam/admin-exam.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-exam/admin-exam.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ExamService } from '../../services/exam.service';\nimport { CreateExamDto, UpdateExamDto, Exam } from '../../Interface/exam.model';\nimport { AuthService } from '../../services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { AdminNavbarComponent } from '../admin-navbar/admin-navbar.component';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-exam',\n  templateUrl: './admin-exam.component.html',\n  styleUrls: ['./admin-exam.component.css'],\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule, AdminNavbarComponent, RouterLink]\n})\nexport class AdminExamComponent implements OnInit {\n  examForm!: FormGroup;\n  editMode = false;\n  selectedExam: Exam | null = null;\n  exams: Exam[] = [];\n  showModal = false;\n  createdByUserId: string = '';\n\n  constructor(private fb: FormBuilder, private examService: ExamService, private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.getAllExams();\n    this.createdByUserId = this.authService.getUserId() || '';  // Ensure it's a string\n  }\n\n  initializeForm(): void {\n    this.examForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      duration: [0, [Validators.required, Validators.min(1)]],\n      totalMarks: [0, Validators.required],\n      passingMarks: [0, Validators.required],\n      isRandmized: [false],\n      createdByUserId: [''],\n      isPublished: [false],\n      createdDate: ['']\n    });\n  }\n\n  // Fetch all exams\n  getAllExams(): void {\n    this.examService.getExams().subscribe((data: Exam[]) => {\n      this.exams = data;\n    });\n  }\n\n  // Open modal for creating or editing exams\n  openModal(exam?: Exam): void {\n    this.showModal = true;\n    if (exam) {\n      this.editMode = true;\n      this.selectedExam = exam;\n      this.examForm.patchValue({\n        title: exam.title,\n        description: exam.description,\n        startDate: exam.startDate,\n        endDate: exam.endDate,\n        duration: exam.duration,\n        totalMarks: exam.totalMarks,\n        passingMarks: exam.passingMarks,\n        isRandmized: exam.isRandmized,\n        createdByUserId: exam.createdByUserId,\n        isPublished: exam.isPublished,\n        createdDate: exam.createdDate\n      });\n    } else {\n      this.editMode = false;\n      this.examForm.reset();\n    }\n  }\n\n  // Close modal\n  closeModal(): void {\n    this.showModal = false;\n    this.resetForm();\n  }\n\n  // Submit form for creating or updating exam\n  onSubmit(): void {\n    if (this.examForm.invalid) {\n      return;\n    }\n\n    if (this.editMode && this.selectedExam) {\n      const updateExamDto: UpdateExamDto = {\n        title: this.examForm.value.title,\n        description: this.examForm.value.description,\n        startDate: this.examForm.value.startDate,\n        endDate: this.examForm.value.endDate,\n        isPublished: this.examForm.value.isPublished,\n        duration: this.examForm.value.duration,\n        totalMarks: this.examForm.value.totalMarks,\n        passingMarks: this.examForm.value.passingMarks,\n        isRandmized: this.examForm.value.isRandmized,\n        createdByUserId: this.examForm.value.createdByUserId,\n        createdDate: this.examForm.value.createdDate\n      };\n      console.log('Update Exam Data:', updateExamDto);  // Log data before posting\n      this.examService.updateExam(this.selectedExam.examId, updateExamDto).subscribe(() => {\n        this.getAllExams();\n        this.closeModal();\n      });\n    } else {\n      const createExamDto: CreateExamDto = {\n        title: this.examForm.value.title,\n        description: this.examForm.value.description,\n        startDate: this.examForm.value.startDate,\n        endDate: this.examForm.value.endDate,\n        duration: this.examForm.value.duration,\n        totalMarks: this.examForm.value.totalMarks,\n        passingMarks: this.examForm.value.passingMarks,\n        createdByUserId: this.createdByUserId,\n        isRandmized: this.examForm.value.isRandmized\n      };\n      console.log('Create Exam Data:', createExamDto);  // Log data before posting\n      this.examService.createExam(createExamDto).subscribe(() => {\n        this.getAllExams();\n        this.closeModal();\n      });\n    }\n  }\n\n  // Update `isPublished` status\n  togglePublishedStatus(exam: Exam): void {\n    const updateExamDto: UpdateExamDto = {\n      title: exam.title,\n      description: exam.description,\n      startDate: exam.startDate,\n      endDate: exam.endDate,\n      isPublished: !exam.isPublished,  // Toggle the published status\n      duration: exam.duration,\n      totalMarks: exam.totalMarks,\n      passingMarks: exam.passingMarks,\n      isRandmized: exam.isRandmized,\n      createdByUserId: exam.createdByUserId,\n      createdDate: exam.createdDate\n    };\n    console.log('Update Published Status:', updateExamDto);  // Log the updated data\n    this.examService.updateExam(exam.examId, updateExamDto).subscribe(() => {\n      this.getAllExams();\n    });\n  }\n\n  // Update `isRandmized` status\n  toggleRandomizedStatus(exam: Exam): void {\n    const updateExamDto: UpdateExamDto = {\n      title: exam.title,\n      description: exam.description,\n      startDate: exam.startDate,\n      endDate: exam.endDate,\n      isPublished: exam.isPublished,\n      duration: exam.duration,\n      totalMarks: exam.totalMarks,\n      passingMarks: exam.passingMarks,\n      isRandmized: !exam.isRandmized,  // Toggle the randomized status\n      createdByUserId: exam.createdByUserId,\n      createdDate: exam.createdDate\n    };\n    console.log('Update Randomized Status:', updateExamDto);  // Log the updated data\n    this.examService.updateExam(exam.examId, updateExamDto).subscribe(() => {\n      this.getAllExams();\n    });\n  }\n\n  resetForm(): void {\n    this.examForm.reset();\n    this.editMode = false;\n    this.selectedExam = null;\n  }\n}\n\n    \n\n    \n        \n\n\n    \n    \n      Add New Exam\n      Section\n    \n  \n    \n    \n      \n        \n          \n            {{ exam.title }}\n            {{ exam.description }}\n            Start Date: {{ exam.startDate | date }}\n            End Date: {{ exam.endDate | date }}\n            Total Marks: {{ exam.totalMarks }}\n            Randomized: {{ exam.isRandmized ? 'Yes' : 'No' }}\n            Published: {{ exam.isPublished ? 'Yes' : 'No' }}\n            \n            Edit\n            \n            \n              {{ exam.isPublished ? 'Unpublish' : 'Publish' }}\n            \n            \n              {{ exam.isRandmized ? 'Unrandomize' : 'Randomize' }}\n            \n          \n        \n      \n    \n  \n    \n    \n      \n        \n          \n            \n              {{ editMode ? 'Edit Exam' : 'Add Exam' }}\n              \n            \n            \n              \n                \n                  Title\n                  \n                  \n                    Title is required\n                  \n                \n  \n                \n                  Description\n                  \n                  \n                    Description is required\n                  \n                \n  \n                \n                  Start Date\n                  \n                \n  \n                \n                  End Date\n                  \n                \n  \n                \n                  Duration (minutes)\n                  \n                \n  \n                \n                  Total Marks\n                  \n                \n  \n                \n                  Passing Marks\n                  \n                \n  \n                \n                  Randomized?\n                  \n                \n  \n                {{ editMode ? 'Update Exam' : 'Create Exam' }}\n              \n            \n          \n        \n      \n    \n  \n  \n    \n\n    \n                \n                    ./admin-exam.component.css\n                \n                /* Styling for the main card */\n.exam-card {\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n    transition: transform 0.3s ease-in-out;\n  }\n  \n  .exam-card:hover {\n    transform: scale(1.05);\n  }\n  \n  /* Modal fade-in and fade-out animations */\n  .modal-fade {\n    animation: slide-down 0.5s forwards;\n  }\n  \n  @keyframes slide-down {\n    0% {\n      opacity: 0;\n      transform: translateY(-100%);\n    }\n    100% {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  @keyframes slide-up {\n    0% {\n      opacity: 1;\n      transform: translateY(0);\n    }\n    100% {\n      opacity: 0;\n      transform: translateY(-100%);\n    }\n  }\n  \n  /* Modal backdrop effect */\n  .modal-backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1050;\n  }\n  \n  /* Modal dialog */\n  .modal-dialog {\n    animation: slide-down 0.5s ease;\n  }\n  \n  /* Style for dull background when popup is active */\n  .modal-backdrop {\n    background-color: rgba(0, 0, 0, 0.8);\n  }\n  \n  .modal-content {\n    box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\n    border-radius: 8px;\n  }\n  \n  /* Close button styles */\n  .btn-close {\n    background: none;\n    border: none;\n    font-size: 1.5rem;\n    color: #333;\n  }\n  \n  .btn-close:hover {\n    color: #000;\n  }\n  \n  /* Button styles for hover effect */\n  .btn {\n    transition: background-color 0.3s ease;\n  }\n  \n  .btn-primary:hover {\n    background-color: #0056b3;\n  }\n  \n  .btn-secondary:hover {\n    background-color: #6c757d;\n  }\n  \n  .btn-warning:hover {\n    background-color: #d39e00;\n  }\n  \n  .btn-info:hover {\n    background-color: #138496;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Add New Exam      Section                                                  {{ exam.title }}            {{ exam.description }}            Start Date: {{ exam.startDate | date }}            End Date: {{ exam.endDate | date }}            Total Marks: {{ exam.totalMarks }}            Randomized: {{ exam.isRandmized ? \\'Yes\\' : \\'No\\' }}            Published: {{ exam.isPublished ? \\'Yes\\' : \\'No\\' }}                        Edit                                      {{ exam.isPublished ? \\'Unpublish\\' : \\'Publish\\' }}                                      {{ exam.isRandmized ? \\'Unrandomize\\' : \\'Randomize\\' }}                                                                                                    {{ editMode ? \\'Edit Exam\\' : \\'Add Exam\\' }}                                                                                      Title                                                        Title is required                                                                      Description                                                        Description is required                                                                      Start Date                                                                      End Date                                                                      Duration (minutes)                                                                      Total Marks                                                                      Passing Marks                                                                      Randomized?                                                    {{ editMode ? \\'Update Exam\\' : \\'Create Exam\\' }}                                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminExamComponent', 'selector': 'app-admin-exam'},{'name': 'AdminNavbarComponent', 'selector': 'app-admin-navbar'},{'name': 'AdminReportComponent', 'selector': 'app-admin-report'},{'name': 'AdminResultComponent', 'selector': 'app-admin-result'},{'name': 'AdminSectionComponent', 'selector': 'app-admin-section'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExamComponent', 'selector': 'app-exam'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResultComponent', 'selector': 'app-result'},{'name': 'ResultHistoryComponent', 'selector': 'app-result-history'},{'name': 'SectionComponent', 'selector': 'app-section'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminExamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminNavbarComponent.html":{"url":"components/AdminNavbarComponent.html","title":"component - AdminNavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminNavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/admin-navbar/admin-navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./admin-navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./admin-navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentRole\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                navigateToLogin\n                            \n                            \n                                navigateToRegister\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/admin-navbar/admin-navbar.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-navbar/admin-navbar.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToLogin\n                        \n                    \n                \n            \n            \n                \nnavigateToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-navbar/admin-navbar.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToRegister\n                        \n                    \n                \n            \n            \n                \nnavigateToRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-navbar/admin-navbar.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-navbar/admin-navbar.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-navbar/admin-navbar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-navbar/admin-navbar.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-navbar/admin-navbar.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, RouterOutlet, RouterLink } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../services/auth.service';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-admin-navbar',\n  standalone: true,\n  imports: [CommonModule, RouterLink],\n\n  templateUrl: './admin-navbar.component.html',\n  styleUrl: './admin-navbar.component.css'\n})\nexport class AdminNavbarComponent implements OnInit {\n  isLoggedIn = false;\n  currentRole: string | null = null;\n\n  constructor(\n    public router: Router,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    // Listen for login status changes\n    this.authService.isLoggedIn.subscribe(status => {\n      this.isLoggedIn = status;\n    });\n\n    // Listen for role changes\n    this.authService.role.subscribe(role => {\n      this.currentRole = role;\n    });\n\n    // Listen for route changes to update the navbar accordingly\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe(() => {\n      this.authService.checkAuthentication();  // Recheck authentication on every route change\n    });\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  navigateToLogin() {\n    this.router.navigate(['/login']);\n  }\n\n  navigateToRegister() {\n    this.router.navigate(['/register']);\n  }\n}\n\n    \n\n    \n        \n    \n      \n      Examm\n    \n    \n      \n    \n    \n      \n  \n        \n        \n          Home\n        \n        \n          Exam\n        \n        \n          Section\n        \n        \n          Result\n        \n        \n          Reports\n        \n        \n  \n        \n        \n          \n            Admin\n          \n          \n            Account\n            \n            Logout\n          \n        \n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Examm                                                        Home                          Exam                          Section                          Result                          Reports                                                        Admin                                Account                        Logout                                '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminExamComponent', 'selector': 'app-admin-exam'},{'name': 'AdminNavbarComponent', 'selector': 'app-admin-navbar'},{'name': 'AdminReportComponent', 'selector': 'app-admin-report'},{'name': 'AdminResultComponent', 'selector': 'app-admin-result'},{'name': 'AdminSectionComponent', 'selector': 'app-admin-section'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExamComponent', 'selector': 'app-exam'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResultComponent', 'selector': 'app-result'},{'name': 'ResultHistoryComponent', 'selector': 'app-result-history'},{'name': 'SectionComponent', 'selector': 'app-section'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminNavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminReportComponent.html":{"url":"components/AdminReportComponent.html","title":"component - AdminReportComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminReportComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/admin-report/admin-report.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-report\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                AdminNavbarComponent\n                \n            \n\n            \n                styleUrls\n                ./admin-report.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin-report.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                isLoading\n                            \n                            \n                                reportData\n                            \n                            \n                                reportOptions\n                            \n                            \n                                selectedReport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                downloadCSV\n                            \n                            \n                                fetchReportData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(reportService: ReportService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/admin-report/admin-report.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reportService\n                                                  \n                                                        \n                                                                        ReportService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadCSV\n                        \n                    \n                \n            \n            \n                \ndownloadCSV()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-report/admin-report.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchReportData\n                        \n                    \n                \n            \n            \n                \nfetchReportData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-report/admin-report.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-report/admin-report.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-report/admin-report.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-report/admin-report.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-report/admin-report.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { value: 'testsPerDay', label: 'Number of tests taken per day' },\n    { value: 'finishedBeforeTime', label: 'Tests finished before time by 20%' },\n    { value: 'autoSubmitted', label: 'Auto-submitted tests after 30 mins' },\n    { value: 'markedForReview', label: 'Marked for review' }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-report/admin-report.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedReport\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-report/admin-report.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ReportService } from '../../services/report.service';\nimport { saveAs } from 'file-saver';  // To handle CSV download\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AdminNavbarComponent } from '../admin-navbar/admin-navbar.component';\n\n@Component({\n  selector: 'app-admin-report',\n  templateUrl: './admin-report.component.html',\n  styleUrls: ['./admin-report.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule, AdminNavbarComponent]\n})\nexport class AdminReportComponent implements OnInit {\n  reportOptions = [\n    { value: 'testsPerDay', label: 'Number of tests taken per day' },\n    { value: 'finishedBeforeTime', label: 'Tests finished before time by 20%' },\n    { value: 'autoSubmitted', label: 'Auto-submitted tests after 30 mins' },\n    { value: 'markedForReview', label: 'Marked for review' }\n  ];\n\n  selectedReport: string = '';\n  reportData: any[] = [];\n  isLoading = false;\n  errorMessage = '';\n\n  constructor(private reportService: ReportService) { }\n\n  ngOnInit(): void { }\n\n  // Fetch report data based on selected report\n  fetchReportData(): void {\n    this.isLoading = true;\n    this.reportData = [];\n    this.errorMessage = '';\n\n    switch (this.selectedReport) {\n      case 'testsPerDay':\n        this.reportService.getTestsPerDay().subscribe(\n          (data) => {\n            this.reportData = data || [];\n            this.isLoading = false;\n          },\n          (error) => {\n            this.errorMessage = 'Error fetching data';\n            this.isLoading = false;\n          }\n        );\n        break;\n      case 'finishedBeforeTime':  // Added new report case\n        this.reportService.getTestsFinishedBeforeTime().subscribe(\n          (data) => {\n            this.reportData = data || [];\n            this.isLoading = false;\n          },\n          (error) => {\n            this.errorMessage = 'Error fetching data';\n            this.isLoading = false;\n          }\n        );\n        break;\n      case 'markedForReview':\n        this.reportService.getTestsMarkedForReview().subscribe(\n          (data) => {\n            this.reportData = data || [];\n            this.isLoading = false;\n          },\n          (error) => {\n            this.errorMessage = 'Error fetching data';\n            this.isLoading = false;\n          }\n        );\n        break;\n      case 'autoSubmitted':\n        this.reportService.getAutoSubmittedAfter30Mins().subscribe(\n          (data) => {\n            this.reportData = data || [];\n            this.isLoading = false;\n          },\n          (error) => {\n            this.errorMessage = 'Error fetching data';\n            this.isLoading = false;\n          }\n        );\n        break;\n      default:\n        this.errorMessage = 'We Are working On this Report, Please Check After Some Time.';\n        this.isLoading = false;\n        break;\n    }\n  }\n\n  // Download report data as CSV\ndownloadCSV(): void {\n  let csvData = '';\n  let headers = '';\n\n  if (this.selectedReport === 'testsPerDay') {\n    headers = 'Date,Number of Tests\\n';\n    csvData = this.reportData.map(row => `${row.date},${row.numberOfTests}`).join('\\n');\n  } \n  else if (this.selectedReport === 'finishedBeforeTime') {\n    headers = 'Exam Result ID,User Name,User Email,Exam Title,Total Score,Percentage,Passed,Completed Date,Duration\\n';\n    csvData = this.reportData.map(row => \n      `${row.examResultId},${row.userName},${row.userEmail},${row.examTitle},${row.totalScore},${row.percentage},${row.passed ? 'Pass' : 'Fail'},${row.completedDate},${row.duration}`\n    ).join('\\n');\n  } \n  else if (this.selectedReport === 'markedForReview') {\n    headers = 'Date,Marked For Review,User Name,User Email,Exam Title,Total Score,Passed\\n';\n    csvData = this.reportData.map(row => \n      `${row.completedDate},${row.markforreview},${row.userName},${row.userEmail},${row.examTitle},${row.totalScore},${row.passed ? 'Pass' : 'Fail'}`\n    ).join('\\n');\n  } \n  else if (this.selectedReport === 'autoSubmitted') {\n    headers = 'Exam Result ID,User Name,User Email,Exam Title,Total Score,Percentage,Passed,Completed Date,Duration,Total Questions,Attempted Questions\\n';\n    csvData = this.reportData.map(row => \n      `${row.examResultId},${row.userName},${row.userEmail},${row.examTitle},${row.totalScore},${row.percentage},${row.passed ? 'Pass' : 'Fail'},${row.completedDate},${row.duration},${row.totalQuestions},${row.attemptedQuestions}`\n    ).join('\\n');\n  }\n\n  const blob = new Blob([headers + csvData], { type: 'text/csv' });\n  saveAs(blob, `${this.selectedReport}-report.csv`);\n}\n\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n    Select Report:\n    \n      Select a report\n      \n        {{ report.label }}\n      \n    \n  \n\n  \n  \n    {{ errorMessage }}\n  \n\n  \n  \n    \n      Loading...\n    \n  \n\n  \n   0 && !isLoading\">\n    \n    \n      \n        \n          \n            Date\n            Number of Tests\n          \n        \n        \n          \n            {{ row.date | date: 'shortDate' }}\n            {{ row.numberOfTests }}\n          \n        \n      \n    \n\n    \n    \n      \n        \n          \n            Exam Result ID\n            User Name\n            User Email\n            Exam Title\n            Total Score\n            Percentage\n            Passed\n            Completed Date\n            Duration\n          \n        \n        \n          \n            {{ row.examResultId }}\n            {{ row.userName }}\n            {{ row.userEmail }}\n            {{ row.examTitle }}\n            {{ row.totalScore }}\n            {{ row.percentage | number:'1.2-2' }}%\n            \n              \n                {{ row.passed ? 'Pass' : 'Fail' }}\n              \n            \n            {{ row.completedDate | date: 'short' }}\n            {{ row.duration }} min\n          \n        \n      \n    \n\n    \n    \n      \n        \n          \n            Date\n            Marked For Review\n            User Name\n            User Email\n            Exam Title\n            Total Score\n            Passed\n          \n        \n        \n          \n            {{ row.completedDate | date: 'shortDate' }}\n            {{ row.markforreview }}\n            {{ row.userName }}\n            {{ row.userEmail }}\n            {{ row.examTitle }}\n            {{ row.totalScore }}\n            \n              \n                {{ row.passed ? 'Pass' : 'Fail' }}\n              \n            \n          \n        \n      \n    \n\n    \n    \n      \n        \n          \n            Exam Result ID\n            User Name\n            User Email\n            Exam Title\n            Total Score\n            Percentage\n            Passed\n            Completed Date\n            Duration\n            Total Questions\n            Attempted Questions\n          \n        \n        \n          \n            {{ row.examResultId }}\n            {{ row.userName }}\n            {{ row.userEmail }}\n            {{ row.examTitle }}\n            {{ row.totalScore }}\n            {{ row.percentage | number:'1.2-2' }}%\n            \n              \n                {{ row.passed ? 'Pass' : 'Fail' }}\n              \n            \n            {{ row.completedDate | date: 'short' }}\n            {{ row.duration }} min\n            {{ row.totalQuestions }}\n            {{ row.attemptedQuestions }}\n          \n        \n      \n    \n\n    \n    \n      Download CSV\n    \n  \n\n\n    \n\n    \n                \n                    ./admin-report.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Select Report:          Select a report              {{ report.label }}                    {{ errorMessage }}                Loading...           0 && !isLoading\">                                            Date            Number of Tests                                                {{ row.date | date: \\'shortDate\\' }}            {{ row.numberOfTests }}                                                                        Exam Result ID            User Name            User Email            Exam Title            Total Score            Percentage            Passed            Completed Date            Duration                                                {{ row.examResultId }}            {{ row.userName }}            {{ row.userEmail }}            {{ row.examTitle }}            {{ row.totalScore }}            {{ row.percentage | number:\\'1.2-2\\' }}%                                          {{ row.passed ? \\'Pass\\' : \\'Fail\\' }}                                      {{ row.completedDate | date: \\'short\\' }}            {{ row.duration }} min                                                                        Date            Marked For Review            User Name            User Email            Exam Title            Total Score            Passed                                                {{ row.completedDate | date: \\'shortDate\\' }}            {{ row.markforreview }}            {{ row.userName }}            {{ row.userEmail }}            {{ row.examTitle }}            {{ row.totalScore }}                                          {{ row.passed ? \\'Pass\\' : \\'Fail\\' }}                                                                                                  Exam Result ID            User Name            User Email            Exam Title            Total Score            Percentage            Passed            Completed Date            Duration            Total Questions            Attempted Questions                                                {{ row.examResultId }}            {{ row.userName }}            {{ row.userEmail }}            {{ row.examTitle }}            {{ row.totalScore }}            {{ row.percentage | number:\\'1.2-2\\' }}%                                          {{ row.passed ? \\'Pass\\' : \\'Fail\\' }}                                      {{ row.completedDate | date: \\'short\\' }}            {{ row.duration }} min            {{ row.totalQuestions }}            {{ row.attemptedQuestions }}                                          Download CSV      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminExamComponent', 'selector': 'app-admin-exam'},{'name': 'AdminNavbarComponent', 'selector': 'app-admin-navbar'},{'name': 'AdminReportComponent', 'selector': 'app-admin-report'},{'name': 'AdminResultComponent', 'selector': 'app-admin-result'},{'name': 'AdminSectionComponent', 'selector': 'app-admin-section'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExamComponent', 'selector': 'app-exam'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResultComponent', 'selector': 'app-result'},{'name': 'ResultHistoryComponent', 'selector': 'app-result-history'},{'name': 'SectionComponent', 'selector': 'app-section'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminReportComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminResultComponent.html":{"url":"components/AdminResultComponent.html","title":"component - AdminResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/admin-result/admin-result.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-result\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                AdminNavbarComponent\n                \n            \n\n            \n                styleUrls\n                ./admin-result.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin-result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                errorMessage\n                            \n                            \n                                examResults\n                            \n                            \n                                filteredResults\n                            \n                            \n                                isLoading\n                            \n                            \n                                pageSize\n                            \n                            \n                                percentageFilter\n                            \n                            \n                                searchTerm\n                            \n                            \n                                sortAscending\n                            \n                            \n                                sortField\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyPercentageFilter\n                            \n                            \n                                downloadCSV\n                            \n                            \n                                loadResults\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                search\n                            \n                            \n                                sortResults\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    paginatedResults\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(examResultService: ExamResultService, userService: UserService, examService: ExamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/admin-result/admin-result.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        examResultService\n                                                  \n                                                        \n                                                                        ExamResultService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        examService\n                                                  \n                                                        \n                                                                        ExamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyPercentageFilter\n                        \n                    \n                \n            \n            \n                \napplyPercentageFilter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-result/admin-result.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadCSV\n                        \n                    \n                \n            \n            \n                \ndownloadCSV()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-result/admin-result.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadResults\n                        \n                    \n                \n            \n            \n                \nloadResults()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-result/admin-result.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-result/admin-result.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-result/admin-result.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortResults\n                        \n                    \n                \n            \n            \n                \nsortResults(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/admin-result/admin-result.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-result/admin-result.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-result/admin-result.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        examResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-result/admin-result.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-result/admin-result.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-result/admin-result.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-result/admin-result.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        percentageFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"all\" | \"top20\" | \"top50\" | \"bottom20\"\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-result/admin-result.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-result/admin-result.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortAscending\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-result/admin-result.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'percentage'\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin-result/admin-result.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        paginatedResults\n                    \n                \n\n                \n                    \n                        getpaginatedResults()\n                    \n                \n                            \n                                \n                                    Defined in src/app/admin/admin-result/admin-result.component.ts:112\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ExamResultService } from '../../services/exam-result.service';\nimport { UserService } from '../../services/user.service';\nimport { ExamService } from '../../services/exam.service';\nimport { forkJoin } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { saveAs } from 'file-saver'; // Import saveAs from file-saver\nimport { AdminNavbarComponent } from '../admin-navbar/admin-navbar.component';\n\n@Component({\n  selector: 'app-admin-result',\n  templateUrl: './admin-result.component.html',\n  styleUrls: ['./admin-result.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule, AdminNavbarComponent]\n})\nexport class AdminResultComponent implements OnInit {\n  examResults: any[] = [];\n  filteredResults: any[] = [];\n  isLoading = true;\n  errorMessage = '';\n  searchTerm = '';\n  currentPage = 1;\n  pageSize = 5;\n  sortField = 'percentage';\n  sortAscending = true;\n  percentageFilter: 'all' | 'top20' | 'top50' | 'bottom20' = 'all';\n\n  constructor(\n    private examResultService: ExamResultService,\n    private userService: UserService,\n    private examService: ExamService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadResults();\n  }\n\n  loadResults(): void {\n    this.examResultService.getAllResults().subscribe(\n      (results) => {\n        const userRequests = results.map((result: any) =>\n          this.userService.getUserById(result.userId)\n        );\n\n        const examRequests = results.map((result: any) =>\n          this.examService.getExamById(result.examId)\n        );\n\n        forkJoin([forkJoin(userRequests), forkJoin(examRequests)]).subscribe(\n          ([userData, examData]) => {\n            results.forEach((result: any, index: number) => {\n              result.username = userData[index]?.userName;\n              result.email = userData[index]?.email;\n              result.examTitle = examData[index]?.title;\n            });\n\n            this.examResults = results;\n            this.filteredResults = [...this.examResults];\n            this.isLoading = false;\n          },\n          (error) => {\n            this.errorMessage = 'Error fetching data';\n            this.isLoading = false;\n          }\n        );\n      },\n      (error) => {\n        this.errorMessage = 'Error loading exam results';\n        this.isLoading = false;\n      }\n    );\n  }\n\n  search(): void {\n    this.filteredResults = this.examResults.filter(result =>\n      result.username.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n      result.email.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n      result.examTitle.toLowerCase().includes(this.searchTerm.toLowerCase())\n    );\n  }\n\n  sortResults(field: string): void {\n    this.sortField = field;\n    this.sortAscending = !this.sortAscending;\n    this.filteredResults.sort((a, b) => {\n      if (this.sortAscending) {\n        return a[field] > b[field] ? 1 : -1;\n      } else {\n        return a[field]  result.percentage >= 80);\n        break;\n      case 'top50':\n        this.filteredResults = this.examResults.filter(result => result.percentage >= 50 );\n        break;\n      case 'bottom20':\n        this.filteredResults = this.examResults.filter(result => result.percentage  {\n      return `${result.username},${result.email},${result.examTitle},${result.totalScore},${result.percentage}%,${result.passed ? 'Yes' : 'No'},${result.attemptNumber}`;\n    });\n\n    const csvContent = csvHeaders + csvRows.join('\\n');\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    saveAs(blob, 'filtered-results.csv');\n  }\n}\n\n    \n\n    \n        \n\n\n    All Exam Results\n  \n    \n    \n      \n        \n      \n  \n      \n        \n          All Results\n          Top 20% Scores\n          Top 50% Scores\n          Bottom 20% Scores\n        \n      \n      \n      Download CSV\n    \n  \n    \n    \n      {{ errorMessage }}\n    \n  \n    \n     0\" class=\"table-responsive\">\n      \n        \n          \n            User Name\n            Email\n            Exam Title\n            Score\n            Percentage\n            Passed\n            Attempt Number\n            Exam Date\n          \n        \n        \n          \n            {{ result.username }}\n            {{ result.email }}\n            {{ result.examTitle }}\n            {{ result.totalScore }}\n            {{ result.percentage }}%\n            {{ result.passed ? 'Yes' : 'No' }}\n            {{ result.attemptNumber }}\n            {{ result.completedDate }}\n            \n          \n        \n      \n  \n      \n      \n        \n          \n            Previous\n          \n          = filteredResults.length\">\n            Next\n          \n        \n      \n    \n  \n  \n    \n\n    \n                \n                    ./admin-result.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    All Exam Results                                                        All Results          Top 20% Scores          Top 50% Scores          Bottom 20% Scores                          Download CSV                    {{ errorMessage }}               0\" class=\"table-responsive\">                                    User Name            Email            Exam Title            Score            Percentage            Passed            Attempt Number            Exam Date                                                {{ result.username }}            {{ result.email }}            {{ result.examTitle }}            {{ result.totalScore }}            {{ result.percentage }}%            {{ result.passed ? \\'Yes\\' : \\'No\\' }}            {{ result.attemptNumber }}            {{ result.completedDate }}                                                                                Previous                    = filteredResults.length\">            Next                                '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminExamComponent', 'selector': 'app-admin-exam'},{'name': 'AdminNavbarComponent', 'selector': 'app-admin-navbar'},{'name': 'AdminReportComponent', 'selector': 'app-admin-report'},{'name': 'AdminResultComponent', 'selector': 'app-admin-result'},{'name': 'AdminSectionComponent', 'selector': 'app-admin-section'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExamComponent', 'selector': 'app-exam'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResultComponent', 'selector': 'app-result'},{'name': 'ResultHistoryComponent', 'selector': 'app-result-history'},{'name': 'SectionComponent', 'selector': 'app-section'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'e-Bill'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './shared/navbar/navbar.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, NavbarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'e-Bill';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminExamComponent', 'selector': 'app-admin-exam'},{'name': 'AdminNavbarComponent', 'selector': 'app-admin-navbar'},{'name': 'AdminReportComponent', 'selector': 'app-admin-report'},{'name': 'AdminResultComponent', 'selector': 'app-admin-result'},{'name': 'AdminSectionComponent', 'selector': 'app-admin-section'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExamComponent', 'selector': 'app-exam'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResultComponent', 'selector': 'app-result'},{'name': 'ResultHistoryComponent', 'selector': 'app-result-history'},{'name': 'SectionComponent', 'selector': 'app-section'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth-guard.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-guard.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentRole\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAuthentication\n                            \n                            \n                                getUserId\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLoggedIn\n                                \n                                \n                                    role\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService, jwtHelper: JwtHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtHelper\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAuthentication\n                        \n                    \n                \n            \n            \n                \ncheckAuthentication()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserId\n                        \n                    \n                \n            \n            \n                \ngetUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentRole\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:58\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLoggedIn\n                    \n                \n\n                \n                    \n                        getisLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth.service.ts:79\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        role\n                    \n                \n\n                \n                    \n                        getrole()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth.service.ts:84\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private loggedIn = new BehaviorSubject(false);\n  private currentRole = new BehaviorSubject(null);\n\n  constructor(private cookieService: CookieService, private jwtHelper: JwtHelperService) {\n    this.checkAuthentication();\n  }\n\n  // Check if the user is authenticated based on the token\n  checkAuthentication() {\n    const token = this.cookieService.get('token');\n    if (token && !this.jwtHelper.isTokenExpired(token)) {\n      this.loggedIn.next(true);\n      const decodedToken = this.jwtHelper.decodeToken(token);\n      this.currentRole.next(decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role']);\n    } else {\n      this.loggedIn.next(false);\n      this.currentRole.next(null);\n    }\n  }\n\n  // Observable for login status\n  get isLoggedIn() {\n    return this.loggedIn.asObservable();\n  }\n\n  // Observable for the current role\n  get role() {\n    return this.currentRole.asObservable();\n  }\n\n  // Logout and delete the token\n  logout() {\n    this.cookieService.delete('token', '/');\n    this.loggedIn.next(false);\n    this.currentRole.next(null);\n  }\n\n  // Login by setting the token and checking authentication\n  login(token: string) {\n    this.cookieService.set('token', token, { path: '/' });\n    this.checkAuthentication();\n  }\n\n  // New function to get the user ID from the decoded JWT token\n  getUserId(): string | null {\n    const token = this.cookieService.get('token');\n    if (token && !this.jwtHelper.isTokenExpired(token)) {\n      const decodedToken = this.jwtHelper.decodeToken(token);\n      // Extract the user ID from the token\n      return decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier'] || null;\n    }\n    return null;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateExamDto.html":{"url":"interfaces/CreateExamDto.html","title":"interface - CreateExamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateExamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Interface/exam.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdByUserId\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            endDate\n                                        \n                                \n                                \n                                        \n                                            isRandmized\n                                        \n                                \n                                \n                                        \n                                            passingMarks\n                                        \n                                \n                                \n                                        \n                                            startDate\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            totalMarks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdByUserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdByUserId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRandmized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isRandmized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passingMarks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passingMarks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalMarks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalMarks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n}\n\nexport interface UpdateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\nexport interface Exam {\n  examId: number;\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\n\n// Section model for creating a new section\nexport interface SectionPostDTO {\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title (e.g., Math, Science)\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionPostDTO[]; // List of questions in the section\n}\n\n// Section model for fetching a section\nexport interface SectionGetDTO {\n  sectionId: number;           // Section identifier\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionGetDTO[];  // List of questions in the section\n}\n\n// Question model for creating a new question\nexport interface QuestionPostDTO {\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionPostDTO[];     // List of options for the question\n  MediaUrl: string;\n}\n\n// Question model for fetching a question\nexport interface QuestionGetDTO {\n  questionId: number;           // Question identifier\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionGetDTO[];      // List of options for the question\n}\n// Option model for creating a new option\nexport interface OptionPostDTO {\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n// Option model for fetching an option\nexport interface OptionGetDTO {\n  optionId: number;             // Option identifier\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Exam.html":{"url":"interfaces/Exam.html","title":"interface - Exam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Exam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Interface/exam.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdByUserId\n                                        \n                                \n                                \n                                        \n                                            createdDate\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            endDate\n                                        \n                                \n                                \n                                        \n                                            examId\n                                        \n                                \n                                \n                                        \n                                            isPublished\n                                        \n                                \n                                \n                                        \n                                            isRandmized\n                                        \n                                \n                                \n                                        \n                                            passingMarks\n                                        \n                                \n                                \n                                        \n                                            startDate\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            totalMarks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdByUserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdByUserId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        examId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        examId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRandmized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isRandmized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passingMarks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passingMarks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalMarks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalMarks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n}\n\nexport interface UpdateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\nexport interface Exam {\n  examId: number;\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\n\n// Section model for creating a new section\nexport interface SectionPostDTO {\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title (e.g., Math, Science)\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionPostDTO[]; // List of questions in the section\n}\n\n// Section model for fetching a section\nexport interface SectionGetDTO {\n  sectionId: number;           // Section identifier\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionGetDTO[];  // List of questions in the section\n}\n\n// Question model for creating a new question\nexport interface QuestionPostDTO {\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionPostDTO[];     // List of options for the question\n  MediaUrl: string;\n}\n\n// Question model for fetching a question\nexport interface QuestionGetDTO {\n  questionId: number;           // Question identifier\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionGetDTO[];      // List of options for the question\n}\n// Option model for creating a new option\nexport interface OptionPostDTO {\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n// Option model for fetching an option\nexport interface OptionGetDTO {\n  optionId: number;             // Option identifier\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExamComponent.html":{"url":"components/ExamComponent.html","title":"component - ExamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/User/exam/exam.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-exam\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                NavbarComponent\n                \n            \n\n            \n                styleUrls\n                ./exam.component.css\n            \n\n\n\n            \n                templateUrl\n                ./exam.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                exams\n                            \n                            \n                                selectedExam\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                startExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(examService: ExamService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/User/exam/exam.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        examService\n                                                  \n                                                        \n                                                                        ExamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/User/exam/exam.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startExam\n                        \n                    \n                \n            \n            \n                \nstartExam(exam: Exam)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/User/exam/exam.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exam\n                                            \n                                                            Exam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        exams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Exam[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/User/exam/exam.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedExam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Exam | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/User/exam/exam.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common'; // Import CommonModule\nimport { Router } from '@angular/router';\nimport { ExamService } from '../../services/exam.service';\nimport { Exam } from '../../Interface/exam.model';\nimport { NavbarComponent } from '../../shared/navbar/navbar.component';\n\n@Component({\n  selector: 'app-exam',\n  standalone: true,\n  imports: [CommonModule, NavbarComponent],  // Add CommonModule here\n  templateUrl: './exam.component.html',\n  styleUrls: ['./exam.component.css']\n})\nexport class ExamComponent implements OnInit {\n  exams: Exam[] = [];\n  selectedExam: Exam | null = null;  // Track which exam the user clicked \"Start\" on\n\n  constructor(private examService: ExamService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.examService.getExams().subscribe((data: Exam[]) => {\n      this.exams = data.filter(exam => exam.isPublished); // Show only published exams\n    });\n  }\n\n  // Navigate to the SectionComponent where exam sections and questions are displayed\n  startExam(exam: Exam): void {\n    this.selectedExam = exam;\n    // Directly navigate to the section component (exam section and question page)\n    this.router.navigate([`/exam/${this.selectedExam.examId}`]);\n  }\n}\n\n    \n\n    \n        \n\n  Available Exams\n\n  \n  \n    No exams available at the moment.\n  \n\n  \n  \n    \n      \n        \n          {{ exam.title }}\n          {{ exam.description }}\n          \n            Start Date: {{ exam.startDate | date:'short' }}\n            End Date: {{ exam.endDate | date:'short' }}\n          \n          Start Exam\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./exam.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Available Exams        No exams available at the moment.                                  {{ exam.title }}          {{ exam.description }}                      Start Date: {{ exam.startDate | date:\\'short\\' }}            End Date: {{ exam.endDate | date:\\'short\\' }}                    Start Exam                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminExamComponent', 'selector': 'app-admin-exam'},{'name': 'AdminNavbarComponent', 'selector': 'app-admin-navbar'},{'name': 'AdminReportComponent', 'selector': 'app-admin-report'},{'name': 'AdminResultComponent', 'selector': 'app-admin-result'},{'name': 'AdminSectionComponent', 'selector': 'app-admin-section'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExamComponent', 'selector': 'app-exam'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResultComponent', 'selector': 'app-result'},{'name': 'ResultHistoryComponent', 'selector': 'app-result-history'},{'name': 'SectionComponent', 'selector': 'app-section'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExamResultService.html":{"url":"injectables/ExamResultService.html","title":"injectable - ExamResultService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExamResultService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/exam-result.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                resultUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllResults\n                            \n                            \n                                getResultsByUser\n                            \n                            \n                                submitExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/exam-result.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllResults\n                        \n                    \n                \n            \n            \n                \ngetAllResults()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/exam-result.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResultsByUser\n                        \n                    \n                \n            \n            \n                \ngetResultsByUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/exam-result.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitExam\n                        \n                    \n                \n            \n            \n                \nsubmitExam(examData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/exam-result.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:7205/api/ExamResult/Submit'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/exam-result.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resultUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/ExamResult`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/exam-result.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';  // Assuming this is your environment config\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExamResultService {\n  private apiUrl = 'https://localhost:7205/api/ExamResult/Submit';  // URL for submitting the exam\n  private resultUrl = `${environment.apiUrl}/ExamResult`;  // Base URL for fetching results\n\n  constructor(private http: HttpClient) {}\n\n  // Function to submit the exam\n  submitExam(examData: any): Observable {\n    return this.http.post(this.apiUrl, examData);\n  }\n\n  // Function to get results by user ID\n  getResultsByUser(userId: string): Observable {\n    return this.http.get(`${this.resultUrl}/GetResultsByUser/${userId}`);\n  }\n\n  // Fetch all results\n  getAllResults(): Observable {\n    return this.http.get(`${this.resultUrl}/GetAllResults`);  // Corrected URL\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExamService.html":{"url":"injectables/ExamService.html","title":"injectable - ExamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/exam.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createExam\n                            \n                            \n                                deleteExam\n                            \n                            \n                                getExamById\n                            \n                            \n                                getExams\n                            \n                            \n                                updateExam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/exam.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createExam\n                        \n                    \n                \n            \n            \n                \ncreateExam(examData: CreateExamDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/exam.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examData\n                                            \n                                                            CreateExamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteExam\n                        \n                    \n                \n            \n            \n                \ndeleteExam(examId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/exam.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExamById\n                        \n                    \n                \n            \n            \n                \ngetExamById(examId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/exam.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExams\n                        \n                    \n                \n            \n            \n                \ngetExams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/exam.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateExam\n                        \n                    \n                \n            \n            \n                \nupdateExam(examId: number, examData: UpdateExamDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/exam.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                examData\n                                            \n                                                            UpdateExamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/exam`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/exam.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Exam } from '../Interface/exam.model';\nimport { CreateExamDto, UpdateExamDto } from '../Interface/exam.model';  // Assuming these interfaces exist\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExamService {\n  private apiUrl = `${environment.apiUrl}/exam`;  // Adjust this API URL as needed\n\n  constructor(private http: HttpClient) {}\n\n  // Fetch all exams\n  getExams(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n\n  // Fetch specific exam by ID\n  getExamById(examId: number): Observable {\n    return this.http.get(`${this.apiUrl}/${examId}`);\n  }\n\n  // Create a new exam\n  createExam(examData: CreateExamDto): Observable {\n    return this.http.post(this.apiUrl, examData);\n  }\n\n  // Update an existing exam\n  updateExam(examId: number, examData: UpdateExamDto): Observable {\n    return this.http.put(`${this.apiUrl}/${examId}`, examData);\n  }\n\n  // Delete an exam\n  deleteExam(examId: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${examId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/User/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            CookieService\n                \n            \n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            HttpClientModule\n                            RouterLink\n                                NavbarComponent\n                \n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loginForm\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, userService: UserService, router: Router, cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/User/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/User/login/login.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/User/login/login.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/User/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/User/login/login.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Router, RouterLink } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from '../../shared/navbar/navbar.component';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterLink,\n    NavbarComponent\n  ],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [CookieService]  // Provide the CookieService\n})\nexport class LoginComponent {\n\n  loginForm: FormGroup;\n  submitted = false;\n  errorMessage: string | null = null;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private router: Router,\n    private cookieService: CookieService  // Inject CookieService\n  ) {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    const loginData = this.loginForm.value;\n\n    this.userService.login(loginData).subscribe({\n      next: (response) => {\n        // Store the token in cookies\n        this.cookieService.set('token', response.token, {\n          expires: new Date(response.expiresOn),\n          secure: true,  // Ensure it's only sent over HTTPS\n          sameSite: 'Strict'  // Prevent CSRF\n        });\n\n        // Redirect based on role\n        if (response.roles.includes('Admin')) {\n          this.router.navigate(['/admin-dashboard']);\n        } else if (response.roles.includes('User')) {\n          this.router.navigate(['/user-dashboard']);\n        }\n      },\n      error: (error) => {\n        this.errorMessage = error.error.message || 'Login failed. Please try again.';\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      Login to Exam\n      Your convenient solution for Learning.\n      \n        \n          \n            \n          \n          \n            \n              \n                \n                  Email\n                  \n                  \n                    Valid email is required.\n                    Email is invalid.\n                  \n                \n                \n                  Password\n                  \n                  \n                    Password is required.\n                    \n                      Password must be at least 6 characters.\n                    \n                  \n                \n                \n                  Login\n                \n              \n              Don't have an account? Signup\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .card-img {\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n}\n\n\n.is-invalid {\n  border-color: #dc3545;\n}\n\n.invalid-feedback {\n  display: block;\n}\n\n.form-group{\n  margin-top: 5%;\n}\n\n\n.btn {\n  margin-top: 1.5rem;\n}\n\n.navbar-nav.ml-auto {\n  margin-left: auto;\n}\n.card-body{\n  border-width: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Login to Exam      Your convenient solution for Learning.                                                                                                                    Email                                                        Valid email is required.                    Email is invalid.                                                                    Password                                                        Password is required.                                          Password must be at least 6 characters.                                                                                        Login                                            Don\\'t have an account? Signup                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminExamComponent', 'selector': 'app-admin-exam'},{'name': 'AdminNavbarComponent', 'selector': 'app-admin-navbar'},{'name': 'AdminReportComponent', 'selector': 'app-admin-report'},{'name': 'AdminResultComponent', 'selector': 'app-admin-result'},{'name': 'AdminSectionComponent', 'selector': 'app-admin-section'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExamComponent', 'selector': 'app-exam'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResultComponent', 'selector': 'app-result'},{'name': 'ResultHistoryComponent', 'selector': 'app-result-history'},{'name': 'SectionComponent', 'selector': 'app-section'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginModel.html":{"url":"interfaces/LoginModel.html","title":"interface - LoginModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n// Interface for user registration\nexport interface RegisterModel {\n  userName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  role?: string;  // Optional role field with default value\n}\n\n// Interface for user login\nexport interface LoginModel {\n  email: string;\n  password: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private authUrl = `${environment.apiUrl}/auth`; // URL for auth-related requests\n  private userUrl = `${environment.apiUrl}/User`; // URL for user-related requests\n\n  constructor(private http: HttpClient) { }\n\n  // Register a new user\n  register(user: RegisterModel): Observable {\n    if (!user.role) {\n      user.role = 'User';  // Set the default role to \"User\"\n    }\n    return this.http.post(`${this.authUrl}/register`, user);\n  }\n\n  // User login\n  login(user: LoginModel): Observable {\n    return this.http.post(`${this.authUrl}/login`, user);\n  }\n\n  // Fetch user details by ID\n  getUserById(userId: string): Observable {\n    return this.http.get(`${this.userUrl}/GetUserById/${userId}`);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentRole\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                navigateToLogin\n                            \n                            \n                                navigateToRegister\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/navbar/navbar.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navbar/navbar.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToLogin\n                        \n                    \n                \n            \n            \n                \nnavigateToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navbar/navbar.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToRegister\n                        \n                    \n                \n            \n            \n                \nnavigateToRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navbar/navbar.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navbar/navbar.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navbar/navbar.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navbar/navbar.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navbar/navbar.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, RouterOutlet, RouterLink } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../services/auth.service';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [CommonModule, RouterLink],\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  isLoggedIn = false;\n  currentRole: string | null = null;\n\n  constructor(\n    public router: Router,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    // Listen for login status changes\n    this.authService.isLoggedIn.subscribe(status => {\n      this.isLoggedIn = status;\n    });\n\n    // Listen for role changes\n    this.authService.role.subscribe(role => {\n      this.currentRole = role;\n    });\n\n    // Listen for route changes to update the navbar accordingly\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe(() => {\n      this.authService.checkAuthentication();  // Recheck authentication on every route change\n    });\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  navigateToLogin() {\n    this.router.navigate(['/login']);\n  }\n\n  navigateToRegister() {\n    this.router.navigate(['/register']);\n  }\n}\n\n    \n\n    \n        \n    \n      \n      Examm\n    \n    \n      \n    \n    \n      \n        \n        \n          Register\n        \n  \n        \n        \n          Login\n        \n  \n        \n        \n          Home\n        \n        \n          Exam\n        \n        \n          Result\n        \n        \n  \n        \n        \n          \n            User\n          \n          \n            Account\n            \n            Logout\n          \n        \n      \n    \n  \n  \n    \n\n    \n                \n                    ./navbar.component.css\n                \n                .navbar {\n  height: 70px;\n  padding: 0px 20px;\n}\n\n.navbar-nav .nav-item.active .nav-link {\n  font-weight: bold;\n  color: #ffffff;\n}\n\n.navbar-nav .nav-link {\n  color: rgba(255,255,255,0.7);\n}\n\n.navbar-nav .nav-link:hover {\n  color: #ffffff;\n}\n\n.navbar-nav .dropdown-menu {\n  background-color: #343a40;\n}\n\n.navbar-nav .dropdown-menu .dropdown-item {\n  color: #ffffff;\n}\n\n.navbar-nav .dropdown-menu .dropdown-item:hover {\n  background-color: #495057;\n}\n\n.navbar-nav.ml-auto {\n  margin-left: auto;\n}\n.navbar-nav.navbar-collapse {\n  margin-left: auto;\n}\n\n\n.dropdown-menu{\n  left: auto !important; \n  right: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Examm                                                      Register                                    Login                                    Home                          Exam                          Result                                                        User                                Account                        Logout                                '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminExamComponent', 'selector': 'app-admin-exam'},{'name': 'AdminNavbarComponent', 'selector': 'app-admin-navbar'},{'name': 'AdminReportComponent', 'selector': 'app-admin-report'},{'name': 'AdminResultComponent', 'selector': 'app-admin-result'},{'name': 'AdminSectionComponent', 'selector': 'app-admin-section'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExamComponent', 'selector': 'app-exam'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResultComponent', 'selector': 'app-result'},{'name': 'ResultHistoryComponent', 'selector': 'app-result-history'},{'name': 'SectionComponent', 'selector': 'app-section'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Option.html":{"url":"interfaces/Option.html","title":"interface - Option","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Option\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/question.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isCorrect\n                                        \n                                \n                                \n                                        \n                                            optionId\n                                        \n                                \n                                \n                                        \n                                            optionText\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isCorrect\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCorrect:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optionText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';  // Adjust this path if necessary\n\nexport interface Option {\n  optionId: number;\n  optionText: string;\n  isCorrect: boolean;\n}\n\nexport interface Question {\n  questionId: number;\n  sectionId: number;\n  questionText: string;\n  isMultipleChoice: boolean;\n  options: Option[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuestionService {\n  private apiUrl = `${environment.apiUrl}/Question`;  // Update with your actual API endpoint\n\n  constructor(private http: HttpClient) {}\n\n  // Method to fetch all questions\n  getAllQuestions(): Observable {\n    return this.http.get(this.apiUrl);  // Make sure this points to the correct API\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OptionDto.html":{"url":"interfaces/OptionDto.html","title":"interface - OptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/section.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isCorrect\n                                        \n                                \n                                \n                                        \n                                            optionId\n                                        \n                                \n                                \n                                        \n                                            optionText\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isCorrect\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCorrect:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optionText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\nexport interface Section {\n  sectionId: number;\n  sectionName: string;\n}\n\nexport interface OptionDto {\n  optionId: number;\n  optionText: string;\n  isCorrect: boolean;\n}\n\nexport interface QuestionDto {\n  questionId: number;\n  questionText: string;\n  isMultipleChoice: boolean;\n  options: OptionDto[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SectionService {\n  private apiUrl = `${environment.apiUrl}/Section`;  // Adjust the API URL\n\n  constructor(private http: HttpClient) {}\n\n  // Updated method to fetch sections by examId using the provided API\n  getSectionsByExamId(examId: number): Observable {\n    return this.http.get(`${this.apiUrl}/Exam/${examId}`);\n  }\n\n  // Method to fetch questions by sectionId\n  getQuestionsBySectionId(sectionId: number): Observable {\n    return this.http.get(`${environment.apiUrl}/Question?sectionId=${sectionId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OptionGetDTO.html":{"url":"interfaces/OptionGetDTO.html","title":"interface - OptionGetDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OptionGetDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Interface/exam.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isCorrect\n                                        \n                                \n                                \n                                        \n                                            optionId\n                                        \n                                \n                                \n                                        \n                                            optionText\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isCorrect\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCorrect:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optionText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n}\n\nexport interface UpdateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\nexport interface Exam {\n  examId: number;\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\n\n// Section model for creating a new section\nexport interface SectionPostDTO {\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title (e.g., Math, Science)\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionPostDTO[]; // List of questions in the section\n}\n\n// Section model for fetching a section\nexport interface SectionGetDTO {\n  sectionId: number;           // Section identifier\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionGetDTO[];  // List of questions in the section\n}\n\n// Question model for creating a new question\nexport interface QuestionPostDTO {\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionPostDTO[];     // List of options for the question\n  MediaUrl: string;\n}\n\n// Question model for fetching a question\nexport interface QuestionGetDTO {\n  questionId: number;           // Question identifier\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionGetDTO[];      // List of options for the question\n}\n// Option model for creating a new option\nexport interface OptionPostDTO {\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n// Option model for fetching an option\nexport interface OptionGetDTO {\n  optionId: number;             // Option identifier\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OptionPostDTO.html":{"url":"interfaces/OptionPostDTO.html","title":"interface - OptionPostDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OptionPostDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Interface/exam.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isCorrect\n                                        \n                                \n                                \n                                        \n                                            optionText\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isCorrect\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCorrect:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optionText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n}\n\nexport interface UpdateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\nexport interface Exam {\n  examId: number;\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\n\n// Section model for creating a new section\nexport interface SectionPostDTO {\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title (e.g., Math, Science)\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionPostDTO[]; // List of questions in the section\n}\n\n// Section model for fetching a section\nexport interface SectionGetDTO {\n  sectionId: number;           // Section identifier\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionGetDTO[];  // List of questions in the section\n}\n\n// Question model for creating a new question\nexport interface QuestionPostDTO {\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionPostDTO[];     // List of options for the question\n  MediaUrl: string;\n}\n\n// Question model for fetching a question\nexport interface QuestionGetDTO {\n  questionId: number;           // Question identifier\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionGetDTO[];      // List of options for the question\n}\n// Option model for creating a new option\nexport interface OptionPostDTO {\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n// Option model for fetching an option\nexport interface OptionGetDTO {\n  optionId: number;             // Option identifier\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Question.html":{"url":"interfaces/Question.html","title":"interface - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/question.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isMultipleChoice\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            questionId\n                                        \n                                \n                                \n                                        \n                                            questionText\n                                        \n                                \n                                \n                                        \n                                            sectionId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isMultipleChoice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMultipleChoice:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         Option[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Option[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';  // Adjust this path if necessary\n\nexport interface Option {\n  optionId: number;\n  optionText: string;\n  isCorrect: boolean;\n}\n\nexport interface Question {\n  questionId: number;\n  sectionId: number;\n  questionText: string;\n  isMultipleChoice: boolean;\n  options: Option[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuestionService {\n  private apiUrl = `${environment.apiUrl}/Question`;  // Update with your actual API endpoint\n\n  constructor(private http: HttpClient) {}\n\n  // Method to fetch all questions\n  getAllQuestions(): Observable {\n    return this.http.get(this.apiUrl);  // Make sure this points to the correct API\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionDto.html":{"url":"interfaces/QuestionDto.html","title":"interface - QuestionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QuestionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/section.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isMultipleChoice\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            questionId\n                                        \n                                \n                                \n                                        \n                                            questionText\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isMultipleChoice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMultipleChoice:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     OptionDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OptionDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\nexport interface Section {\n  sectionId: number;\n  sectionName: string;\n}\n\nexport interface OptionDto {\n  optionId: number;\n  optionText: string;\n  isCorrect: boolean;\n}\n\nexport interface QuestionDto {\n  questionId: number;\n  questionText: string;\n  isMultipleChoice: boolean;\n  options: OptionDto[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SectionService {\n  private apiUrl = `${environment.apiUrl}/Section`;  // Adjust the API URL\n\n  constructor(private http: HttpClient) {}\n\n  // Updated method to fetch sections by examId using the provided API\n  getSectionsByExamId(examId: number): Observable {\n    return this.http.get(`${this.apiUrl}/Exam/${examId}`);\n  }\n\n  // Method to fetch questions by sectionId\n  getQuestionsBySectionId(sectionId: number): Observable {\n    return this.http.get(`${environment.apiUrl}/Question?sectionId=${sectionId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionGetDTO.html":{"url":"interfaces/QuestionGetDTO.html","title":"interface - QuestionGetDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QuestionGetDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Interface/exam.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdDate\n                                        \n                                \n                                \n                                        \n                                            isMultipleChoice\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            questionId\n                                        \n                                \n                                \n                                        \n                                            questionText\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMultipleChoice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMultipleChoice:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     OptionGetDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OptionGetDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n}\n\nexport interface UpdateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\nexport interface Exam {\n  examId: number;\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\n\n// Section model for creating a new section\nexport interface SectionPostDTO {\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title (e.g., Math, Science)\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionPostDTO[]; // List of questions in the section\n}\n\n// Section model for fetching a section\nexport interface SectionGetDTO {\n  sectionId: number;           // Section identifier\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionGetDTO[];  // List of questions in the section\n}\n\n// Question model for creating a new question\nexport interface QuestionPostDTO {\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionPostDTO[];     // List of options for the question\n  MediaUrl: string;\n}\n\n// Question model for fetching a question\nexport interface QuestionGetDTO {\n  questionId: number;           // Question identifier\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionGetDTO[];      // List of options for the question\n}\n// Option model for creating a new option\nexport interface OptionPostDTO {\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n// Option model for fetching an option\nexport interface OptionGetDTO {\n  optionId: number;             // Option identifier\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionPostDTO.html":{"url":"interfaces/QuestionPostDTO.html","title":"interface - QuestionPostDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QuestionPostDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Interface/exam.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdDate\n                                        \n                                \n                                \n                                        \n                                            isMultipleChoice\n                                        \n                                \n                                \n                                        \n                                            MediaUrl\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            questionText\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMultipleChoice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMultipleChoice:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MediaUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MediaUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     OptionPostDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OptionPostDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n}\n\nexport interface UpdateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\nexport interface Exam {\n  examId: number;\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\n\n// Section model for creating a new section\nexport interface SectionPostDTO {\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title (e.g., Math, Science)\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionPostDTO[]; // List of questions in the section\n}\n\n// Section model for fetching a section\nexport interface SectionGetDTO {\n  sectionId: number;           // Section identifier\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionGetDTO[];  // List of questions in the section\n}\n\n// Question model for creating a new question\nexport interface QuestionPostDTO {\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionPostDTO[];     // List of options for the question\n  MediaUrl: string;\n}\n\n// Question model for fetching a question\nexport interface QuestionGetDTO {\n  questionId: number;           // Question identifier\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionGetDTO[];      // List of options for the question\n}\n// Option model for creating a new option\nexport interface OptionPostDTO {\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n// Option model for fetching an option\nexport interface OptionGetDTO {\n  optionId: number;             // Option identifier\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/question.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllQuestions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/question.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllQuestions\n                        \n                    \n                \n            \n            \n                \ngetAllQuestions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/question.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/Question`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/question.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';  // Adjust this path if necessary\n\nexport interface Option {\n  optionId: number;\n  optionText: string;\n  isCorrect: boolean;\n}\n\nexport interface Question {\n  questionId: number;\n  sectionId: number;\n  questionText: string;\n  isMultipleChoice: boolean;\n  options: Option[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuestionService {\n  private apiUrl = `${environment.apiUrl}/Question`;  // Update with your actual API endpoint\n\n  constructor(private http: HttpClient) {}\n\n  // Method to fetch all questions\n  getAllQuestions(): Observable {\n    return this.http.get(this.apiUrl);  // Make sure this points to the correct API\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/User/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            HttpClientModule\n                            RouterLink\n                                NavbarComponent\n                \n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                registerForm\n                            \n                            \n                                submitted\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/User/register/register.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/User/register/register.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(form: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/User/register/register.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { mismatch: boolean; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/User/register/register.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/User/register/register.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/User/register/register.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/User/register/register.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Router, RouterLink } from '@angular/router';  // Import Router\nimport { UserService, RegisterModel } from '../../services/user.service';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from '../../shared/navbar/navbar.component';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterLink,\n    NavbarComponent\n  ],\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  registerForm: FormGroup;\n  submitted = false;\n  successMessage: string | null = null;\n  errorMessage: string | null = null;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private router: Router  // Inject Router\n  ) {\n    this.registerForm = this.formBuilder.group({\n      userName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required]\n    }, { validator: this.passwordMatchValidator });\n  }\n\n  passwordMatchValidator(form: FormGroup) {\n    return form.get('password')!.value === form.get('confirmPassword')!.value\n      ? null : { mismatch: true };\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    const registerData: RegisterModel = this.registerForm.value;\n\n    console.log(registerData);\n    this.userService.register(registerData).subscribe({\n      next: (response) => {\n        this.successMessage = 'Registration successful!';\n        this.errorMessage = null;\n        this.registerForm.reset();\n        this.submitted = false;\n        \n        // Redirect to login after successful registration\n        this.router.navigate(['/login']);\n      },\n      error: (error) => {\n        this.errorMessage = error.error.message || 'Registration failed. Please try again.';\n        this.successMessage = null;\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      Register to Examm\n      Your convenient solution for Learning\n      \n        \n          \n            \n          \n          \n            \n              \n              \n                \n                \n                  Name\n                  \n                  \n                    Name is required.\n                  \n                \n\n                \n                \n                  Email\n                  \n                  \n                    Valid email is required.\n                    Email is invalid.\n                  \n                \n\n                \n                \n                  Password\n                  \n                  \n                    Password is required.\n                    Password must be at least 6 characters long.\n                  \n                \n\n                \n                \n                  Confirm Password\n                  \n                  \n                    Confirmation password is required.\n                    Passwords do not match.\n                  \n                \n\n                \n                  Register\n                \n              \n\n              Already have an account? Login\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .card-img {\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n}\n\n\n.is-invalid {\n  border-color: #dc3545;\n}\n\n.invalid-feedback {\n  display: block;\n}\n\n/* .card-body {\n  min-width: 400px; \n} */\n\n.btn {\n  margin-top: 1rem;\n}\n.form-group{\n  margin-top: 3%;\n}\n\n\n\n.navbar-nav.ml-auto {\n  margin-left: auto;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Register to Examm      Your convenient solution for Learning                                                                                                                                                  Name                                                        Name is required.                                                                                    Email                                                        Valid email is required.                    Email is invalid.                                                                                    Password                                                        Password is required.                    Password must be at least 6 characters long.                                                                                    Confirm Password                                                        Confirmation password is required.                    Passwords do not match.                                                                    Register                                            Already have an account? Login                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminExamComponent', 'selector': 'app-admin-exam'},{'name': 'AdminNavbarComponent', 'selector': 'app-admin-navbar'},{'name': 'AdminReportComponent', 'selector': 'app-admin-report'},{'name': 'AdminResultComponent', 'selector': 'app-admin-result'},{'name': 'AdminSectionComponent', 'selector': 'app-admin-section'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExamComponent', 'selector': 'app-exam'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResultComponent', 'selector': 'app-result'},{'name': 'ResultHistoryComponent', 'selector': 'app-result-history'},{'name': 'SectionComponent', 'selector': 'app-section'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterModel.html":{"url":"interfaces/RegisterModel.html","title":"interface - RegisterModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            confirmPassword\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n// Interface for user registration\nexport interface RegisterModel {\n  userName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  role?: string;  // Optional role field with default value\n}\n\n// Interface for user login\nexport interface LoginModel {\n  email: string;\n  password: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private authUrl = `${environment.apiUrl}/auth`; // URL for auth-related requests\n  private userUrl = `${environment.apiUrl}/User`; // URL for user-related requests\n\n  constructor(private http: HttpClient) { }\n\n  // Register a new user\n  register(user: RegisterModel): Observable {\n    if (!user.role) {\n      user.role = 'User';  // Set the default role to \"User\"\n    }\n    return this.http.post(`${this.authUrl}/register`, user);\n  }\n\n  // User login\n  login(user: LoginModel): Observable {\n    return this.http.post(`${this.authUrl}/login`, user);\n  }\n\n  // Fetch user details by ID\n  getUserById(userId: string): Observable {\n    return this.http.get(`${this.userUrl}/GetUserById/${userId}`);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReportService.html":{"url":"injectables/ReportService.html","title":"injectable - ReportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/report.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAutoSubmittedAfter30Mins\n                            \n                            \n                                getTestsFinishedBeforeTime\n                            \n                            \n                                getTestsMarkedForReview\n                            \n                            \n                                getTestsPerDay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/report.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAutoSubmittedAfter30Mins\n                        \n                    \n                \n            \n            \n                \ngetAutoSubmittedAfter30Mins()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/report.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTestsFinishedBeforeTime\n                        \n                    \n                \n            \n            \n                \ngetTestsFinishedBeforeTime()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/report.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTestsMarkedForReview\n                        \n                    \n                \n            \n            \n                \ngetTestsMarkedForReview()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/report.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTestsPerDay\n                        \n                    \n                \n            \n            \n                \ngetTestsPerDay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/report.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/Reports`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/report.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';  // Adjust according to your environment configuration\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService {\n  private baseUrl = `${environment.apiUrl}/Reports`;  // Base URL for the Reports API\n\n  constructor(private http: HttpClient) {}\n\n  // 1. Get number of tests taken per day\n  getTestsPerDay(): Observable {\n    return this.http.get(`${this.baseUrl}/TestsPerDay`);\n  }\n\n  // 2. Get tests finished before 20% of the time\n  getTestsFinishedBeforeTime(): Observable {\n    return this.http.get(`${this.baseUrl}/FinishedBeforeTime`);\n  }\n\n  // 3. Get auto-submitted tests after 30 minutes and less than 50% of questions attempted\n  getAutoSubmittedAfter30Mins(): Observable {\n    return this.http.get(`${this.baseUrl}/AutoSubmittedAfter30Mins`);\n  }\n\n  // 4. Get tests where 50% or more questions were marked for review\n  getTestsMarkedForReview(): Observable {\n    return this.http.get(`${this.baseUrl}/MarkedForReview`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultComponent.html":{"url":"components/ResultComponent.html","title":"component - ResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/User/result/result.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-result\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./result.component.css\n            \n\n\n\n            \n                templateUrl\n                ./result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                examResult\n                            \n                            \n                                passed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/User/result/result.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exit\n                        \n                    \n                \n            \n            \n                \nexit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/User/result/result.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/User/result/result.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        examResult\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/User/result/result.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/User/result/result.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css'],\n  standalone: true,\n  imports: [CommonModule]\n})\nexport class ResultComponent implements OnInit {\n  examResult: any = null;  // Holds the exam result data\n  passed: boolean = false; // Holds the overall result pass/fail status\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    // Fetch the exam result from localStorage\n    const resultData = localStorage.getItem('examResult');\n    if (resultData) {\n      this.examResult = JSON.parse(resultData);\n      this.passed = this.examResult.passed; // Assuming 'passed' is part of the response\n    }\n  }\n\n  // Method to exit and clear localStorage\n  exit(): void {\n    localStorage.clear();  // Clear the localStorage\n    this.router.navigate(['/user-dashboard']);  // Redirect to user dashboard\n  }\n}\n\n    \n\n    \n        \n    Exam Result\n\n    \n    \n        \n            ✅ Congratulations! You Passed!\n        \n        \n            ❌ Unfortunately, You Failed.\n        \n    \n\n    \n    \n        \n            \n                Attempt Number: {{ examResult.attemptNumber }}\n            \n            \n                Total Score: {{ examResult.totalScore }}\n            \n            \n                Percentage: {{ examResult.percentage | number:'1.2-2' }}%\n            \n            \n                Duration: {{ examResult.duration }} minutes\n            \n        \n    \\\n\n    \n    \n        Section-wise Results\n        \n            \n                \n                    #\n                    Section ID\n                    Attempted Questions\n                    Correct Answers\n                    Score\n                    Status\n                \n            \n            \n                \n                    {{ i + 1 }}\n                    {{ section.sectionId }}\n                    {{ section.attemptedQuestions }}\n                    {{ section.correctAnswers }}\n                    {{ section.sectionScore }}\n                    \n                        \n                            {{ section.isPassed ? '✅ Pass' : '❌ Fail' }}\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        Exit\n    \n\n    \n\n    \n                \n                    ./result.component.css\n                \n                .text-success {\n    color: green;\n  }\n  \n  .text-danger {\n    color: red;\n  }\n  \n  h3 i {\n    font-size: 1.5rem;\n  }\n  \n  .table-striped {\n    width: 100%;\n    margin: 20px auto;\n    border: 1px solid #ddd;\n  }\n  \n  .table-striped th, .table-striped td {\n    padding: 10px;\n    text-align: center;\n  }\n  \n  .btn-primary {\n    background-color: #007bff;\n    border-color: #007bff;\n    color: white;\n    padding: 10px 20px;\n    font-size: 1.2rem;\n    transition: background-color 0.3s ease;\n  }\n  \n  .btn-primary:hover {\n    background-color: #0056b3;\n  }\n  \n  .text-success {\n    color: green;\n  }\n  \n  .text-danger {\n    color: red;\n  }\n  \n  .table-striped th, .table-striped td {\n    padding: 10px;\n    text-align: center;\n  }\n  \n  .btn-primary {\n    background-color: #007bff;\n    color: white;\n    padding: 10px 20px;\n    font-size: 1.2rem;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Exam Result                            ✅ Congratulations! You Passed!                            ❌ Unfortunately, You Failed.                                                        Attempt Number: {{ examResult.attemptNumber }}                                        Total Score: {{ examResult.totalScore }}                                        Percentage: {{ examResult.percentage | number:\\'1.2-2\\' }}%                                        Duration: {{ examResult.duration }} minutes                        \\                Section-wise Results                                                        #                    Section ID                    Attempted Questions                    Correct Answers                    Score                    Status                                                                            {{ i + 1 }}                    {{ section.sectionId }}                    {{ section.attemptedQuestions }}                    {{ section.correctAnswers }}                    {{ section.sectionScore }}                                                                        {{ section.isPassed ? \\'✅ Pass\\' : \\'❌ Fail\\' }}                                                                                                    Exit    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminExamComponent', 'selector': 'app-admin-exam'},{'name': 'AdminNavbarComponent', 'selector': 'app-admin-navbar'},{'name': 'AdminReportComponent', 'selector': 'app-admin-report'},{'name': 'AdminResultComponent', 'selector': 'app-admin-result'},{'name': 'AdminSectionComponent', 'selector': 'app-admin-section'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExamComponent', 'selector': 'app-exam'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResultComponent', 'selector': 'app-result'},{'name': 'ResultHistoryComponent', 'selector': 'app-result-history'},{'name': 'SectionComponent', 'selector': 'app-section'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultHistoryComponent.html":{"url":"components/ResultHistoryComponent.html","title":"component - ResultHistoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResultHistoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/User/result-history/result-history.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-result-history\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                NavbarComponent\n                \n            \n\n            \n                styleUrls\n                ./result-history.component.css\n            \n\n\n\n            \n                templateUrl\n                ./result-history.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                examResults\n                            \n                            \n                                isLoading\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchExamNames\n                            \n                            \n                                loadExamResults\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(examResultService: ExamResultService, examService: ExamService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/User/result-history/result-history.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        examResultService\n                                                  \n                                                        \n                                                                        ExamResultService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        examService\n                                                  \n                                                        \n                                                                        ExamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchExamNames\n                        \n                    \n                \n            \n            \n                \nfetchExamNames(results: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/User/result-history/result-history.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                results\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadExamResults\n                        \n                    \n                \n            \n            \n                \nloadExamResults()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/User/result-history/result-history.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/User/result-history/result-history.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/User/result-history/result-history.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        examResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/User/result-history/result-history.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/User/result-history/result-history.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/User/result-history/result-history.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ExamResultService } from '../../services/exam-result.service';\nimport { ExamService } from '../../services/exam.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Observable, forkJoin } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from '../../shared/navbar/navbar.component';\n\n@Component({\n  selector: 'app-result-history',\n  standalone: true,\n  templateUrl: './result-history.component.html',\n  styleUrls: ['./result-history.component.css'],\n  imports: [CommonModule, NavbarComponent]\n})\nexport class ResultHistoryComponent implements OnInit {\n  userId: string | null = null;\n  examResults: any[] = [];\n  isLoading: boolean = true;\n  errorMessage: string | null = null;\n\n  constructor(\n    private examResultService: ExamResultService,\n    private examService: ExamService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    // Fetch userId from the JWT token\n    this.userId = this.authService.getUserId();\n\n    if (this.userId) {\n      this.loadExamResults();\n    }\n  }\n\n  // Load exam results for the user and fetch the exam names\n  loadExamResults(): void {\n    this.examResultService.getResultsByUser(this.userId!).subscribe(\n      (results: any[]) => {\n        if (results.length > 0) {\n          this.fetchExamNames(results);\n        } else {\n          this.examResults = results;\n          this.isLoading = false;\n        }\n      },\n      (error: any) => {\n        console.error('Error loading exam results:', error);\n        this.errorMessage = error.error ? error.error : 'Failed to load exam results';\n        this.isLoading = false;\n      }\n    );\n  }\n\n  // Fetch exam names for each result and add to exam results array\n  fetchExamNames(results: any[]): void {\n    const examRequests: Observable[] = [];\n\n    // Create an array of observables for fetching exam details\n    results.forEach((result) => {\n      examRequests.push(this.examService.getExamById(result.examId));\n    });\n\n    // Wait for all exam requests to complete\n    forkJoin(examRequests).subscribe(\n      (examData) => {\n        examData.forEach((exam, index) => {\n          results[index].examName = exam.title;  // Assuming the exam name is stored in \"title\"\n        });\n        this.examResults = results;\n        this.isLoading = false;\n      },\n      (error: any) => {\n        console.error('Error fetching exam names:', error);\n        this.isLoading = false;\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n\n\n    Your Exam Results\n  \n    \n    \n      \n        Loading...\n      \n    \n  \n    \n    \n      {{ errorMessage }}\n    \n  \n    \n     0\">\n      \n        \n          Exam: {{ result.examName }} \n          Score: {{ result.totalScore }}\n          Percentage: {{ result.percentage }}%\n          Passed: {{ result.passed ? 'Yes' : 'No' }}\n          Duration: {{ result.duration }} minutes\n          Completed: {{ result.completedDate | date:'short' }}\n        \n      \n    \n  \n    \n    \n      No exam results found.\n    \n  \n  \n    \n\n    \n                \n                    ./result-history.component.css\n                \n                .result-card{\n    width: 400px; \n    background-color: #f8f9fa;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Your Exam Results                        Loading...                          {{ errorMessage }}               0\">                        Exam: {{ result.examName }}           Score: {{ result.totalScore }}          Percentage: {{ result.percentage }}%          Passed: {{ result.passed ? \\'Yes\\' : \\'No\\' }}          Duration: {{ result.duration }} minutes          Completed: {{ result.completedDate | date:\\'short\\' }}                                  No exam results found.        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminExamComponent', 'selector': 'app-admin-exam'},{'name': 'AdminNavbarComponent', 'selector': 'app-admin-navbar'},{'name': 'AdminReportComponent', 'selector': 'app-admin-report'},{'name': 'AdminResultComponent', 'selector': 'app-admin-result'},{'name': 'AdminSectionComponent', 'selector': 'app-admin-section'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExamComponent', 'selector': 'app-exam'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResultComponent', 'selector': 'app-result'},{'name': 'ResultHistoryComponent', 'selector': 'app-result-history'},{'name': 'SectionComponent', 'selector': 'app-section'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultHistoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Section.html":{"url":"interfaces/Section.html","title":"interface - Section","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Section\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/section.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sectionId\n                                        \n                                \n                                \n                                        \n                                            sectionName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sectionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\nexport interface Section {\n  sectionId: number;\n  sectionName: string;\n}\n\nexport interface OptionDto {\n  optionId: number;\n  optionText: string;\n  isCorrect: boolean;\n}\n\nexport interface QuestionDto {\n  questionId: number;\n  questionText: string;\n  isMultipleChoice: boolean;\n  options: OptionDto[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SectionService {\n  private apiUrl = `${environment.apiUrl}/Section`;  // Adjust the API URL\n\n  constructor(private http: HttpClient) {}\n\n  // Updated method to fetch sections by examId using the provided API\n  getSectionsByExamId(examId: number): Observable {\n    return this.http.get(`${this.apiUrl}/Exam/${examId}`);\n  }\n\n  // Method to fetch questions by sectionId\n  getQuestionsBySectionId(sectionId: number): Observable {\n    return this.http.get(`${environment.apiUrl}/Question?sectionId=${sectionId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SectionActionService.html":{"url":"injectables/SectionActionService.html","title":"injectable - SectionActionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SectionActionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/section-action.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuestion\n                            \n                            \n                                addQuestionToSection\n                            \n                            \n                                createSection\n                            \n                            \n                                deleteQuestion\n                            \n                            \n                                deleteSection\n                            \n                            \n                                getSectionById\n                            \n                            \n                                getSectionsByExamId\n                            \n                            \n                                updateSection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/section-action.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addQuestion\n                        \n                    \n                \n            \n            \n                \naddQuestion(sectionId: number, questionData: QuestionPostDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/section-action.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sectionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                questionData\n                                            \n                                                            QuestionPostDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuestionToSection\n                        \n                    \n                \n            \n            \n                \naddQuestionToSection(questionData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/section-action.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                questionData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSection\n                        \n                    \n                \n            \n            \n                \ncreateSection(sectionData: SectionPostDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/section-action.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sectionData\n                                            \n                                                            SectionPostDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteQuestion\n                        \n                    \n                \n            \n            \n                \ndeleteQuestion(questionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/section-action.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                questionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSection\n                        \n                    \n                \n            \n            \n                \ndeleteSection(sectionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/section-action.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sectionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSectionById\n                        \n                    \n                \n            \n            \n                \ngetSectionById(sectionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/section-action.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sectionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSectionsByExamId\n                        \n                    \n                \n            \n            \n                \ngetSectionsByExamId(examId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/section-action.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSection\n                        \n                    \n                \n            \n            \n                \nupdateSection(sectionId: number, sectionData: SectionPostDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/section-action.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sectionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sectionData\n                                            \n                                                            SectionPostDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/SectionAction`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/section-action.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SectionPostDTO, SectionGetDTO, QuestionPostDTO } from '../Interface/exam.model';\nimport { environment } from '../../environments/environment'; // Make sure your environment contains the API URL\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SectionActionService {\n  private apiUrl = `${environment.apiUrl}/SectionAction`; // The base URL for section actions\n\n  constructor(private http: HttpClient) {}\n\n  // Get sections by ExamId\n  getSectionsByExamId(examId: number): Observable {\n    return this.http.get(`${this.apiUrl}/exam/${examId}`);\n  }\n\n  // Get section by SectionId\n  getSectionById(sectionId: number): Observable {\n    return this.http.get(`${this.apiUrl}/${sectionId}`);\n  }\n\n  // Create a new section\n  createSection(sectionData: SectionPostDTO): Observable {\n    return this.http.post(this.apiUrl, sectionData);\n  }\n\n  // Update a section by SectionId\n  updateSection(sectionId: number, sectionData: SectionPostDTO): Observable {\n    return this.http.put(`${this.apiUrl}/${sectionId}`, sectionData);\n  }\n\n  // Delete a section by SectionId\n  deleteSection(sectionId: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${sectionId}`);\n  }\n\n  //Add a new question to a section\n  addQuestion(sectionId: number, questionData: QuestionPostDTO): Observable {\n    return this.http.post(`${this.apiUrl}/${sectionId}/questions`, questionData);\n  }\n\n  // Inside SectionActionService\n// addQuestion(sectionId: number, questionData: QuestionPostDTO): Observable {\n//   const headers = { 'Content-Type': 'application/json' };\n//   return this.http.post(`${this.apiUrl}/${sectionId}/questions`, questionData, { headers });\n// }\n\n// Inside SectionActionService\n// addQuestion(sectionId: number, questionData: { questionDto: QuestionPostDTO }): Observable {\n//   return this.http.post(`${this.apiUrl}/${sectionId}/questions`, questionData);\n// }\n\n\n\n  // Delete a question by QuestionId\n  deleteQuestion(questionId: number): Observable {\n    return this.http.delete(`${this.apiUrl}/questions/${questionId}`);\n  }\n  \n  addQuestionToSection(questionData: { sectionId: number, questionText: string, isMultipleChoice: boolean, options: { optionText: string, isCorrect: boolean }[] }): Observable {\n    return this.http.post('https://localhost:7205/api/Question', questionData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SectionGetDTO.html":{"url":"interfaces/SectionGetDTO.html","title":"interface - SectionGetDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SectionGetDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Interface/exam.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            examId\n                                        \n                                \n                                \n                                        \n                                            numberOfQuestions\n                                        \n                                \n                                \n                                        \n                                            passingMarks\n                                        \n                                \n                                \n                                        \n                                            questions\n                                        \n                                \n                                \n                                        \n                                            sectionId\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            totalMarks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        examId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        examId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfQuestions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfQuestions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passingMarks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passingMarks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questions:     QuestionGetDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     QuestionGetDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalMarks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalMarks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n}\n\nexport interface UpdateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\nexport interface Exam {\n  examId: number;\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\n\n// Section model for creating a new section\nexport interface SectionPostDTO {\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title (e.g., Math, Science)\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionPostDTO[]; // List of questions in the section\n}\n\n// Section model for fetching a section\nexport interface SectionGetDTO {\n  sectionId: number;           // Section identifier\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionGetDTO[];  // List of questions in the section\n}\n\n// Question model for creating a new question\nexport interface QuestionPostDTO {\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionPostDTO[];     // List of options for the question\n  MediaUrl: string;\n}\n\n// Question model for fetching a question\nexport interface QuestionGetDTO {\n  questionId: number;           // Question identifier\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionGetDTO[];      // List of options for the question\n}\n// Option model for creating a new option\nexport interface OptionPostDTO {\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n// Option model for fetching an option\nexport interface OptionGetDTO {\n  optionId: number;             // Option identifier\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SectionPostDTO.html":{"url":"interfaces/SectionPostDTO.html","title":"interface - SectionPostDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SectionPostDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Interface/exam.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            examId\n                                        \n                                \n                                \n                                        \n                                            numberOfQuestions\n                                        \n                                \n                                \n                                        \n                                            passingMarks\n                                        \n                                \n                                \n                                        \n                                            questions\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            totalMarks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        examId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        examId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfQuestions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfQuestions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passingMarks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passingMarks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questions:     QuestionPostDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     QuestionPostDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalMarks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalMarks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n}\n\nexport interface UpdateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\nexport interface Exam {\n  examId: number;\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\n\n// Section model for creating a new section\nexport interface SectionPostDTO {\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title (e.g., Math, Science)\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionPostDTO[]; // List of questions in the section\n}\n\n// Section model for fetching a section\nexport interface SectionGetDTO {\n  sectionId: number;           // Section identifier\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionGetDTO[];  // List of questions in the section\n}\n\n// Question model for creating a new question\nexport interface QuestionPostDTO {\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionPostDTO[];     // List of options for the question\n  MediaUrl: string;\n}\n\n// Question model for fetching a question\nexport interface QuestionGetDTO {\n  questionId: number;           // Question identifier\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionGetDTO[];      // List of options for the question\n}\n// Option model for creating a new option\nexport interface OptionPostDTO {\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n// Option model for fetching an option\nexport interface OptionGetDTO {\n  optionId: number;             // Option identifier\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SectionService.html":{"url":"injectables/SectionService.html","title":"injectable - SectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/section.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getQuestionsBySectionId\n                            \n                            \n                                getSectionsByExamId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/section.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getQuestionsBySectionId\n                        \n                    \n                \n            \n            \n                \ngetQuestionsBySectionId(sectionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/section.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sectionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSectionsByExamId\n                        \n                    \n                \n            \n            \n                \ngetSectionsByExamId(examId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/section.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                examId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/Section`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/section.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\nexport interface Section {\n  sectionId: number;\n  sectionName: string;\n}\n\nexport interface OptionDto {\n  optionId: number;\n  optionText: string;\n  isCorrect: boolean;\n}\n\nexport interface QuestionDto {\n  questionId: number;\n  questionText: string;\n  isMultipleChoice: boolean;\n  options: OptionDto[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SectionService {\n  private apiUrl = `${environment.apiUrl}/Section`;  // Adjust the API URL\n\n  constructor(private http: HttpClient) {}\n\n  // Updated method to fetch sections by examId using the provided API\n  getSectionsByExamId(examId: number): Observable {\n    return this.http.get(`${this.apiUrl}/Exam/${examId}`);\n  }\n\n  // Method to fetch questions by sectionId\n  getQuestionsBySectionId(sectionId: number): Observable {\n    return this.http.get(`${environment.apiUrl}/Question?sectionId=${sectionId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateExamDto.html":{"url":"interfaces/UpdateExamDto.html","title":"interface - UpdateExamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateExamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Interface/exam.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdByUserId\n                                        \n                                \n                                \n                                        \n                                            createdDate\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            endDate\n                                        \n                                \n                                \n                                        \n                                            isPublished\n                                        \n                                \n                                \n                                        \n                                            isRandmized\n                                        \n                                \n                                \n                                        \n                                            passingMarks\n                                        \n                                \n                                \n                                        \n                                            startDate\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            totalMarks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdByUserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdByUserId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRandmized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isRandmized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passingMarks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passingMarks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalMarks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalMarks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n}\n\nexport interface UpdateExamDto {\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\nexport interface Exam {\n  examId: number;\n  title: string;\n  description: string;\n  startDate: Date;\n  endDate: Date;\n  duration: number;\n  totalMarks: number;\n  passingMarks: number;\n  createdByUserId: string;\n  isRandmized: boolean;\n  isPublished: boolean;\n  createdDate: Date;\n}\n\n\n// Section model for creating a new section\nexport interface SectionPostDTO {\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title (e.g., Math, Science)\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionPostDTO[]; // List of questions in the section\n}\n\n// Section model for fetching a section\nexport interface SectionGetDTO {\n  sectionId: number;           // Section identifier\n  examId: number;              // Foreign key to Exam\n  title: string;               // Section title\n  numberOfQuestions: number;   // Number of questions in the section\n  totalMarks: number;          // Total marks for the section\n  passingMarks: number;        // Minimum marks required to pass\n  questions: QuestionGetDTO[];  // List of questions in the section\n}\n\n// Question model for creating a new question\nexport interface QuestionPostDTO {\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionPostDTO[];     // List of options for the question\n  MediaUrl: string;\n}\n\n// Question model for fetching a question\nexport interface QuestionGetDTO {\n  questionId: number;           // Question identifier\n  questionText: string;         // The question text\n  isMultipleChoice: boolean;          // Indicates if the question allows multiple answers\n  createdDate: Date;            // Date the question was created\n  options: OptionGetDTO[];      // List of options for the question\n}\n// Option model for creating a new option\nexport interface OptionPostDTO {\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n// Option model for fetching an option\nexport interface OptionGetDTO {\n  optionId: number;             // Option identifier\n  optionText: string;           // Text for the option\n  isCorrect: boolean;           // Indicates if the option is correct\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/User/user/user.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavbarComponent\n                \n            \n\n            \n                styleUrls\n                ./user.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToExam\n                            \n                            \n                                goToProfile\n                            \n                            \n                                goToResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/User/user/user.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToExam\n                        \n                    \n                \n            \n            \n                \ngoToExam()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/User/user/user.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToProfile\n                        \n                    \n                \n            \n            \n                \ngoToProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/User/user/user.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToResults\n                        \n                    \n                \n            \n            \n                \ngoToResults()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/User/user/user.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NavbarComponent } from '../../shared/navbar/navbar.component';\n\n@Component({\n  selector: 'app-user',\n  standalone: true,\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css'],\n  imports: [NavbarComponent]\n})\nexport class UserComponent {\n\n  constructor(private router: Router) { }\n\n  goToExam() {\n    this.router.navigate(['/exam']); // Assuming exam route is set\n  }\n\n  goToResults() {\n    this.router.navigate(['/exam-result']); // Assuming results route is set\n  }\n\n  goToProfile() {\n    this.router.navigate(['/profile']); // Assuming profile route is set\n  }\n}\n\n    \n\n    \n        \n\n    \n      \n        User Dashboard\n      \n    \n  \n    \n      \n      \n        \n          \n            Exams\n            View and take your upcoming exams.\n            Go to Exams\n          \n        \n      \n  \n      \n      \n        \n          \n            Results\n            Check your exam results and performance.\n            View Results\n          \n        \n      \n  \n      \n      \n        \n          \n            Profile\n            View and edit your profile details.\n            Go to Profile\n          \n        \n      \n    \n  \n  \n    \n\n    \n                \n                    ./user.component.css\n                \n                .container {\n    max-width: 1200px;\n    margin: auto;\n  }\n  \n  .card {\n    border-radius: 10px;\n    transition: transform 0.3s ease;\n  }\n  \n  .card:hover {\n    transform: translateY(-10px);\n  }\n  \n  .card-title {\n    font-size: 1.5rem;\n  }\n  \n  .card-text {\n    font-size: 1rem;\n    color: #6c757d;\n  }\n  \n  .btn {\n    padding: 10px 20px;\n    font-size: 1rem;\n    border-radius: 25px;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  User Dashboard                                                          Exams            View and take your upcoming exams.            Go to Exams                                                                    Results            Check your exam results and performance.            View Results                                                                    Profile            View and edit your profile details.            Go to Profile                                '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminExamComponent', 'selector': 'app-admin-exam'},{'name': 'AdminNavbarComponent', 'selector': 'app-admin-navbar'},{'name': 'AdminReportComponent', 'selector': 'app-admin-report'},{'name': 'AdminResultComponent', 'selector': 'app-admin-result'},{'name': 'AdminSectionComponent', 'selector': 'app-admin-section'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ExamComponent', 'selector': 'app-exam'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResultComponent', 'selector': 'app-result'},{'name': 'ResultHistoryComponent', 'selector': 'app-result-history'},{'name': 'SectionComponent', 'selector': 'app-section'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authUrl\n                            \n                            \n                                    Private\n                                userUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserById\n                            \n                            \n                                login\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: LoginModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            LoginModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(user: RegisterModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            RegisterModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/auth`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/User`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n// Interface for user registration\nexport interface RegisterModel {\n  userName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  role?: string;  // Optional role field with default value\n}\n\n// Interface for user login\nexport interface LoginModel {\n  email: string;\n  password: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private authUrl = `${environment.apiUrl}/auth`; // URL for auth-related requests\n  private userUrl = `${environment.apiUrl}/User`; // URL for user-related requests\n\n  constructor(private http: HttpClient) { }\n\n  // Register a new user\n  register(user: RegisterModel): Observable {\n    if (!user.role) {\n      user.role = 'User';  // Set the default role to \"User\"\n    }\n    return this.http.post(`${this.authUrl}/register`, user);\n  }\n\n  // User login\n  login(user: LoginModel): Observable {\n    return this.http.post(`${this.authUrl}/login`, user);\n  }\n\n  // Fetch user details by ID\n  getUserById(userId: string): Observable {\n    return this.http.get(`${this.userUrl}/GetUserById/${userId}`);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/Interface/exam.model.ts\n            \n            interface\n            CreateExamDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/Interface/exam.model.ts\n            \n            interface\n            Exam\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/Interface/exam.model.ts\n            \n            interface\n            OptionGetDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/Interface/exam.model.ts\n            \n            interface\n            OptionPostDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Interface/exam.model.ts\n            \n            interface\n            QuestionGetDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/Interface/exam.model.ts\n            \n            interface\n            QuestionPostDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/Interface/exam.model.ts\n            \n            interface\n            SectionGetDTO\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/Interface/exam.model.ts\n            \n            interface\n            SectionPostDTO\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/Interface/exam.model.ts\n            \n            interface\n            UpdateExamDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/User/exam/exam.component.ts\n            \n            component\n            ExamComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/User/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/User/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/User/result-history/result-history.component.ts\n            \n            component\n            ResultHistoryComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/User/result/result.component.ts\n            \n            component\n            ResultComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/User/section/section.component.ts\n            \n            component\n            SectionComponent\n            \n                0 %\n                (0/37)\n            \n        \n        \n            \n                \n                src/app/User/user/user.component.ts\n            \n            component\n            UserComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/admin/admin-exam/admin-exam.component.ts\n            \n            component\n            AdminExamComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/admin/admin-navbar/admin-navbar.component.ts\n            \n            component\n            AdminNavbarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/admin/admin-report/admin-report.component.ts\n            \n            component\n            AdminReportComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/admin/admin-result/admin-result.component.ts\n            \n            component\n            AdminResultComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/admin/admin-section/admin-section.component.ts\n            \n            component\n            AdminSectionComponent\n            \n                0 %\n                (0/36)\n            \n        \n        \n            \n                \n                src/app/admin/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth-guard.service.ts\n            \n            injectable\n            AuthGuardService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/exam-result.service.ts\n            \n            injectable\n            ExamResultService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/exam.service.ts\n            \n            injectable\n            ExamService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/question.service.ts\n            \n            injectable\n            QuestionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/question.service.ts\n            \n            interface\n            Option\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/question.service.ts\n            \n            interface\n            Question\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/report.service.ts\n            \n            injectable\n            ReportService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/section-action.service.ts\n            \n            injectable\n            SectionActionService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/section.service.ts\n            \n            injectable\n            SectionService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/section.service.ts\n            \n            interface\n            OptionDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/section.service.ts\n            \n            interface\n            QuestionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/section.service.ts\n            \n            interface\n            Section\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            interface\n            LoginModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            interface\n            RegisterModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/platform-server : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @angular/ssr : ^18.0.7\n        \n            @auth0/angular-jwt : ^5.2.0\n        \n            bootstrap : ^5.3.3\n        \n            express : ^4.18.2\n        \n            file-saver : ^2.0.5\n        \n            json2csv : ^6.0.0-alpha.2\n        \n            ngx-cookie-service : ^18.0.0\n        \n            ngx-csv : ^0.3.2\n        \n            papaparse : ^5.4.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nEBill\nThis project was generated with Angular CLI version 18.0.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\nExample :\"Online_ExamContextConnection\": \"Server=DESKTOP-RBDOPGI\\\\SQLEXPRESS;Database=Reeval_Monday;Integrated Security=True;TrustServerCertificate=True;\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(), \n    provideHttpClient(withFetch()),\n    { provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\n    JwtHelperService]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const cookieService = inject(CookieService);\n  const jwtHelper = inject(JwtHelperService);\n  const router = inject(Router);\n\n  const token = cookieService.get('token');\n\n  if (token) {\n    // Decode the token to check its validity and role\n    const decodedToken = jwtHelper.decodeToken(token);\n    const role = decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\n\n    if (role) {\n      // Check if the route's data role matches the user's role\n      if (route.data['role'] && route.data['role'].includes(role)) {\n        return true; // Allow the route if the role matches\n      } else {\n        // Redirect to the appropriate dashboard if roles don't match\n        if (role === 'Admin') {\n          router.navigate(['/admin-dashboard']);\n        } else if (role === 'User') {\n          router.navigate(['/user-dashboard']);\n        }\n        return false;\n      }\n    }\n  }\n\n  // If no token or role found, redirect to login\n  router.navigate(['/login']);\n  return false;\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    apiUrl: 'https://localhost:7205/api'  \n  }\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
